(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./assets/js/gallery.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/GL_BP/prod.bundle.js":
/*!****************************************!*\
  !*** ./assets/js/GL_BP/prod.bundle.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){if(true)module.exports=e();else { var r, i; }}(window,(function(){return function(t){var e={};function i(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,i),s.l=!0,s.exports}return i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(r,s,function(e){return t[e]}.bind(null,s));return r},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=7)}({7:function(t,e,i){"use strict";i.r(e),i.d(e,"default",(function(){return se}));var r={};i.r(r),i.d(r,"create",(function(){return h})),i.d(r,"clone",(function(){return u})),i.d(r,"copy",(function(){return l})),i.d(r,"fromValues",(function(){return f})),i.d(r,"set",(function(){return c})),i.d(r,"identity",(function(){return g})),i.d(r,"transpose",(function(){return _})),i.d(r,"invert",(function(){return d})),i.d(r,"adjoint",(function(){return m})),i.d(r,"determinant",(function(){return b})),i.d(r,"multiply",(function(){return p})),i.d(r,"translate",(function(){return M})),i.d(r,"scale",(function(){return A})),i.d(r,"rotate",(function(){return v})),i.d(r,"rotateX",(function(){return R})),i.d(r,"rotateY",(function(){return T})),i.d(r,"rotateZ",(function(){return F})),i.d(r,"fromTranslation",(function(){return y})),i.d(r,"fromScaling",(function(){return E})),i.d(r,"fromRotation",(function(){return U})),i.d(r,"fromXRotation",(function(){return x})),i.d(r,"fromYRotation",(function(){return w})),i.d(r,"fromZRotation",(function(){return B})),i.d(r,"fromRotationTranslation",(function(){return P})),i.d(r,"fromQuat2",(function(){return O})),i.d(r,"getTranslation",(function(){return D})),i.d(r,"getScaling",(function(){return L})),i.d(r,"getRotation",(function(){return V})),i.d(r,"fromRotationTranslationScale",(function(){return I})),i.d(r,"fromRotationTranslationScaleOrigin",(function(){return S})),i.d(r,"fromQuat",(function(){return k})),i.d(r,"frustum",(function(){return C})),i.d(r,"perspective",(function(){return N})),i.d(r,"perspectiveFromFieldOfView",(function(){return j})),i.d(r,"ortho",(function(){return Y})),i.d(r,"lookAt",(function(){return G})),i.d(r,"targetTo",(function(){return z})),i.d(r,"str",(function(){return H})),i.d(r,"frob",(function(){return W})),i.d(r,"add",(function(){return X})),i.d(r,"subtract",(function(){return q})),i.d(r,"multiplyScalar",(function(){return K})),i.d(r,"multiplyScalarAndAdd",(function(){return Z})),i.d(r,"exactEquals",(function(){return Q})),i.d(r,"equals",(function(){return $})),i.d(r,"mul",(function(){return J})),i.d(r,"sub",(function(){return tt}));var s={};i.r(s),i.d(s,"create",(function(){return et})),i.d(s,"clone",(function(){return it})),i.d(s,"length",(function(){return rt})),i.d(s,"fromValues",(function(){return st})),i.d(s,"copy",(function(){return nt})),i.d(s,"set",(function(){return at})),i.d(s,"add",(function(){return ot})),i.d(s,"subtract",(function(){return ht})),i.d(s,"multiply",(function(){return ut})),i.d(s,"divide",(function(){return lt})),i.d(s,"ceil",(function(){return ft})),i.d(s,"floor",(function(){return ct})),i.d(s,"min",(function(){return gt})),i.d(s,"max",(function(){return _t})),i.d(s,"round",(function(){return dt})),i.d(s,"scale",(function(){return mt})),i.d(s,"scaleAndAdd",(function(){return bt})),i.d(s,"distance",(function(){return pt})),i.d(s,"squaredDistance",(function(){return Mt})),i.d(s,"squaredLength",(function(){return At})),i.d(s,"negate",(function(){return vt})),i.d(s,"inverse",(function(){return Rt})),i.d(s,"normalize",(function(){return Tt})),i.d(s,"dot",(function(){return Ft})),i.d(s,"cross",(function(){return yt})),i.d(s,"lerp",(function(){return Et})),i.d(s,"hermite",(function(){return Ut})),i.d(s,"bezier",(function(){return xt})),i.d(s,"random",(function(){return wt})),i.d(s,"transformMat4",(function(){return Bt})),i.d(s,"transformMat3",(function(){return Pt})),i.d(s,"transformQuat",(function(){return Ot})),i.d(s,"rotateX",(function(){return Dt})),i.d(s,"rotateY",(function(){return Lt})),i.d(s,"rotateZ",(function(){return Vt})),i.d(s,"angle",(function(){return It})),i.d(s,"zero",(function(){return St})),i.d(s,"str",(function(){return kt})),i.d(s,"exactEquals",(function(){return Ct})),i.d(s,"equals",(function(){return Nt})),i.d(s,"sub",(function(){return Yt})),i.d(s,"mul",(function(){return Gt})),i.d(s,"div",(function(){return zt})),i.d(s,"dist",(function(){return Ht})),i.d(s,"sqrDist",(function(){return Wt})),i.d(s,"len",(function(){return Xt})),i.d(s,"sqrLen",(function(){return qt})),i.d(s,"forEach",(function(){return Kt}));var n=1e-6,a="undefined"!=typeof Float32Array?Float32Array:Array,o=Math.random;Math.PI;function h(){var t=new a(16);return a!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function u(t){var e=new a(16);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function l(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function f(t,e,i,r,s,n,o,h,u,l,f,c,g,_,d,m){var b=new a(16);return b[0]=t,b[1]=e,b[2]=i,b[3]=r,b[4]=s,b[5]=n,b[6]=o,b[7]=h,b[8]=u,b[9]=l,b[10]=f,b[11]=c,b[12]=g,b[13]=_,b[14]=d,b[15]=m,b}function c(t,e,i,r,s,n,a,o,h,u,l,f,c,g,_,d,m){return t[0]=e,t[1]=i,t[2]=r,t[3]=s,t[4]=n,t[5]=a,t[6]=o,t[7]=h,t[8]=u,t[9]=l,t[10]=f,t[11]=c,t[12]=g,t[13]=_,t[14]=d,t[15]=m,t}function g(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function _(t,e){if(t===e){var i=e[1],r=e[2],s=e[3],n=e[6],a=e[7],o=e[11];t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=i,t[6]=e[9],t[7]=e[13],t[8]=r,t[9]=n,t[11]=e[14],t[12]=s,t[13]=a,t[14]=o}else t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15];return t}function d(t,e){var i=e[0],r=e[1],s=e[2],n=e[3],a=e[4],o=e[5],h=e[6],u=e[7],l=e[8],f=e[9],c=e[10],g=e[11],_=e[12],d=e[13],m=e[14],b=e[15],p=i*o-r*a,M=i*h-s*a,A=i*u-n*a,v=r*h-s*o,R=r*u-n*o,T=s*u-n*h,F=l*d-f*_,y=l*m-c*_,E=l*b-g*_,U=f*m-c*d,x=f*b-g*d,w=c*b-g*m,B=p*w-M*x+A*U+v*E-R*y+T*F;return B?(B=1/B,t[0]=(o*w-h*x+u*U)*B,t[1]=(s*x-r*w-n*U)*B,t[2]=(d*T-m*R+b*v)*B,t[3]=(c*R-f*T-g*v)*B,t[4]=(h*E-a*w-u*y)*B,t[5]=(i*w-s*E+n*y)*B,t[6]=(m*A-_*T-b*M)*B,t[7]=(l*T-c*A+g*M)*B,t[8]=(a*x-o*E+u*F)*B,t[9]=(r*E-i*x-n*F)*B,t[10]=(_*R-d*A+b*p)*B,t[11]=(f*A-l*R-g*p)*B,t[12]=(o*y-a*U-h*F)*B,t[13]=(i*U-r*y+s*F)*B,t[14]=(d*M-_*v-m*p)*B,t[15]=(l*v-f*M+c*p)*B,t):null}function m(t,e){var i=e[0],r=e[1],s=e[2],n=e[3],a=e[4],o=e[5],h=e[6],u=e[7],l=e[8],f=e[9],c=e[10],g=e[11],_=e[12],d=e[13],m=e[14],b=e[15];return t[0]=o*(c*b-g*m)-f*(h*b-u*m)+d*(h*g-u*c),t[1]=-(r*(c*b-g*m)-f*(s*b-n*m)+d*(s*g-n*c)),t[2]=r*(h*b-u*m)-o*(s*b-n*m)+d*(s*u-n*h),t[3]=-(r*(h*g-u*c)-o*(s*g-n*c)+f*(s*u-n*h)),t[4]=-(a*(c*b-g*m)-l*(h*b-u*m)+_*(h*g-u*c)),t[5]=i*(c*b-g*m)-l*(s*b-n*m)+_*(s*g-n*c),t[6]=-(i*(h*b-u*m)-a*(s*b-n*m)+_*(s*u-n*h)),t[7]=i*(h*g-u*c)-a*(s*g-n*c)+l*(s*u-n*h),t[8]=a*(f*b-g*d)-l*(o*b-u*d)+_*(o*g-u*f),t[9]=-(i*(f*b-g*d)-l*(r*b-n*d)+_*(r*g-n*f)),t[10]=i*(o*b-u*d)-a*(r*b-n*d)+_*(r*u-n*o),t[11]=-(i*(o*g-u*f)-a*(r*g-n*f)+l*(r*u-n*o)),t[12]=-(a*(f*m-c*d)-l*(o*m-h*d)+_*(o*c-h*f)),t[13]=i*(f*m-c*d)-l*(r*m-s*d)+_*(r*c-s*f),t[14]=-(i*(o*m-h*d)-a*(r*m-s*d)+_*(r*h-s*o)),t[15]=i*(o*c-h*f)-a*(r*c-s*f)+l*(r*h-s*o),t}function b(t){var e=t[0],i=t[1],r=t[2],s=t[3],n=t[4],a=t[5],o=t[6],h=t[7],u=t[8],l=t[9],f=t[10],c=t[11],g=t[12],_=t[13],d=t[14],m=t[15];return(e*a-i*n)*(f*m-c*d)-(e*o-r*n)*(l*m-c*_)+(e*h-s*n)*(l*d-f*_)+(i*o-r*a)*(u*m-c*g)-(i*h-s*a)*(u*d-f*g)+(r*h-s*o)*(u*_-l*g)}function p(t,e,i){var r=e[0],s=e[1],n=e[2],a=e[3],o=e[4],h=e[5],u=e[6],l=e[7],f=e[8],c=e[9],g=e[10],_=e[11],d=e[12],m=e[13],b=e[14],p=e[15],M=i[0],A=i[1],v=i[2],R=i[3];return t[0]=M*r+A*o+v*f+R*d,t[1]=M*s+A*h+v*c+R*m,t[2]=M*n+A*u+v*g+R*b,t[3]=M*a+A*l+v*_+R*p,M=i[4],A=i[5],v=i[6],R=i[7],t[4]=M*r+A*o+v*f+R*d,t[5]=M*s+A*h+v*c+R*m,t[6]=M*n+A*u+v*g+R*b,t[7]=M*a+A*l+v*_+R*p,M=i[8],A=i[9],v=i[10],R=i[11],t[8]=M*r+A*o+v*f+R*d,t[9]=M*s+A*h+v*c+R*m,t[10]=M*n+A*u+v*g+R*b,t[11]=M*a+A*l+v*_+R*p,M=i[12],A=i[13],v=i[14],R=i[15],t[12]=M*r+A*o+v*f+R*d,t[13]=M*s+A*h+v*c+R*m,t[14]=M*n+A*u+v*g+R*b,t[15]=M*a+A*l+v*_+R*p,t}function M(t,e,i){var r,s,n,a,o,h,u,l,f,c,g,_,d=i[0],m=i[1],b=i[2];return e===t?(t[12]=e[0]*d+e[4]*m+e[8]*b+e[12],t[13]=e[1]*d+e[5]*m+e[9]*b+e[13],t[14]=e[2]*d+e[6]*m+e[10]*b+e[14],t[15]=e[3]*d+e[7]*m+e[11]*b+e[15]):(r=e[0],s=e[1],n=e[2],a=e[3],o=e[4],h=e[5],u=e[6],l=e[7],f=e[8],c=e[9],g=e[10],_=e[11],t[0]=r,t[1]=s,t[2]=n,t[3]=a,t[4]=o,t[5]=h,t[6]=u,t[7]=l,t[8]=f,t[9]=c,t[10]=g,t[11]=_,t[12]=r*d+o*m+f*b+e[12],t[13]=s*d+h*m+c*b+e[13],t[14]=n*d+u*m+g*b+e[14],t[15]=a*d+l*m+_*b+e[15]),t}function A(t,e,i){var r=i[0],s=i[1],n=i[2];return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[3]=e[3]*r,t[4]=e[4]*s,t[5]=e[5]*s,t[6]=e[6]*s,t[7]=e[7]*s,t[8]=e[8]*n,t[9]=e[9]*n,t[10]=e[10]*n,t[11]=e[11]*n,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function v(t,e,i,r){var s,a,o,h,u,l,f,c,g,_,d,m,b,p,M,A,v,R,T,F,y,E,U,x,w=r[0],B=r[1],P=r[2],O=Math.hypot(w,B,P);return O<n?null:(w*=O=1/O,B*=O,P*=O,s=Math.sin(i),o=1-(a=Math.cos(i)),h=e[0],u=e[1],l=e[2],f=e[3],c=e[4],g=e[5],_=e[6],d=e[7],m=e[8],b=e[9],p=e[10],M=e[11],A=w*w*o+a,v=B*w*o+P*s,R=P*w*o-B*s,T=w*B*o-P*s,F=B*B*o+a,y=P*B*o+w*s,E=w*P*o+B*s,U=B*P*o-w*s,x=P*P*o+a,t[0]=h*A+c*v+m*R,t[1]=u*A+g*v+b*R,t[2]=l*A+_*v+p*R,t[3]=f*A+d*v+M*R,t[4]=h*T+c*F+m*y,t[5]=u*T+g*F+b*y,t[6]=l*T+_*F+p*y,t[7]=f*T+d*F+M*y,t[8]=h*E+c*U+m*x,t[9]=u*E+g*U+b*x,t[10]=l*E+_*U+p*x,t[11]=f*E+d*U+M*x,e!==t&&(t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t)}function R(t,e,i){var r=Math.sin(i),s=Math.cos(i),n=e[4],a=e[5],o=e[6],h=e[7],u=e[8],l=e[9],f=e[10],c=e[11];return e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=n*s+u*r,t[5]=a*s+l*r,t[6]=o*s+f*r,t[7]=h*s+c*r,t[8]=u*s-n*r,t[9]=l*s-a*r,t[10]=f*s-o*r,t[11]=c*s-h*r,t}function T(t,e,i){var r=Math.sin(i),s=Math.cos(i),n=e[0],a=e[1],o=e[2],h=e[3],u=e[8],l=e[9],f=e[10],c=e[11];return e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=n*s-u*r,t[1]=a*s-l*r,t[2]=o*s-f*r,t[3]=h*s-c*r,t[8]=n*r+u*s,t[9]=a*r+l*s,t[10]=o*r+f*s,t[11]=h*r+c*s,t}function F(t,e,i){var r=Math.sin(i),s=Math.cos(i),n=e[0],a=e[1],o=e[2],h=e[3],u=e[4],l=e[5],f=e[6],c=e[7];return e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=n*s+u*r,t[1]=a*s+l*r,t[2]=o*s+f*r,t[3]=h*s+c*r,t[4]=u*s-n*r,t[5]=l*s-a*r,t[6]=f*s-o*r,t[7]=c*s-h*r,t}function y(t,e){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=e[0],t[13]=e[1],t[14]=e[2],t[15]=1,t}function E(t,e){return t[0]=e[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function U(t,e,i){var r,s,a,o=i[0],h=i[1],u=i[2],l=Math.hypot(o,h,u);return l<n?null:(o*=l=1/l,h*=l,u*=l,r=Math.sin(e),a=1-(s=Math.cos(e)),t[0]=o*o*a+s,t[1]=h*o*a+u*r,t[2]=u*o*a-h*r,t[3]=0,t[4]=o*h*a-u*r,t[5]=h*h*a+s,t[6]=u*h*a+o*r,t[7]=0,t[8]=o*u*a+h*r,t[9]=h*u*a-o*r,t[10]=u*u*a+s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t)}function x(t,e){var i=Math.sin(e),r=Math.cos(e);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=i,t[7]=0,t[8]=0,t[9]=-i,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function w(t,e){var i=Math.sin(e),r=Math.cos(e);return t[0]=r,t[1]=0,t[2]=-i,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=i,t[9]=0,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function B(t,e){var i=Math.sin(e),r=Math.cos(e);return t[0]=r,t[1]=i,t[2]=0,t[3]=0,t[4]=-i,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function P(t,e,i){var r=e[0],s=e[1],n=e[2],a=e[3],o=r+r,h=s+s,u=n+n,l=r*o,f=r*h,c=r*u,g=s*h,_=s*u,d=n*u,m=a*o,b=a*h,p=a*u;return t[0]=1-(g+d),t[1]=f+p,t[2]=c-b,t[3]=0,t[4]=f-p,t[5]=1-(l+d),t[6]=_+m,t[7]=0,t[8]=c+b,t[9]=_-m,t[10]=1-(l+g),t[11]=0,t[12]=i[0],t[13]=i[1],t[14]=i[2],t[15]=1,t}function O(t,e){var i=new a(3),r=-e[0],s=-e[1],n=-e[2],o=e[3],h=e[4],u=e[5],l=e[6],f=e[7],c=r*r+s*s+n*n+o*o;return c>0?(i[0]=2*(h*o+f*r+u*n-l*s)/c,i[1]=2*(u*o+f*s+l*r-h*n)/c,i[2]=2*(l*o+f*n+h*s-u*r)/c):(i[0]=2*(h*o+f*r+u*n-l*s),i[1]=2*(u*o+f*s+l*r-h*n),i[2]=2*(l*o+f*n+h*s-u*r)),P(t,e,i),t}function D(t,e){return t[0]=e[12],t[1]=e[13],t[2]=e[14],t}function L(t,e){var i=e[0],r=e[1],s=e[2],n=e[4],a=e[5],o=e[6],h=e[8],u=e[9],l=e[10];return t[0]=Math.hypot(i,r,s),t[1]=Math.hypot(n,a,o),t[2]=Math.hypot(h,u,l),t}function V(t,e){var i=new a(3);L(i,e);var r=1/i[0],s=1/i[1],n=1/i[2],o=e[0]*r,h=e[1]*s,u=e[2]*n,l=e[4]*r,f=e[5]*s,c=e[6]*n,g=e[8]*r,_=e[9]*s,d=e[10]*n,m=o+f+d,b=0;return m>0?(b=2*Math.sqrt(m+1),t[3]=.25*b,t[0]=(c-_)/b,t[1]=(g-u)/b,t[2]=(h-l)/b):o>f&&o>d?(b=2*Math.sqrt(1+o-f-d),t[3]=(c-_)/b,t[0]=.25*b,t[1]=(h+l)/b,t[2]=(g+u)/b):f>d?(b=2*Math.sqrt(1+f-o-d),t[3]=(g-u)/b,t[0]=(h+l)/b,t[1]=.25*b,t[2]=(c+_)/b):(b=2*Math.sqrt(1+d-o-f),t[3]=(h-l)/b,t[0]=(g+u)/b,t[1]=(c+_)/b,t[2]=.25*b),t}function I(t,e,i,r){var s=e[0],n=e[1],a=e[2],o=e[3],h=s+s,u=n+n,l=a+a,f=s*h,c=s*u,g=s*l,_=n*u,d=n*l,m=a*l,b=o*h,p=o*u,M=o*l,A=r[0],v=r[1],R=r[2];return t[0]=(1-(_+m))*A,t[1]=(c+M)*A,t[2]=(g-p)*A,t[3]=0,t[4]=(c-M)*v,t[5]=(1-(f+m))*v,t[6]=(d+b)*v,t[7]=0,t[8]=(g+p)*R,t[9]=(d-b)*R,t[10]=(1-(f+_))*R,t[11]=0,t[12]=i[0],t[13]=i[1],t[14]=i[2],t[15]=1,t}function S(t,e,i,r,s){var n=e[0],a=e[1],o=e[2],h=e[3],u=n+n,l=a+a,f=o+o,c=n*u,g=n*l,_=n*f,d=a*l,m=a*f,b=o*f,p=h*u,M=h*l,A=h*f,v=r[0],R=r[1],T=r[2],F=s[0],y=s[1],E=s[2],U=(1-(d+b))*v,x=(g+A)*v,w=(_-M)*v,B=(g-A)*R,P=(1-(c+b))*R,O=(m+p)*R,D=(_+M)*T,L=(m-p)*T,V=(1-(c+d))*T;return t[0]=U,t[1]=x,t[2]=w,t[3]=0,t[4]=B,t[5]=P,t[6]=O,t[7]=0,t[8]=D,t[9]=L,t[10]=V,t[11]=0,t[12]=i[0]+F-(U*F+B*y+D*E),t[13]=i[1]+y-(x*F+P*y+L*E),t[14]=i[2]+E-(w*F+O*y+V*E),t[15]=1,t}function k(t,e){var i=e[0],r=e[1],s=e[2],n=e[3],a=i+i,o=r+r,h=s+s,u=i*a,l=r*a,f=r*o,c=s*a,g=s*o,_=s*h,d=n*a,m=n*o,b=n*h;return t[0]=1-f-_,t[1]=l+b,t[2]=c-m,t[3]=0,t[4]=l-b,t[5]=1-u-_,t[6]=g+d,t[7]=0,t[8]=c+m,t[9]=g-d,t[10]=1-u-f,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function C(t,e,i,r,s,n,a){var o=1/(i-e),h=1/(s-r),u=1/(n-a);return t[0]=2*n*o,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*n*h,t[6]=0,t[7]=0,t[8]=(i+e)*o,t[9]=(s+r)*h,t[10]=(a+n)*u,t[11]=-1,t[12]=0,t[13]=0,t[14]=a*n*2*u,t[15]=0,t}function N(t,e,i,r,s){var n,a=1/Math.tan(e/2);return t[0]=a/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=s&&s!==1/0?(n=1/(r-s),t[10]=(s+r)*n,t[14]=2*s*r*n):(t[10]=-1,t[14]=-2*r),t}function j(t,e,i,r){var s=Math.tan(e.upDegrees*Math.PI/180),n=Math.tan(e.downDegrees*Math.PI/180),a=Math.tan(e.leftDegrees*Math.PI/180),o=Math.tan(e.rightDegrees*Math.PI/180),h=2/(a+o),u=2/(s+n);return t[0]=h,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=u,t[6]=0,t[7]=0,t[8]=-(a-o)*h*.5,t[9]=(s-n)*u*.5,t[10]=r/(i-r),t[11]=-1,t[12]=0,t[13]=0,t[14]=r*i/(i-r),t[15]=0,t}function Y(t,e,i,r,s,n,a){var o=1/(e-i),h=1/(r-s),u=1/(n-a);return t[0]=-2*o,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*h,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*u,t[11]=0,t[12]=(e+i)*o,t[13]=(s+r)*h,t[14]=(a+n)*u,t[15]=1,t}function G(t,e,i,r){var s,a,o,h,u,l,f,c,_,d,m=e[0],b=e[1],p=e[2],M=r[0],A=r[1],v=r[2],R=i[0],T=i[1],F=i[2];return Math.abs(m-R)<n&&Math.abs(b-T)<n&&Math.abs(p-F)<n?g(t):(f=m-R,c=b-T,_=p-F,s=A*(_*=d=1/Math.hypot(f,c,_))-v*(c*=d),a=v*(f*=d)-M*_,o=M*c-A*f,(d=Math.hypot(s,a,o))?(s*=d=1/d,a*=d,o*=d):(s=0,a=0,o=0),h=c*o-_*a,u=_*s-f*o,l=f*a-c*s,(d=Math.hypot(h,u,l))?(h*=d=1/d,u*=d,l*=d):(h=0,u=0,l=0),t[0]=s,t[1]=h,t[2]=f,t[3]=0,t[4]=a,t[5]=u,t[6]=c,t[7]=0,t[8]=o,t[9]=l,t[10]=_,t[11]=0,t[12]=-(s*m+a*b+o*p),t[13]=-(h*m+u*b+l*p),t[14]=-(f*m+c*b+_*p),t[15]=1,t)}function z(t,e,i,r){var s=e[0],n=e[1],a=e[2],o=r[0],h=r[1],u=r[2],l=s-i[0],f=n-i[1],c=a-i[2],g=l*l+f*f+c*c;g>0&&(l*=g=1/Math.sqrt(g),f*=g,c*=g);var _=h*c-u*f,d=u*l-o*c,m=o*f-h*l;return(g=_*_+d*d+m*m)>0&&(_*=g=1/Math.sqrt(g),d*=g,m*=g),t[0]=_,t[1]=d,t[2]=m,t[3]=0,t[4]=f*m-c*d,t[5]=c*_-l*m,t[6]=l*d-f*_,t[7]=0,t[8]=l,t[9]=f,t[10]=c,t[11]=0,t[12]=s,t[13]=n,t[14]=a,t[15]=1,t}function H(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")"}function W(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])}function X(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t[3]=e[3]+i[3],t[4]=e[4]+i[4],t[5]=e[5]+i[5],t[6]=e[6]+i[6],t[7]=e[7]+i[7],t[8]=e[8]+i[8],t[9]=e[9]+i[9],t[10]=e[10]+i[10],t[11]=e[11]+i[11],t[12]=e[12]+i[12],t[13]=e[13]+i[13],t[14]=e[14]+i[14],t[15]=e[15]+i[15],t}function q(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t[3]=e[3]-i[3],t[4]=e[4]-i[4],t[5]=e[5]-i[5],t[6]=e[6]-i[6],t[7]=e[7]-i[7],t[8]=e[8]-i[8],t[9]=e[9]-i[9],t[10]=e[10]-i[10],t[11]=e[11]-i[11],t[12]=e[12]-i[12],t[13]=e[13]-i[13],t[14]=e[14]-i[14],t[15]=e[15]-i[15],t}function K(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=e[3]*i,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[7]=e[7]*i,t[8]=e[8]*i,t[9]=e[9]*i,t[10]=e[10]*i,t[11]=e[11]*i,t[12]=e[12]*i,t[13]=e[13]*i,t[14]=e[14]*i,t[15]=e[15]*i,t}function Z(t,e,i,r){return t[0]=e[0]+i[0]*r,t[1]=e[1]+i[1]*r,t[2]=e[2]+i[2]*r,t[3]=e[3]+i[3]*r,t[4]=e[4]+i[4]*r,t[5]=e[5]+i[5]*r,t[6]=e[6]+i[6]*r,t[7]=e[7]+i[7]*r,t[8]=e[8]+i[8]*r,t[9]=e[9]+i[9]*r,t[10]=e[10]+i[10]*r,t[11]=e[11]+i[11]*r,t[12]=e[12]+i[12]*r,t[13]=e[13]+i[13]*r,t[14]=e[14]+i[14]*r,t[15]=e[15]+i[15]*r,t}function Q(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3]&&t[4]===e[4]&&t[5]===e[5]&&t[6]===e[6]&&t[7]===e[7]&&t[8]===e[8]&&t[9]===e[9]&&t[10]===e[10]&&t[11]===e[11]&&t[12]===e[12]&&t[13]===e[13]&&t[14]===e[14]&&t[15]===e[15]}function $(t,e){var i=t[0],r=t[1],s=t[2],a=t[3],o=t[4],h=t[5],u=t[6],l=t[7],f=t[8],c=t[9],g=t[10],_=t[11],d=t[12],m=t[13],b=t[14],p=t[15],M=e[0],A=e[1],v=e[2],R=e[3],T=e[4],F=e[5],y=e[6],E=e[7],U=e[8],x=e[9],w=e[10],B=e[11],P=e[12],O=e[13],D=e[14],L=e[15];return Math.abs(i-M)<=n*Math.max(1,Math.abs(i),Math.abs(M))&&Math.abs(r-A)<=n*Math.max(1,Math.abs(r),Math.abs(A))&&Math.abs(s-v)<=n*Math.max(1,Math.abs(s),Math.abs(v))&&Math.abs(a-R)<=n*Math.max(1,Math.abs(a),Math.abs(R))&&Math.abs(o-T)<=n*Math.max(1,Math.abs(o),Math.abs(T))&&Math.abs(h-F)<=n*Math.max(1,Math.abs(h),Math.abs(F))&&Math.abs(u-y)<=n*Math.max(1,Math.abs(u),Math.abs(y))&&Math.abs(l-E)<=n*Math.max(1,Math.abs(l),Math.abs(E))&&Math.abs(f-U)<=n*Math.max(1,Math.abs(f),Math.abs(U))&&Math.abs(c-x)<=n*Math.max(1,Math.abs(c),Math.abs(x))&&Math.abs(g-w)<=n*Math.max(1,Math.abs(g),Math.abs(w))&&Math.abs(_-B)<=n*Math.max(1,Math.abs(_),Math.abs(B))&&Math.abs(d-P)<=n*Math.max(1,Math.abs(d),Math.abs(P))&&Math.abs(m-O)<=n*Math.max(1,Math.abs(m),Math.abs(O))&&Math.abs(b-D)<=n*Math.max(1,Math.abs(b),Math.abs(D))&&Math.abs(p-L)<=n*Math.max(1,Math.abs(p),Math.abs(L))}Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});var J=p,tt=q;function et(){var t=new a(3);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function it(t){var e=new a(3);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e}function rt(t){var e=t[0],i=t[1],r=t[2];return Math.hypot(e,i,r)}function st(t,e,i){var r=new a(3);return r[0]=t,r[1]=e,r[2]=i,r}function nt(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function at(t,e,i,r){return t[0]=e,t[1]=i,t[2]=r,t}function ot(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t}function ht(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t}function ut(t,e,i){return t[0]=e[0]*i[0],t[1]=e[1]*i[1],t[2]=e[2]*i[2],t}function lt(t,e,i){return t[0]=e[0]/i[0],t[1]=e[1]/i[1],t[2]=e[2]/i[2],t}function ft(t,e){return t[0]=Math.ceil(e[0]),t[1]=Math.ceil(e[1]),t[2]=Math.ceil(e[2]),t}function ct(t,e){return t[0]=Math.floor(e[0]),t[1]=Math.floor(e[1]),t[2]=Math.floor(e[2]),t}function gt(t,e,i){return t[0]=Math.min(e[0],i[0]),t[1]=Math.min(e[1],i[1]),t[2]=Math.min(e[2],i[2]),t}function _t(t,e,i){return t[0]=Math.max(e[0],i[0]),t[1]=Math.max(e[1],i[1]),t[2]=Math.max(e[2],i[2]),t}function dt(t,e){return t[0]=Math.round(e[0]),t[1]=Math.round(e[1]),t[2]=Math.round(e[2]),t}function mt(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t}function bt(t,e,i,r){return t[0]=e[0]+i[0]*r,t[1]=e[1]+i[1]*r,t[2]=e[2]+i[2]*r,t}function pt(t,e){var i=e[0]-t[0],r=e[1]-t[1],s=e[2]-t[2];return Math.hypot(i,r,s)}function Mt(t,e){var i=e[0]-t[0],r=e[1]-t[1],s=e[2]-t[2];return i*i+r*r+s*s}function At(t){var e=t[0],i=t[1],r=t[2];return e*e+i*i+r*r}function vt(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t}function Rt(t,e){return t[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t}function Tt(t,e){var i=e[0],r=e[1],s=e[2],n=i*i+r*r+s*s;return n>0&&(n=1/Math.sqrt(n)),t[0]=e[0]*n,t[1]=e[1]*n,t[2]=e[2]*n,t}function Ft(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function yt(t,e,i){var r=e[0],s=e[1],n=e[2],a=i[0],o=i[1],h=i[2];return t[0]=s*h-n*o,t[1]=n*a-r*h,t[2]=r*o-s*a,t}function Et(t,e,i,r){var s=e[0],n=e[1],a=e[2];return t[0]=s+r*(i[0]-s),t[1]=n+r*(i[1]-n),t[2]=a+r*(i[2]-a),t}function Ut(t,e,i,r,s,n){var a=n*n,o=a*(2*n-3)+1,h=a*(n-2)+n,u=a*(n-1),l=a*(3-2*n);return t[0]=e[0]*o+i[0]*h+r[0]*u+s[0]*l,t[1]=e[1]*o+i[1]*h+r[1]*u+s[1]*l,t[2]=e[2]*o+i[2]*h+r[2]*u+s[2]*l,t}function xt(t,e,i,r,s,n){var a=1-n,o=a*a,h=n*n,u=o*a,l=3*n*o,f=3*h*a,c=h*n;return t[0]=e[0]*u+i[0]*l+r[0]*f+s[0]*c,t[1]=e[1]*u+i[1]*l+r[1]*f+s[1]*c,t[2]=e[2]*u+i[2]*l+r[2]*f+s[2]*c,t}function wt(t,e){e=e||1;var i=2*o()*Math.PI,r=2*o()-1,s=Math.sqrt(1-r*r)*e;return t[0]=Math.cos(i)*s,t[1]=Math.sin(i)*s,t[2]=r*e,t}function Bt(t,e,i){var r=e[0],s=e[1],n=e[2],a=i[3]*r+i[7]*s+i[11]*n+i[15];return a=a||1,t[0]=(i[0]*r+i[4]*s+i[8]*n+i[12])/a,t[1]=(i[1]*r+i[5]*s+i[9]*n+i[13])/a,t[2]=(i[2]*r+i[6]*s+i[10]*n+i[14])/a,t}function Pt(t,e,i){var r=e[0],s=e[1],n=e[2];return t[0]=r*i[0]+s*i[3]+n*i[6],t[1]=r*i[1]+s*i[4]+n*i[7],t[2]=r*i[2]+s*i[5]+n*i[8],t}function Ot(t,e,i){var r=i[0],s=i[1],n=i[2],a=i[3],o=e[0],h=e[1],u=e[2],l=s*u-n*h,f=n*o-r*u,c=r*h-s*o,g=s*c-n*f,_=n*l-r*c,d=r*f-s*l,m=2*a;return l*=m,f*=m,c*=m,g*=2,_*=2,d*=2,t[0]=o+l+g,t[1]=h+f+_,t[2]=u+c+d,t}function Dt(t,e,i,r){var s=[],n=[];return s[0]=e[0]-i[0],s[1]=e[1]-i[1],s[2]=e[2]-i[2],n[0]=s[0],n[1]=s[1]*Math.cos(r)-s[2]*Math.sin(r),n[2]=s[1]*Math.sin(r)+s[2]*Math.cos(r),t[0]=n[0]+i[0],t[1]=n[1]+i[1],t[2]=n[2]+i[2],t}function Lt(t,e,i,r){var s=[],n=[];return s[0]=e[0]-i[0],s[1]=e[1]-i[1],s[2]=e[2]-i[2],n[0]=s[2]*Math.sin(r)+s[0]*Math.cos(r),n[1]=s[1],n[2]=s[2]*Math.cos(r)-s[0]*Math.sin(r),t[0]=n[0]+i[0],t[1]=n[1]+i[1],t[2]=n[2]+i[2],t}function Vt(t,e,i,r){var s=[],n=[];return s[0]=e[0]-i[0],s[1]=e[1]-i[1],s[2]=e[2]-i[2],n[0]=s[0]*Math.cos(r)-s[1]*Math.sin(r),n[1]=s[0]*Math.sin(r)+s[1]*Math.cos(r),n[2]=s[2],t[0]=n[0]+i[0],t[1]=n[1]+i[1],t[2]=n[2]+i[2],t}function It(t,e){var i=t[0],r=t[1],s=t[2],n=e[0],a=e[1],o=e[2],h=Math.sqrt(i*i+r*r+s*s)*Math.sqrt(n*n+a*a+o*o),u=h&&Ft(t,e)/h;return Math.acos(Math.min(Math.max(u,-1),1))}function St(t){return t[0]=0,t[1]=0,t[2]=0,t}function kt(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"}function Ct(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]}function Nt(t,e){var i=t[0],r=t[1],s=t[2],a=e[0],o=e[1],h=e[2];return Math.abs(i-a)<=n*Math.max(1,Math.abs(i),Math.abs(a))&&Math.abs(r-o)<=n*Math.max(1,Math.abs(r),Math.abs(o))&&Math.abs(s-h)<=n*Math.max(1,Math.abs(s),Math.abs(h))}var jt,Yt=ht,Gt=ut,zt=lt,Ht=pt,Wt=Mt,Xt=rt,qt=At,Kt=(jt=et(),function(t,e,i,r,s,n){var a,o;for(e||(e=3),i||(i=0),o=r?Math.min(r*e+i,t.length):t.length,a=i;a<o;a+=e)jt[0]=t[a],jt[1]=t[a+1],jt[2]=t[a+2],s(jt,jt,n),t[a]=jt[0],t[a+1]=jt[1],t[a+2]=jt[2];return t});function Zt(t,e,i){var r,s,n,a,o,h,u,l;switch(1===arguments.length&&(e=t.s,i=t.v,t=t.h),h=i*(1-e),u=i*(1-(o=6*t-(a=Math.floor(6*t)))*e),l=i*(1-(1-o)*e),a%6){case 0:r=i,s=l,n=h;break;case 1:r=u,s=i,n=h;break;case 2:r=h,s=i,n=l;break;case 3:r=h,s=u,n=i;break;case 4:r=l,s=h,n=i;break;case 5:r=i,s=h,n=u}return[r,s,n]}class Qt{constructor(t){this.gl=t,this._indexedGeometry=!1,this._uniformsNeedsUpdate=!1,this._translate=[0,0,0],this._rotation={speed:0,axis:[0,0,0]},this._oscillate=!1,this._verts=[],this._indices=[],this._normals=[],this._colors=[],this._buffers=[],this._VAOs=[],this._modelMatrix=r.create(),this._uniforms={},this._textures={}}setupVAO(t,e){this.gl.bindVertexArray(e);for(const e of t){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e.buffer_object);let t=0;for(const i in e.attributes)if(e.attributes.hasOwnProperty(i)){const r=e.attributes[i];this.gl.enableVertexAttribArray(r.location),this.gl.vertexAttribPointer(r.location,r.num_components,r.type,!1,e.stride,t),t+=r.num_components*r.size,r.hasOwnProperty("divisor")&&this.gl.vertexAttribDivisor(r.location,r.divisor)}}if(this._indexedGeometry){const t=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,t),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(this._indices),this.gl.STATIC_DRAW)}this.gl.bindVertexArray(null),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,null)}updateUniform(t,e){if(this._uniforms.hasOwnProperty(t)){this._uniforms[t].value=e}}get VAO(){return this._VAOs[0]}get uniforms(){return this._uniforms}get numVertices(){return this._verts.length/3}get numIndices(){return this._indices.length}get buffers(){return this._buffers}get translate(){return this._translate}set translate(t){this._uniformsNeedsUpdate=!0,this._translate[0]=t[0],this._translate[1]=t[1],this._translate[2]=t[2]}set rotate(t){this._uniformsNeedsUpdate=!0;const[e,i]=Object.values(t);this._rotation.speed=e,this._rotation.axis[0]=i[0],this._rotation.axis[1]=i[1],this._rotation.axis[2]=i[2]}set oscillate(t){"boolean"==typeof t&&(this._oscillate=t)}get needsUpdate(){return this._uniformsNeedsUpdate}updateModelMatrix(t){return r.identity(this._modelMatrix),r.translate(this._modelMatrix,this._modelMatrix,this._translate),r.rotate(this._modelMatrix,this._modelMatrix,(this._oscillate?90*Math.sin(.001*t):t)*this._rotation.speed,this._rotation.axis),this._modelMatrix}updateInverseModelMatrix(){r.invert(this._uniforms.u_InverseModelMatrix.value,this._uniforms.u_ModelMatrix.value)}normalizeVerts(){for(let t=0;t<this._verts.length;t+=3){const e=this.normalize(this._verts[t],this._verts[t+1],this._verts[t+2]);this._verts[t]=e[0],this._verts[t+1]=e[1],this._verts[t+2]=e[2]}}normalize(t,e,i){const r=Math.sqrt(t*t+e*e+i*i);return[t/r,e/r,i/r]}}class $t extends Qt{constructor(t){super(t),this._indexedGeometry=!0,this._verts=[0,0,1,.894,0,.447,.276,.851,.447,-.724,.526,.447,-.724,-.526,.447,.276,-.851,.447,.724,.526,-.447,-.276,.851,-.447,-.894,0,-.447,-.276,-.851,-.447,.724,-.526,-.447,0,0,-1],this._indices=[0,1,2,0,2,3,0,3,4,0,4,5,0,5,1,11,7,6,11,8,7,11,9,8,11,10,9,11,6,10,1,6,2,2,7,3,3,8,4,4,9,5,5,10,1,6,7,2,7,8,3,8,9,4,9,10,5,10,6,1],this._normals=[];for(let t=0;t<this._verts.length;t+=3){let e=this._verts[t],i=this._verts[t+1],r=this._verts[t+2],s=Math.sqrt(e*e+i*i+r*r);this._normals.push(e/s,i/s,r/s)}this._colors=[];for(let t=0;t<this._verts.length;t++){const e=t/this._verts.length,[i,r,s]=Zt(e,1,1);this._colors.push(i,r,s,1)}}linkProgram(t){this._buffers.push(this.gl.createBuffer(),this.gl.createBuffer(),this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[0]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._verts),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[1]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._normals),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[2]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._colors),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);const e={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:3,type:this.gl.FLOAT,size:4}},i={i_Normal:{location:this.gl.getAttribLocation(t,"i_Normal"),num_components:3,type:this.gl.FLOAT,size:4}},r={i_Color:{location:this.gl.getAttribLocation(t,"i_Color"),num_components:3,type:this.gl.FLOAT,size:4}};this._VAOs.push(this.gl.createVertexArray());const s=[{vao:this._VAOs[0],buffers:[{buffer_object:this._buffers[0],stride:0,attributes:e},{buffer_object:this._buffers[1],stride:0,attributes:i},{buffer_object:this._buffers[2],stride:0,attributes:r}]}];for(const t of s)this.setupVAO(t.buffers,t.vao)}}class Jt extends Qt{constructor(t,e){super(t),this._numPoints=e;for(let t=0;t<e;t++){const t=Math.random()*Math.PI*2,e=Math.random()*Math.PI*2;this._verts.push(Math.sin(t)*Math.cos(e),Math.sin(t)*Math.sin(e),Math.cos(t))}}linkProgram(t){this._buffers.push(this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[0]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._verts),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);const e={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:3,type:this.gl.FLOAT,size:4}};this._VAOs.push(this.gl.createVertexArray());const i=[{vao:this._VAOs[0],buffers:[{buffer_object:this._buffers[0],stride:0,attributes:e}]}];for(const t of i)this.setupVAO(t.buffers,t.vao)}}class te extends Qt{constructor(t,e,i){super(t),this._numPoints=e;for(let t=0;t<e;t++)this._verts.push(1,1,1)}linkProgram(t){this._buffers.push(this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[0]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._verts),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);const e={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:3,type:this.gl.FLOAT,size:4}};this._VAOs.push(this.gl.createVertexArray());const i=[{vao:this._VAOs[0],buffers:[{buffer_object:this._buffers[0],stride:0,attributes:e}]}];for(const t of i)this.setupVAO(t.buffers,t.vao)}}class ee extends Qt{constructor(t,e=null){super(t),this._options={dimensions:2,numParticles:100,birthRate:.5,lifeRange:[1.01,1.15],directionRange:[Math.PI/2-.5,Math.PI/2+.5],speedRange:[.5,1],gravity:[0,-.8]},e&&Object.assign(this._options,e);for(let t=0;t<this._options.numParticles;++t){for(let t=0;t<this._options.dimensions;++t)this._verts.push(0);for(let t=0;t<this._options.dimensions;++t)this._verts.push(0);let t=this._options.lifeRange[0]+Math.random()*(this._options.lifeRange[1]-this._options.lifeRange[0]);this._verts.push(t+.1,t)}this._read=0,this._write=1,this._bornParticles=0}get read(){return this._read}get write(){return this._write}set read(t){this._read=t}set write(t){this._write=t}get VAOs(){return this._VAOs}get buffers(){return this._buffers}get VAO(){const t=this._read;return this._read=this._write,this._write=t,this._VAOs[t]}get numVertices(){return this._bornParticles}linkProgram(t,e){this._buffers.push(this.gl.createBuffer(),this.gl.createBuffer());const i=new Float32Array(this._verts);for(const t of this._buffers)this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t),this.gl.bufferData(this.gl.ARRAY_BUFFER,i,this.gl.STREAM_DRAW);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this._VAOs.push(this.gl.createVertexArray(),this.gl.createVertexArray(),this.gl.createVertexArray(),this.gl.createVertexArray());const r={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:this._options.dimensions,type:this.gl.FLOAT,size:4},i_Velocity:{location:this.gl.getAttribLocation(t,"i_Velocity"),num_components:this._options.dimensions,type:this.gl.FLOAT,size:4},i_Age:{location:this.gl.getAttribLocation(t,"i_Age"),num_components:1,type:this.gl.FLOAT,size:4},i_Life:{location:this.gl.getAttribLocation(t,"i_Life"),num_components:1,type:this.gl.FLOAT,size:4}},s={i_Position:{location:this.gl.getAttribLocation(e,"i_Position"),num_components:this._options.dimensions,type:this.gl.FLOAT},i_Velocity:{location:this.gl.getAttribLocation(e,"i_Velocity"),num_components:this._options.dimensions,type:this.gl.FLOAT,size:4},i_Age:{location:this.gl.getAttribLocation(e,"i_Age"),num_components:1,type:this.gl.FLOAT,size:4},i_Life:{location:this.gl.getAttribLocation(e,"i_Life"),num_components:1,type:this.gl.FLOAT,size:4}},n=[{vao:this._VAOs[0],buffers:[{buffer_object:this._buffers[0],stride:4*(2*this._options.dimensions+2),attributes:r}]},{vao:this._VAOs[1],buffers:[{buffer_object:this._buffers[1],stride:4*(2*this._options.dimensions+2),attributes:r}]},{vao:this._VAOs[2],buffers:[{buffer_object:this._buffers[0],stride:4*(2*this._options.dimensions+2),attributes:s}]},{vao:this._VAOs[3],buffers:[{buffer_object:this._buffers[1],stride:4*(2*this._options.dimensions+2),attributes:s}]}];for(const t of n)this.setupVAO(t.buffers,t.vao)}step(t,e){const i=this._bornParticles;this._bornParticles<this._options.numParticles&&(this._bornParticles=Math.min(this._options.numParticles,Math.floor(this._bornParticles+this._options.birthRate*e))),t.bindVertexArray(this._VAOs[this._read]),t.bindBufferBase(t.TRANSFORM_FEEDBACK_BUFFER,0,this._buffers[this._write]),t.enable(t.RASTERIZER_DISCARD),t.beginTransformFeedback(t.POINTS),t.drawArrays(t.POINTS,0,i),t.endTransformFeedback(),t.disable(t.RASTERIZER_DISCARD),t.bindBufferBase(t.TRANSFORM_FEEDBACK_BUFFER,0,null)}}class ie extends Qt{constructor(t,e){switch(super(t),this._indexedGeometry=!0,this._type=e,e){case"SOLID":this._verts=[-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1],this._indices=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23],this._textureCoordinates=[0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1],this.normalizeVerts();break;case"404":this._verts=[-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1],this._indices=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23],this._textureCoordinates=[0,0,.5,0,.5,1,0,1,0,0,.5,0,.5,1,0,1,.5,0,1,0,1,1,.5,1,.5,0,1,0,1,1,.5,1,.5,0,1,0,1,1,.5,1,.5,0,1,0,1,1,.5,1],this.normalizeVerts();break;case"DEBUG":this._verts=[-1,1,1,1,1,1,1,-1,1,-1,-1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1],this.normalizeVerts(),this._indices=[0,1,1,2,2,3,3,0,0,5,1,6,2,7,3,4,5,6,6,7,7,4,4,5]}}linkProgram(t){switch(this._VAOs.push(this.gl.createVertexArray()),this._type){case"SOLID":case"404":{const e=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._verts),this.gl.STATIC_DRAW);const i=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,i),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._textureCoordinates),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);const r={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:3,type:this.gl.FLOAT,size:4}},s={i_TexCoord:{location:this.gl.getAttribLocation(t,"i_TexCoord"),num_components:2,type:this.gl.FLOAT}},n=[{vao:this._VAOs[0],buffers:[{buffer_object:e,stride:0,attributes:r},{buffer_object:i,stride:0,attributes:s}]}];for(const t of n)this.setupVAO(t.buffers,t.vao);break}case"DEBUG":{const e=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._verts),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);const i={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:3,type:this.gl.FLOAT,size:0}},r=[{vao:this._VAOs[0],buffers:[{buffer_object:e,stride:0,attributes:i}]}];for(const t of r)this.setupVAO(t.buffers,t.vao)}}}}class re extends Qt{constructor(t){super(t),this._indexedGeometry=!0,this._verts=[-1,-1,0,1,-1,0,1,1,0,-1,1,0],this._textureCoordinates=[0,0,1,0,1,1,0,1],this._normals=[0,0,1,0,0,1,0,0,1,0,0,1],this._indices=[0,1,2,0,2,3]}linkProgram(t,e){this._buffers.push(this.gl.createBuffer(),this.gl.createBuffer(),this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[0]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._verts),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[1]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._normals),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[2]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._textureCoordinates),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);const i={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:3,type:this.gl.FLOAT,size:4}},r={i_Normal:{location:this.gl.getAttribLocation(t,"i_Normal"),num_components:3,type:this.gl.FLOAT,size:4}},s={i_TexCoord:{location:this.gl.getAttribLocation(t,"i_TexCoord"),num_components:2,type:this.gl.FLOAT}};this._VAOs.push(this.gl.createVertexArray());const n=[{vao:this._VAOs[0],buffers:[{buffer_object:this._buffers[0],stride:0,attributes:i},{buffer_object:this._buffers[1],stride:0,attributes:r},{buffer_object:this._buffers[2],stride:0,attributes:s}]}];for(const t of n)this.setupVAO(t.buffers,t.vao)}}class se{constructor(){this._canvas=null,this._WIDTH=this._HEIGHT=0,this._programs={},this._textures={},this._framebuffers={},this._time=0,this._oldTimestamp=0,this._deltaTime=0,this._mouse=[0,0],this._click=0,this._fieldOfView=45*Math.PI/180,this._aspect=1,this._zNear=.1,this._zFar=100,this._projectionMat=r.create(),this._viewMat=r.create(),this._position=s.fromValues(0,0,2),this._target=s.fromValues(0,0,0),this._up=s.fromValues(0,1,0)}init(t,e,i=!1){this._canvas=document.createElement("canvas"),this._canvas.width=this._WIDTH=t,this._canvas.height=this._HEIGHT=e,document.getElementsByTagName("body")[0].appendChild(this._canvas),this.gl=this._canvas.getContext("webgl2",{premultipliedAlpha:i}),this._aspect=this.gl.canvas.clientWidth/this.gl.canvas.clientHeight,this.gl||console.warn("You're browser does not support WebGL 2.0. Soz.")}initTarget(t,e,i,r=!1){this._canvas=document.getElementById(i),this._canvas.width=this._WIDTH=t,this._canvas.height=this._HEIGHT=e,this.gl=this._canvas.getContext("webgl2",{premultipliedAlpha:r}),this._aspect=this.gl.canvas.clientWidth/this.gl.canvas.clientHeight,this.gl||console.warn("You're browser does not support WebGL 2.0. Soz.")}initAuto(){this._browser=window.opr&&opr.addons||window.opera||navigator.userAgent.indexOf(" OPR/")>=0?"opera":"undefined"!=typeof InstallTrigger?"firefox":/constructor/i.test(window.HTMLElement)||"[object SafariRemoteNotification]"===(!window.safari||"undefined"!=typeof safari&&safari.pushNotification).toString()?"safari":document.documentMode?"ie":window.StyleMedia?"edge":window.chrome&&(window.chrome.webstore||window.chrome.runtime)?"chrome":-1!=navigator.userAgent.indexOf("Edg")?"edgeChromium":window.CSS?"blink":void 0,this._canvas=document.createElement("canvas"),document.getElementsByTagName("body")[0].appendChild(this._canvas),this.gl=this._canvas.getContext("webgl2",{premultipliedAlpha:!1}),this._aspect=this.gl.canvas.clientWidth/this.gl.canvas.clientHeight,this.gl?(this.resizeCanvas(this._canvas),window.addEventListener("resize",()=>{this.resizeCanvas(this.gl.canvas)},!0)):console.warn("You're browser does not support WebGL 2.0. Soz.")}resizeCanvas(t){var e=window.devicePixelRatio||1;const i=Math.floor(t.clientWidth*e),r=Math.floor(t.clientHeight*e);t.width===i&&t.height===r||(this._WIDTH=t.width=i,this._HEIGHT=t.height=r,this._aspect=this._WIDTH/this._HEIGHT)}initShaderProgram(t,e,i,r=null,s){const n=this.gl.createProgram(),a=this.loadShader(this.gl.VERTEX_SHADER,e),o=this.loadShader(this.gl.FRAGMENT_SHADER,i);if(this.gl.attachShader(n,a),this.gl.attachShader(n,o),null!=r&&this.gl.transformFeedbackVaryings(n,r,this.gl.INTERLEAVED_ATTRIBS),this.gl.linkProgram(n),!this.gl.getProgramParameter(n,this.gl.LINK_STATUS))return alert("Unable to initialize the shader program: "+this.gl.getProgramInfoLog(n)),null;this._programs[t]={shader:n,mode:s,transformFeedback:!!r,transformFeedbackVaryings:r,geometry:[],uniformNeedsUpdate:!1,globalUniforms:{},geometryUniforms:{},uniformBuffers:{},drawParams:{clearColor:[.95,.95,.95,1],clearDepth:[1],clear:["COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT"],viewport:[0,0,this.gl.canvas.width,this.gl.canvas.height],enable:["CULL_FACE","DEPTH_TEST"]},customFramebufferRoutine:!1,framebufferRoutine:{}}}initProgramUniforms(t,e){const i=this.getProgram(t);let r=i.globalUniforms;const s=i.shader;for(const i of e)switch(i){case"u_TimeDelta":this._programs[t].uniformNeedsUpdate=!0,r.u_TimeDelta={type:"uniform1fv",value:[this._deltaTime/1e3],location:this.gl.getUniformLocation(s,"u_TimeDelta")};break;case"u_TotalTime":this._programs[t].uniformNeedsUpdate=!0,r.u_TotalTime={type:"uniform1fv",value:[this._time/1e3],location:this.gl.getUniformLocation(s,"u_TotalTime")};break;case"u_Resolution":r.u_Resolution={type:"uniform2fv",value:[this.gl.canvas.width,this.gl.canvas.height],location:this.gl.getUniformLocation(s,"u_Resolution")};break;case"u_Mouse":this._programs[t].uniformNeedsUpdate=!0,r.u_Mouse={type:"uniform2fv",value:this._mouse,location:this.gl.getUniformLocation(s,"u_Mouse")},this.initMouseMove();break;case"u_Click":this._programs[t].uniformNeedsUpdate=!0,r.u_Click={type:"uniform1i",value:this._click,location:this.gl.getUniformLocation(s,"u_Click")},this.initMouseClick();break;case"u_ProjectionMatrix":r.u_ProjectionMatrix={type:"uniformMatrix4fv",value:this._projectionMat,location:this.gl.getUniformLocation(s,"u_ProjectionMatrix")};break;case"u_ViewMatrix":r.u_ViewMatrix={type:"uniformMatrix4fv",value:this._viewMat,location:this.gl.getUniformLocation(s,"u_ViewMatrix")}}this.updateGlobalUniforms(r)}addUniformBuffer(t,e){const i=this.getProgram(t),r=i.shader;let s={name:"u_BufferObject",binding:0,drawType:"STATIC_DRAW",data:null};Object.assign(s,e);const n=this.gl.getUniformBlockIndex(r,s.name);this.gl.uniformBlockBinding(r,n,s.binding);const a=this.gl.createBuffer();this.gl.bindBuffer(this.gl.UNIFORM_BUFFER,a),this.gl.bufferData(this.gl.UNIFORM_BUFFER,s.data,this.gl[s.drawType]),this.gl.bindBuffer(this.gl.UNIFORM_BUFFER,null),this.gl.bindBufferBase(this.gl.UNIFORM_BUFFER,s.binding,a),i.uniformBuffers[s.name]={buffer:a,value:s.data,binding:s.binding}}updateUniformBuffer(t,e,i,r){const s=this._programs[t].uniformBuffers[e];s.value.set(i,r),this.gl.bindBuffer(this.gl.UNIFORM_BUFFER,s.buffer),this.gl.bufferSubData(this.gl.UNIFORM_BUFFER,0,s.value,0,null),this.gl.bindBuffer(this.gl.UNIFORM_BUFFER,null),this.gl.bindBufferBase(this.gl.UNIFORM_BUFFER,s.binding,s.buffer)}addProgramUniform(t,e){const i=this.getProgram(t);i.globalUniforms[e.name]={type:e.type,value:e.value,location:this.gl.getUniformLocation(i.shader,e.name)}}initGeometryUniforms(t,e){const i=this.getProgram(t),s=i.shader;let n=i.geometryUniforms;for(const t of e)switch(t){case"u_ModelMatrix":n.u_ModelMatrix={type:"uniformMatrix4fv",value:r.create(),location:this.gl.getUniformLocation(s,"u_ModelMatrix")}}}addGeometryUniform(t,e){const i=this.getProgram(t);i.geometryUniforms[e.name]={type:e.type,value:e.value,location:this.gl.getUniformLocation(i.shader,e.name)}}updateProgramUniform(t,e,i){this._programs[t].globalUniforms[e].value=i}updateGeometryUniform(t,e,i){this._programs[t].geometryUniforms[e].value=i}updateAllGlobalUniforms(){for(const t in this._programs)this._programs.hasOwnProperty(t)&&this.updateGlobalUniforms(this._programs[t].globalUniforms)}updateGlobalUniforms(t){for(const e in t)if(t.hasOwnProperty(e))switch(e){case"u_TimeDelta":t[e].value=[this._deltaTime/1e3];break;case"u_TotalTime":t[e].value=[this._time/1e3];break;case"u_Resolution":t[e].value=[this.gl.canvas.width,this.gl.canvas.height];break;case"u_Mouse":t[e].value=this._mouse;break;case"u_Click":t[e].value=this._click;break;case"u_ProjectionMatrix":r.perspective(t[e].value,this._fieldOfView,this._aspect,this._zNear,this._zFar);break;case"u_ViewMatrix":r.lookAt(t[e].value,this._position,this._target,this._up)}}updateGeometryUniforms(t,e){for(const i in e)if(e.hasOwnProperty(i))switch(i){case"u_ModelMatrix":e[i].value=t.updateModelMatrix(this._time)}}setUniforms(t){for(const e in t)if(t.hasOwnProperty(e)){const i=t[e];switch(i.type){case"uniformMatrix4fv":this.gl[i.type](i.location,!1,i.value);break;case"uniform1i":if(i.isTexture){this.gl.uniform1i(i.location,i.unit),this.gl.activeTexture(this.gl.TEXTURE0+i.unit);break}default:this.gl[i.type](i.location,i.value)}}}updateProjectionMatrix(t){r.perspective(this._programs[t].globalUniforms.u_ProjectionMatrix.value,this._fieldOfView,this._aspect,this._zNear,this._zFar)}updateViewMatrix(t){r.lookAt(this._programs[t].globaluniforms.u_viewmatrix.value,this._position,this._target,this._up)}setDrawParams(t,e){const i=this.getProgram(t);Object.assign(i.drawParams,e)}setFramebufferRoutine(t,e){const i=this.getProgram(t);Object.assign(i.framebufferRoutine,e),i.customFramebufferRoutine=!0}loadShader(t,e){const i=this.gl.createShader(t);return this.gl.shaderSource(i,e),this.gl.compileShader(i),this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS)?i:(alert("An error occurred compiling the shaders: "+this.gl.getShaderInfoLog(i)),this.gl.deleteShader(i),null)}linkProgram(t,e){this._programs[t].geometry.push(e),e.linkProgram(this._programs[t].shader,[geometryTex])}framebuffer(t){this._framebuffers[t]=this.gl.createFramebuffer()}get framebuffers(){return this._framebuffers}framebufferTexture2D(t,e){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this._framebuffers[t]),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,e,0)}get canvas(){return this._canvas}get textures(){return this._textures}bindTexture(t){this.gl.bindTexture(this.gl.TEXTURE_2D,t)}get programs(){return this._programs}set cameraPosition(t){this._position=s.fromValues(...t),this.updateAllGlobalUniforms()}get cameraPosition(){return[...this._position]}set cameraTarget(t){this._target=s.fromValues(...t)}set FOV(t){this._fieldOfView=t*Math.PI/180}getViewMatrix(t){return this._programs[t].globalUniforms.u_ViewMatrix.value}getProjectionMatrix(t){return this._programs[t].globalUniforms.u_ProjectionMatrix.value}bindMainViewport(){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null)}getProgram(t){try{const e=this._programs[t];if(e)return e;throw new TypeError}catch(e){e instanceof TypeError&&console.error(`Shader Program '${t}' is not found, did you mean: '${Object.keys(this._programs)}'?`)}}draw(t){0!=this._oldTimestamp&&(this._deltaTime=t-this._oldTimestamp,this._deltaTime>500&&(this._deltaTime=0)),this._oldTimestamp=t,this._time+=this._deltaTime;for(const t in this._programs)if(this._programs.hasOwnProperty(t)){const e=this._programs[t];if(e.customFramebufferRoutine)for(const t in e.framebufferRoutine)if(e.framebufferRoutine.hasOwnProperty(t)){const i=e.framebufferRoutine[t];switch(t){case"pre":this[i.func](...i.args);break;case"bindFramebuffer":this.gl[t](this.gl.FRAMEBUFFER,this._framebuffers[i]);break;case"framebufferTexture2D":{let[e,r]=i;this.gl[t](this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this._programs[e].globalUniforms[r].value,0);break}case"bindTexture":{let[e,r]=i;this.gl[t](this.gl.TEXTURE_2D,this._programs[e].globalUniforms[r].value);break}}}for(const t in e.drawParams)if(e.drawParams.hasOwnProperty(t)){const i=e.drawParams[t];if("enable"===t)for(const e of i)this.gl[t](this.gl[e]);else if("blendFunc"===t)this.gl[t](this.gl[i[0]],this.gl[i[1]]);else if("blendFuncSeparate"===t)this.gl[t](this.gl[i[0]],this.gl[i[1]],this.gl[i[2]],this.gl[i[3]]);else if("depthFunc"===t)this.gl[t](this.gl[i[0]]);else if("clear"===t){if(!i)continue;let e=0;for(const t of i)e|=this.gl[t];this.gl[t](e)}else this.gl[t](...i)}if(e.geometry.length<1)continue;this.gl.useProgram(e.shader),Object.keys(e.globalUniforms).length>0&&(e.uniformNeedsUpdate&&this.updateGlobalUniforms(e.globalUniforms),this.setUniforms(e.globalUniforms));for(const t of e.geometry)if(e.transformFeedback)t.step(this.gl,this._deltaTime);else switch(this.gl.bindVertexArray(t.VAO),t.needsUpdate&&this.updateGeometryUniforms(t,e.geometryUniforms),this.setUniforms(e.geometryUniforms),e.mode){case"POINTS":this.gl.drawArrays(this.gl[e.mode],0,t.numVertices);break;default:this.gl.drawElements(this.gl[e.mode],t.numIndices,this.gl.UNSIGNED_SHORT,0)}this.gl.bindVertexArray(null),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,null)}}loadTexture(t,e,i){const r=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,r),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,1,1,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,new Uint8Array([0,0,255,255]));var s=new Image;console.log(i),s.src=i,s.addEventListener("load",(function(){this.gl.bindTexture(this.gl.TEXTURE_2D,r),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,s),this.gl.generateMipmap(this.gl.TEXTURE_2D)})),this._programs[t].globalUniforms[e]={type:"uniform1i",value:r,location:this.gl.getUniformLocation(this._programs[t].shader,e),unit:0,isTexture:!0}}dataTexture(t,e){let i={name:"u_Texture",level:0,unit:0,width:1,height:1,depth:null,data:new Uint8Array([0,0,255,255]),border:0,internalFormat:"RGBA8",format:"RGBA",wrap:"CLAMP_TO_EDGE",filter:"NEAREST",type:"UNSIGNED_BYTE"};Object.assign(i,e);const r=i.depth?"TEXTURE_3D":"TEXTURE_2D",s=this.gl.createTexture();this.gl.activeTexture(this.gl.TEXTURE0+i.unit),this.gl.bindTexture(this.gl[r],s),"TEXTURE_2D"===r?this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl[i.internalFormat],i.width,i.height,i.border,this.gl[i.format],this.gl[i.type],i.data):this.gl.texImage3D(this.gl.TEXTURE_3D,0,this.gl[i.internalFormat],i.width,i.height,i.depth,i.border,this.gl[i.format],this.gl[i.type],i.data),this.gl.texParameteri(this.gl[r],this.gl.TEXTURE_BASE_LEVEL,0),this.gl.texParameteri(this.gl[r],this.gl.TEXTURE_MAX_LEVEL,Math.log2(i.width)),this.gl.texParameteri(this.gl[r],this.gl.TEXTURE_WRAP_S,this.gl[i.wrap]),this.gl.texParameteri(this.gl[r],this.gl.TEXTURE_WRAP_T,this.gl[i.wrap]),this.gl.texParameteri(this.gl[r],this.gl.TEXTURE_MIN_FILTER,this.gl[i.filter]),this.gl.texParameteri(this.gl[r],this.gl.TEXTURE_MAG_FILTER,this.gl[i.filter]),this._programs[t].globalUniforms[i.name]={type:"uniform1i",value:s,location:this.gl.getUniformLocation(this._programs[t].shader,i.name),unit:i.unit,dimension:r,isTexture:!0}}swapTextures(t,e){const[i,r]=t,[s,n]=e,a=this._programs[s].globalUniforms[n].value;this._programs[s].globalUniforms[n].value=this._programs[i].globalUniforms[r].value,this._programs[i].globalUniforms[r].value=a}initMouseMove(){this._canvas.addEventListener("mousemove",t=>{this._mouse[0]=2*t.clientX/this._WIDTH-1,this._mouse[1]=-(2*t.clientY/this._HEIGHT-1)})}initMouseClick(){this._canvas.addEventListener("mousedown",t=>{switch((t=t||window.event).preventDefault(),t.which||void 0===t.button||(t.which=1&t.button?1:2&t.button?3:4&t.button?2:0),t.which){case 1:this._shiftKeyDown?this._click=2:this._click=1;break;case 2:this._click=2;break;case 3:this._click=3}}),this._canvas.addEventListener("mouseup",t=>{this._click=0})}initShiftKey(){document.addEventListener("keydown",t=>{"ShiftLeft"!==t.code&&"ShiftRight"!==t.code||(this._shiftKeyDown=!0)}),document.addEventListener("keyup",t=>{"ShiftLeft"!==t.code&&"ShiftRight"!==t.code||(this._shiftKeyDown=!1)})}get click(){return this._click}get width(){return this._WIDTH}get height(){return this._HEIGHT}get browser(){return this._browser}Quad(t=null){const e=new re(this.gl);if(t)for(const i of t)this._programs[i].geometry.push(e),e.linkProgram(this._programs[i].shader);return e}Cube(t,e){const i=new ie(this.gl,e);if(t)for(const e of t)this._programs[e].geometry.push(i),i.linkProgram(this._programs[e].shader);return i}RandomPointSphere(t,e){const i=new Jt(this.gl,e);if(t)for(const e of t)this._programs[e].geometry.push(i),i.linkProgram(this._programs[e].shader);return i}PointCloud(t,e){const i=new te(this.gl,e);if(t)for(const e of t)this._programs[e].geometry.push(i),i.linkProgram(this._programs[e].shader);return i}Icosahedron(t){const e=new $t(this.gl);return this._programs[t].geometry.push(e),e.linkProgram(this._programs[t].shader),e}ParticleSystem(t,e,i=null){const r=new ee(this.gl,i);return this._programs[t].geometry.push(r),this._programs[e].geometry.push(r),r.linkProgram(this._programs[t].shader,this._programs[e].shader),r}GameOfLifeTexture2D(t,e){Object.keys(arguments).length<2&&console.error("GameOfLife requires an 'update' and a 'render' program");const i=new GameOfLifeTexture2D(this.gl);return this._programs[t].geometry.push(i),this._programs[e].geometry.push(i),i.linkProgram(this._programs[t].shader,this._programs[e].shader),i}}}})}));

/***/ }),

/***/ "./assets/js/gallery.js":
/*!******************************!*\
  !*** ./assets/js/gallery.js ***!
  \******************************/
/*! exports provided: userInteraction, flowField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "userInteraction", function() { return userInteraction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flowField", function() { return flowField; });
/* harmony import */ var _GL_BP_prod_bundle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GL_BP/prod.bundle.js */ "./assets/js/GL_BP/prod.bundle.js");
/* harmony import */ var _GL_BP_prod_bundle_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_GL_BP_prod_bundle_js__WEBPACK_IMPORTED_MODULE_0__);


const overlay = document.getElementById("overlay");
const warning = document.getElementById("warning");
const close = document.getElementById("close");
const demoTitle = document.getElementById("demoTitle");
const galleryItems = document.querySelectorAll(".item");
let GL, dim;

// var isFirefox = typeof InstallTrigger !== 'undefined';
// if(!isFirefox) {
    // warning.classList.toggle("hide", false);
// }

for(const item of galleryItems){
    item.addEventListener("click", showOverlay)
}

close.addEventListener("click", hideOverlay);

function showOverlay(e){
    overlay.style.top = String(window.pageYOffset + "px");
    overlay.classList.toggle("hide", false);
    console.log("showing overlay");
    const currentFunction = e.target.getAttribute('name');
    main(currentFunction);
}

function hideOverlay(e){
    overlay.classList.toggle("hide", true);
}


function main(currentFunction){
    const regex = /_/g;
    dim = window.screen.width < 600 ? window.screen.width-80 : 512;
    demoTitle.innerHTML = currentFunction.replace(regex, ' ');
    GL = new _GL_BP_prod_bundle_js__WEBPACK_IMPORTED_MODULE_0___default.a();
    GL.initTarget(dim, dim, "overlayCanvas", true);

    switch(currentFunction) {
        case 'Ten_Thousand_Points' : {
            pointSphere();
            break;
        }
        case 'GPU_Game_of_Life' : {
            golTexture2d(1);
            break;
        }
        case 'Game_of_Life_as_a_Texture' : {
            golTextureOscillate(4);
            break;
        }
        case 'Point_Cube' : {
            pointCube();
            break;
        }
        case 'Coloured_Vertices' : {
            icosahedron();
            break;
        }
        case 'Many_Particles' : {
            particles3D();
            break;
        }
        case 'Simple_Particles' : {
            simpleParticles();
            break;
        }
        case 'Flow_Field' : {
            flowField();
            break;
        }
        case 'User_Interaction' : {
            userInteraction();
            break;
        }
        default : {
            demoTitle.innerHTML = "404: Program Coming Soon";
            fourOhfour();
        }
    }
}
//
// -------------------------------------------------------------------------------
function userInteraction(_GL){
    const updateVert = __webpack_require__(/*! ./glsl/userInteraction/particle_update_vert.glsl */ "./assets/js/glsl/userInteraction/particle_update_vert.glsl");
    const updateFrag = __webpack_require__(/*! ./glsl/userInteraction/passthru_frag.glsl */ "./assets/js/glsl/userInteraction/passthru_frag.glsl");
    const renderVert = __webpack_require__(/*! ./glsl/userInteraction/particle_render_vert.glsl */ "./assets/js/glsl/userInteraction/particle_render_vert.glsl");
    const renderFrag = __webpack_require__(/*! ./glsl/userInteraction/particle_render_frag.glsl */ "./assets/js/glsl/userInteraction/particle_render_frag.glsl");

    const transformFeedbackVaryings = [
        "v_Position",
        "v_Velocity",
        "v_Age",
        "v_Life",
    ];

    GL.initShaderProgram('update', updateVert, updateFrag, transformFeedbackVaryings, null);
    GL.initShaderProgram('render', renderVert, renderFrag, null, 'POINTS');

    const SIZE = 64;
    // 1D TEXTURE - Grid Spawning Positions
    let d = [];
    for(let i=0; i<SIZE; ++i){
        let u = (i/SIZE) * (Math.PI);
        for(let j=0; j<SIZE; ++j){
            let v = (j/SIZE) * (Math.PI*2);
            let rand = Math.random()-0.5;
            let r = 127;
            let x = Math.sin(u)*Math.cos(v);
            let y = Math.sin(u)*Math.sin(v);
            let z = Math.cos(u);
            x *= rand; y *= rand; z *= rand;
            x += 1; y += 1; z += 1;
            x *= r; y *= r; z *= r;
            d.push(
                Math.floor(x),
                Math.floor(y),
                Math.floor(z)
            );
        }
    }
    GL.dataTexture('update', {
        name           :'u_InitialPosition',
        width          : SIZE,
        height         : SIZE,
        internalFormat : 'RGB8',
        format         : 'RGB',
        unit           : 0,
        data           : new Uint8Array(d),
    });

    d = [];
    for(let i=0; i<GL.width; ++i){
        for(let j=0; j<GL.height; ++j){
            d.push(Math.floor(Math.random()*255));
            d.push(Math.floor(Math.random()*255));
            d.push(Math.floor(Math.random()*255));
        }
    }
    GL.dataTexture('update', {
        name           :'u_NoiseRGB',
        width          : GL.width,
        height         : GL.height,
        internalFormat : 'RGB8',
        format         : 'RGB',
        unit           : 1,
        data           : new Uint8Array(d),
    });

    GL.initProgramUniforms('update', [ 'u_ProjectionMatrix', 'u_ViewMatrix', 'u_TimeDelta', 'u_TotalTime', 'u_Mouse', 'u_Click' ]);
    GL.initProgramUniforms('render', [ 'u_ProjectionMatrix', 'u_ViewMatrix' ]);

    GL.setDrawParams('render', {
        clearColor : [0.0, 0.0, 0.0, 1.0],
        enable     : ['BLEND'],
        blendFunc  : ['ONE', 'ZERO'],
    });

    GL.addProgramUniform('update',{
        name : 'u_NumParticlesSqRoot',
        type : 'uniform1i',
        value: SIZE,
    });

    GL.cameraPosition = [0, 1, 1.5];

    const opts = {
        numParticles : SIZE*SIZE,
        lifeRange    : [1.01, 10.1],
        dimensions : 3,
        birthRate : 0.99
    };
    const ParticleSystem = GL.ParticleSystem('update', 'render', opts);
    ParticleSystem.rotate = { s:0.0005, a:[0,1,0]};
    GL.initGeometryUniforms('update', [ 'u_ModelMatrix', 'u_InverseModelMatrix' ]);
    GL.initGeometryUniforms('render', [ 'u_ModelMatrix' ]);

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
}

// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------

function flowField(){
    const updateVert = __webpack_require__(/*! ./glsl/flowfield/particle_update_vert.glsl */ "./assets/js/glsl/flowfield/particle_update_vert.glsl");
    const updateFrag = __webpack_require__(/*! ./glsl/flowfield/passthru_frag.glsl */ "./assets/js/glsl/flowfield/passthru_frag.glsl");
    const renderVert = __webpack_require__(/*! ./glsl/flowfield/particle_render_vert.glsl */ "./assets/js/glsl/flowfield/particle_render_vert.glsl");
    const renderFrag = __webpack_require__(/*! ./glsl/flowfield/particle_render_frag.glsl */ "./assets/js/glsl/flowfield/particle_render_frag.glsl");

    const transformFeedbackVaryings = [
        "v_Position",
        "v_Velocity",
        "v_Age",
        "v_Life",
    ];

    GL.initShaderProgram('update', updateVert, updateFrag, transformFeedbackVaryings, null);
    GL.initShaderProgram('render', renderVert, renderFrag, null, 'POINTS');

    const SIZE = 12;
    // 1D TEXTURE - RANDOM DATA
    let d = [];
    for(let i=0; i<SIZE; ++i){
        for(let j=0; j<SIZE; ++j){
            for(let k=0; k<SIZE; ++k){
                d.push(
                    Math.floor((i/SIZE)* 255),
                    Math.floor((j/SIZE)* 255),
                    Math.floor((k/SIZE)* 255),
                );
            }
        }
    }
    GL.dataTexture('update', {
        name           :'u_InitialPosition',
        width          : SIZE*SIZE*SIZE,
        height         : 1,
        internalFormat : 'RGB8',
        format         : 'RGB',
        unit           : 0,
        data           : new Uint8Array(d),
    });

    GL.initProgramUniforms('update', [ 'u_TimeDelta', 'u_TotalTime' ]);
    GL.initProgramUniforms('render', [ 'u_ProjectionMatrix', 'u_ViewMatrix' ]);

    GL.setDrawParams('render', {
        clearColor : [0.0, 0.0, 0.0, 1.0],
        enable     : ['BLEND', 'CULL_FACE', 'DEPTH_TEST'], // if enable is changed, it will override defaults
        blendFunc  : ['SRC_ALPHA', 'ONE_MINUS_SRC_ALPHA'],
        depthFunc  : ['LEQUAL']
    });

    GL.cameraPosition = [0, 1.5, 2.8];

    const opts = { 
        numParticles : SIZE*SIZE*SIZE,
        lifeRange    : [1.01, 10.1],
        dimensions : 3, 
        birthRate : 0.6
    };
    const ParticleSystem = GL.ParticleSystem('update', 'render', opts);
    ParticleSystem.rotate = { s:0.0005, a:[0,1,0]};
    GL.initGeometryUniforms('render', [ 'u_ModelMatrix' ]);

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
}
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function golTexture2d(_scale){
    const quadVert = __webpack_require__(/*! ./glsl/gameoflife/quadVert.glsl */ "./assets/js/glsl/gameoflife/quadVert.glsl");
    const updateFrag = __webpack_require__(/*! ./glsl/gameoflife/golFrag.glsl */ "./assets/js/glsl/gameoflife/golFrag.glsl");
    const renderFrag = __webpack_require__(/*! ./glsl/gameoflife/copyFrag.glsl */ "./assets/js/glsl/gameoflife/copyFrag.glsl");

    const GOL = {
        viewsize : [dim, dim],
        statesize: [dim/_scale, dim/_scale],
    };

    GL.initShaderProgram('update', quadVert, updateFrag, null, 'TRIANGLES');
    GL.initShaderProgram('render', quadVert, renderFrag, null, 'TRIANGLES');

    GL.setDrawParams('update', {
        viewport       : [0, 0, GOL.statesize[0], GOL.statesize[1]],
    });

    GL.setFramebufferRoutine('update', {
        bindFramebuffer : 'step',
        framebufferTexture2D : ['update', 'u_StateUpdate'],
        bindTexture : ['render', 'u_StateRender'],
    });

    GL.setFramebufferRoutine('render', {
        pre     : {
            func : 'swapTextures',
            args : [['update','u_StateUpdate'], ['render','u_StateRender']],
        },
        bindFramebuffer : null,
        bindTexture : ['render', 'u_StateRender'],
    });

    GL.framebuffer('step');

    let d = [];
    for(let i=0, size = GOL.statesize[0]*GOL.statesize[1]; i<size; i++){
        const state = Math.random() < 0.5 ? 255 : 0
        d.push(state, state, state, 0.0);
    }

    let d8 = new Uint8Array(d);

    GL.dataTexture('update', {
        name : 'u_StateUpdate',
        width : GOL.statesize[0],
        height : GOL.statesize[1],
        wrap : 'REPEAT',
        data           : d8
    });

    GL.dataTexture('render', {
        name : 'u_StateRender',
        width : GOL.statesize[0],
        height : GOL.statesize[1],
        wrap : 'REPEAT',
        data           : d8
    });


    GL.initProgramUniforms('render', [ 'u_Resolution' ]);

    GL.addProgramUniform('render', {
        name : 'u_Scale',
        type : 'uniform2fv',
        value : GOL.viewsize,
    });
    GL.addProgramUniform('update', {
        name : 'u_Scale',
        type : 'uniform2fv',
        value : GOL.statesize,
    });

    const GameOfLife = GL.Quad(['update', 'render']);

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
}
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function particles3D(){
    const updateVert = __webpack_require__(/*! ./glsl/particles3d/particle_update_vert.glsl */ "./assets/js/glsl/particles3d/particle_update_vert.glsl");
    const updateFrag = __webpack_require__(/*! ./glsl/particles3d/passthru_frag.glsl */ "./assets/js/glsl/particles3d/passthru_frag.glsl");
    const renderVert = __webpack_require__(/*! ./glsl/particles3d/particle_render_vert.glsl */ "./assets/js/glsl/particles3d/particle_render_vert.glsl");
    const renderFrag = __webpack_require__(/*! ./glsl/particles3d/particle_render_frag.glsl */ "./assets/js/glsl/particles3d/particle_render_frag.glsl");

    const transformFeedbackVaryings = [
        "v_Position",
        "v_Velocity",
        "v_Age",
        "v_Life",
    ];

    GL.initShaderProgram('update', updateVert, updateFrag, transformFeedbackVaryings, null);
    GL.initShaderProgram('render', renderVert, renderFrag, null, 'POINTS');

    let d = [];
    for(let i=0; i<512*512; ++i){
        d.push(Math.random()*255);
        d.push(Math.random()*255);
        d.push(Math.random()*255);
    }

    GL.dataTexture('update', {
        name           :'u_RgNoise',
        width          : 512,
        height         : 512,
        internalFormat : 'RGB8',
        format         : 'RGB',
        data           : new Uint8Array(d),
    });

    GL.initProgramUniforms('update', [ 'u_TimeDelta', 'u_TotalTime' ]);
    GL.initProgramUniforms('render', [ 'u_ProjectionMatrix', 'u_ViewMatrix' ]);

    GL.setDrawParams('render', {
        clearColor : [0.0, 0.0, 0.0, 1.0],
        enable     : ['BLEND'], // if enable is changed, it will override defaults
        blendFunc  : ['SRC_ALPHA', 'ONE_MINUS_SRC_ALPHA'],
    });

    GL.cameraPosition = [0, 2, 3.5];

    const opts = { 
        numParticles : 100000,
        lifeRange    : [1.01, 10.1],
        dimensions : 3, 
        birthRate : 2
    };
    const ParticleSystem = GL.ParticleSystem('update', 'render', opts);
    ParticleSystem.rotate = { s:0.0005, a:[0,1,0]};
    GL.initGeometryUniforms('render', [ 'u_ModelMatrix' ]);

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
}
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function simpleParticles() {
    const updateVert = __webpack_require__(/*! ./glsl/TFBparticles/particle_update_vert.glsl */ "./assets/js/glsl/TFBparticles/particle_update_vert.glsl");
    const updateFrag = __webpack_require__(/*! ./glsl/TFBparticles/passthru_frag.glsl */ "./assets/js/glsl/TFBparticles/passthru_frag.glsl");
    const renderVert = __webpack_require__(/*! ./glsl/TFBparticles/particle_render_vert.glsl */ "./assets/js/glsl/TFBparticles/particle_render_vert.glsl");
    const renderFrag = __webpack_require__(/*! ./glsl/TFBparticles/particle_render_frag.glsl */ "./assets/js/glsl/TFBparticles/particle_render_frag.glsl");

    const transformFeedbackVaryings = [
        "v_Position",
        "v_Velocity",
        "v_Age",
        "v_Life",
    ];


    GL.initShaderProgram('update', updateVert, updateFrag, transformFeedbackVaryings, null);
    GL.initShaderProgram('render', renderVert, renderFrag, null, 'POINTS');

    GL.initProgramUniforms('update', [ 'u_TimeDelta', 'u_Mouse' ]);
    GL.initProgramUniforms('render', [ 'u_ProjectionMatrix', 'u_ViewMatrix' ]);

    GL.setDrawParams('render', {
        clearColor : [0.1, 0.1, 0.3, 1.0],
        enable     : ['BLEND', 'CULL_FACE', 'DEPTH_TEST'], // if enable is changed, it will override defaults
        blendFunc  : ['SRC_ALPHA', 'ONE_MINUS_SRC_ALPHA'],
    });

    let d = [];
    for(let i=0; i<512*512; ++i){
        d.push(Math.random()*255);
        d.push(Math.random()*255);
    }

    GL.dataTexture('update', {
        name           :'u_RgNoise',
        width          : 512,
        height         : 512,
        internalFormat : 'RG8',
        format         : 'RG',
        data           : new Uint8Array(d),
    });

    const opts = { numParticles : 200, birthRate:0.1 };
    const ParticleSystem = GL.ParticleSystem('update', 'render', opts);
    GL.initGeometryUniforms('render', [ 'u_ModelMatrix' ]);

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
};
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function icosahedron() {
    const facesVert = __webpack_require__(/*! ./glsl/facesVert.glsl */ "./assets/js/glsl/facesVert.glsl");
    const facesFrag = __webpack_require__(/*! ./glsl/facesFrag.glsl */ "./assets/js/glsl/facesFrag.glsl");

    GL.initShaderProgram('faces', facesVert, facesFrag, null, 'TRIANGLES');

    const icos = GL.Icosahedron('faces');
    icos.rotate = {s:0.001, a:[1,1,0]};

    GL.initProgramUniforms('faces', [
        'u_ProjectionMatrix',
        'u_ViewMatrix',
    ]);
    GL.cameraPosition = [0, 1, 4];

    GL.initGeometryUniforms('faces', [ 'u_ModelMatrix' ]);

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
};
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function pointSphere() {
    const pointsVert = __webpack_require__(/*! ./glsl/pointsVert.glsl */ "./assets/js/glsl/pointsVert.glsl");
    const pointsFrag = __webpack_require__(/*! ./glsl/pointsFrag.glsl */ "./assets/js/glsl/pointsFrag.glsl");
    const basicFrag = __webpack_require__(/*! ./glsl/basicFrag.glsl */ "./assets/js/glsl/basicFrag.glsl");

    GL.initShaderProgram('points', pointsVert, pointsFrag, null, 'POINTS');
    GL.initShaderProgram('lines', pointsVert, basicFrag, null, 'LINES');

    GL.setDrawParams('lines', { clear : null });

    const points = GL.RandomPointSphere(['points'], 10000);
    points.rotate = {s:0.001, a:[1,1,0]};

    const cube = GL.Cube(['lines'], 'DEBUG');
    cube.rotate = {s:0.001, a:[1,1,0]};

    GL.initProgramUniforms('points', [
        'u_ProjectionMatrix',
        'u_ViewMatrix',
    ]);
    GL.initGeometryUniforms('points', [ 'u_ModelMatrix' ]);
    GL.initProgramUniforms('lines', [
        'u_ProjectionMatrix',
        'u_ViewMatrix',
    ]);
    GL.initGeometryUniforms('lines', [ 'u_ModelMatrix' ]);
    GL.cameraPosition = [0, 2, 4];

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
};
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function pointCube() {
    const pointsVert = __webpack_require__(/*! ./glsl/pointCube/pointsVert.glsl */ "./assets/js/glsl/pointCube/pointsVert.glsl");
    const pointsFrag = __webpack_require__(/*! ./glsl/pointCube/pointsFrag.glsl */ "./assets/js/glsl/pointCube/pointsFrag.glsl");

    GL.initShaderProgram('points', pointsVert, pointsFrag, null, 'POINTS');

    const points = GL.PointCloud(['points'], 1000);
    points.rotate = {s:-0.0005, a:[0.5,0.8,0.2]};

    GL.initProgramUniforms('points', [
        'u_ProjectionMatrix',
        'u_ViewMatrix',
    ]);
    GL.initGeometryUniforms('points', [ 'u_ModelMatrix' ]);

    let d = [];
    for(let i=0; i<8; i++){
        for(let j=0; j<8; j++){
            for(let k=0; k<8; k++){
                d.push(
                    Math.floor((i/8)* 255),
                    Math.floor((j/8)* 255),
                    Math.floor((k/8)* 255),
                    0);
            }
        }
    }

    GL.dataTexture('points', {
        name : 'u_Texture',
        width : 8*8*8,
        height : 1,
        data : new Uint8Array(d),
    });

    GL.cameraPosition = [0, 1.5, 1.5];

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
};
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function fourOhfour(){
    /* 404 CUBE */
    const textureVert = __webpack_require__(/*! ./glsl/textureVert.glsl */ "./assets/js/glsl/textureVert.glsl");
    const textureFrag = __webpack_require__(/*! ./glsl/textureFrag.glsl */ "./assets/js/glsl/textureFrag.glsl");

    console.error("404: GL_BP Program Not Found");
    GL.initShaderProgram('texture', textureVert, textureFrag, null, 'TRIANGLES');


    GL.initProgramUniforms('texture', [
        'u_ProjectionMatrix',
        'u_ViewMatrix',
    ]);

    const cube = GL.Cube(['texture'], '404');
    cube.rotate = { s:-0.002, a:[0.2,0.8,0.5]};

    GL.initGeometryUniforms('texture', [ 'u_ModelMatrix' ]);

    const r = [255, 0, 0, 255];
    const w = [255, 255, 255, 255];

    GL.dataTexture('texture', {
        width : 10,
        height : 5,
        data : new Uint8Array([
            ...w, ...w, ...w, ...r, ...w,...w, ...w, ...r, ...w, ...w,
            ...r, ...r, ...r, ...r, ...r,...w, ...r, ...w, ...r, ...w,
            ...w, ...r, ...w, ...r, ...w,...w, ...r, ...w, ...r, ...w,
            ...w, ...w, ...r, ...r, ...w,...w, ...r, ...w, ...r, ...w,
            ...w, ...w, ...w, ...r, ...w,...w, ...w, ...r, ...w, ...w,
        ]),
    });

    GL.cameraPosition = [0, 0, 5];

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
}
// -------------------------------------------------------------------------------

// GOL AS TEXTURE ----------------------------------------------------------------
function golTextureOscillate(_scale){
    const updateVert = __webpack_require__(/*! ./glsl/gameoflifeAsTexture/updateVert.glsl */ "./assets/js/glsl/gameoflifeAsTexture/updateVert.glsl");
    const renderVert = __webpack_require__(/*! ./glsl/gameoflifeAsTexture/renderVert.glsl */ "./assets/js/glsl/gameoflifeAsTexture/renderVert.glsl");
    const updateFrag = __webpack_require__(/*! ./glsl/gameoflifeAsTexture/golFrag.glsl */ "./assets/js/glsl/gameoflifeAsTexture/golFrag.glsl");
    const renderFrag = __webpack_require__(/*! ./glsl/gameoflifeAsTexture/copyFrag.glsl */ "./assets/js/glsl/gameoflifeAsTexture/copyFrag.glsl");

    const GOL = {
        viewsize : [dim, dim],
        statesize: [dim/_scale, dim/_scale],
    };

    GL.initShaderProgram('update', updateVert, updateFrag, null, 'TRIANGLES');
    GL.initShaderProgram('render', renderVert, renderFrag, null, 'TRIANGLES');

    GL.setDrawParams('update', {
        viewport       : [0, 0, GOL.statesize[0], GOL.statesize[1]],
    });

    GL.setFramebufferRoutine('update', {
        bindFramebuffer : 'step',
        framebufferTexture2D : ['update', 'u_StateUpdate'],
        bindTexture : ['render', 'u_StateRender'],
    });

    GL.setFramebufferRoutine('render', {
        pre     : {
            func : 'swapTextures',
            args : [['update','u_StateUpdate'], ['render','u_StateRender']],
        },
        bindFramebuffer : null,
        bindTexture : ['render', 'u_StateRender'],
    });

    GL.framebuffer('step');

    let d = [];
    for(let i=0, size = GOL.statesize[0]*GOL.statesize[1]; i<size; i++){
        const state = Math.random() < 0.5 ? 255 : 0
        d.push(state, state, state, 0.0);
    }

    let d8 = new Uint8Array(d);

    GL.dataTexture('update', {
        name : 'u_StateUpdate',
        width : GOL.statesize[0],
        height : GOL.statesize[1],
        wrap : 'REPEAT',
        data           : d8
    });

    GL.dataTexture('render', {
        name : 'u_StateRender',
        width : GOL.statesize[0],
        height : GOL.statesize[1],
        wrap : 'REPEAT',
        data           : d8
    });


    GL.initProgramUniforms('render', [ 'u_ViewMatrix', 'u_ProjectionMatrix' ]);

    GL.addProgramUniform('render', {
        name : 'u_Scale',
        type : 'uniform2fv',
        value : GOL.viewsize,
    });
    GL.addProgramUniform('update', {
        name : 'u_Scale',
        type : 'uniform2fv',
        value : GOL.statesize,
    });

    const GameOfLife = GL.Quad(['update', 'render']);
    GL.initGeometryUniforms('render', [ 'u_ModelMatrix' ]);

    GameOfLife.translate = [0, 0, -1.5]; 
    GameOfLife.rotate = {s:0.01, a:[-0.2,1,0.2]};
    GameOfLife.oscillate = true;

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
}
// -------------------------------------------------------------------------------


/***/ }),

/***/ "./assets/js/glsl/TFBparticles/particle_render_frag.glsl":
/*!***************************************************************!*\
  !*** ./assets/js/glsl/TFBparticles/particle_render_frag.glsl ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin float v_Age;\nin float v_Life;\n\nout vec4 o_FragColor;\n\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d){\n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid main() {\n    float t = v_Age/v_Life;\n    float dist = length(2.0 * gl_PointCoord - 1.0);\n    if (dist > 1.0) {\n            discard;\n    }\n    float invT = 1.0 - t;\n    o_FragColor = vec4(invT, invT, invT, 1.0);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/TFBparticles/particle_render_vert.glsl":
/*!***************************************************************!*\
  !*** ./assets/js/glsl/TFBparticles/particle_render_vert.glsl ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\n\nin vec2 i_Position;\nin vec2 i_Velocity;\nin float i_Age;\nin float i_Life;\n\nout float v_Age;\nout float v_Life;\nout vec2 v_Velocity;\n\nvoid main(){\n    v_Age = i_Age;\n    v_Life = i_Life;\n    v_Velocity = i_Velocity;\n\n    float ageFactor = 1.0 + (1.0 - i_Age/i_Life);\n\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * vec4(i_Position, 0.0, 1.0);\n    gl_PointSize = 1.0/gl_Position.z * 8.0 * ageFactor;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/TFBparticles/particle_update_vert.glsl":
/*!***************************************************************!*\
  !*** ./assets/js/glsl/TFBparticles/particle_update_vert.glsl ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\n\n#define PI 3.142\n\nprecision mediump float;\n\nuniform float u_TimeDelta;\n// uniform vec2 u_Mouse;\nuniform sampler2D u_RgNoise;\n\nvec2 u_Gravity = vec2(0.0, -0.8);\nvec2 u_Origin = vec2(0.0, -0.3);\nfloat u_MinTheta = PI/2.0 - 0.5;\nfloat u_MaxTheta = PI/2.0 + 0.5;\nfloat u_MinSpeed = 0.5;\nfloat u_MaxSpeed = 1.3;\n\nin vec2 i_Position;\nin vec2 i_Velocity;\nin float i_Age;\nin float i_Life;\n\nout vec2 v_Position;\nout vec2 v_Velocity;\nout float v_Age;\nout float v_Life;\n\nvoid main(){\n    if(i_Age >= i_Life) {\n        ivec2 noise_coord = ivec2(gl_VertexID % 512, gl_VertexID / 512);\n        vec2 rand = texelFetch(u_RgNoise, noise_coord, 0).rg;\n        float theta = u_MinTheta + rand.r*(u_MaxTheta - u_MinTheta);\n\n        float x = cos(theta);\n        float y = sin(theta);\n\n        v_Position = u_Origin;\n        // v_Position = u_Mouse;\n\n        v_Age = 0.0;\n        v_Life = i_Life;\n\n        v_Velocity = vec2(x, y) * (u_MinSpeed + rand.g * (u_MaxSpeed - u_MinSpeed));\n    } else {\n        v_Position = i_Position + i_Velocity * u_TimeDelta;\n        v_Age = i_Age + u_TimeDelta;\n        v_Life = i_Life;\n        v_Velocity = i_Velocity + u_Gravity * u_TimeDelta;\n    }\n}\n"

/***/ }),

/***/ "./assets/js/glsl/TFBparticles/passthru_frag.glsl":
/*!********************************************************!*\
  !*** ./assets/js/glsl/TFBparticles/passthru_frag.glsl ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nout vec4 o_FragColor;\n\nvoid main() {\n    o_FragColor = vec4(1.0);\n}\n\n"

/***/ }),

/***/ "./assets/js/glsl/basicFrag.glsl":
/*!***************************************!*\
  !*** ./assets/js/glsl/basicFrag.glsl ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nout vec4 OUTCOLOUR;\n\nvoid main(){\n    OUTCOLOUR = vec4(1.0, 0.0, 0.0, 1.0);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/facesFrag.glsl":
/*!***************************************!*\
  !*** ./assets/js/glsl/facesFrag.glsl ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 v_Color;\n\nout vec4 OUTCOLOUR;\n\nvoid main(){\n\n    OUTCOLOUR = vec4(v_Color, 1.0);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/facesVert.glsl":
/*!***************************************!*\
  !*** ./assets/js/glsl/facesVert.glsl ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 i_Position;\nin vec3 i_Normal;\nin vec3 i_Color;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nout vec3 v_Color;\nout vec3 v_Normal;\n\nvoid main(){\n    v_Color = i_Color;\n    v_Normal = i_Normal;\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position, 1.0);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/flowfield/particle_render_frag.glsl":
/*!************************************************************!*\
  !*** ./assets/js/glsl/flowfield/particle_render_frag.glsl ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin float v_Age;\nin float v_Life;\n\nout vec4 o_FragColor;\n\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d){\n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid main() {\n    float t = v_Age/v_Life;\n    float distance = length(2.0 * gl_PointCoord - 1.0);\n    if (distance > 1.0) {\n            discard;\n    }\n    o_FragColor = vec4(\n            palette(t,\n                vec3(0.5),\n                vec3(0.5),\n                vec3(1.0),\n                vec3(0.33,0.67,0.89)), 1.0-t\n            );\n}\n"

/***/ }),

/***/ "./assets/js/glsl/flowfield/particle_render_vert.glsl":
/*!************************************************************!*\
  !*** ./assets/js/glsl/flowfield/particle_render_vert.glsl ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nin vec3 i_Position;\nin float i_Age;\nin float i_Life;\nin vec3 i_Velocity;\n\nout float v_Age;\nout float v_Life;\nout vec3 v_Velocity;\n\nvoid main(){\n    v_Age = i_Age;\n    v_Life = i_Life;\n    v_Velocity = i_Velocity;\n    float ageFactor = 1.0 + (1.0 - i_Age/i_Life);\n\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position, 1.0);\n    gl_PointSize = 1.0/gl_Position.z * 6.0 * ageFactor;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/flowfield/particle_update_vert.glsl":
/*!************************************************************!*\
  !*** ./assets/js/glsl/flowfield/particle_update_vert.glsl ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\n\n#define PI 3.142\n\nprecision mediump float;\nprecision mediump sampler3D;\n\nuniform float u_TimeDelta;\nuniform float u_TotalTime;\nuniform sampler2D u_InitialPosition;\nuniform sampler2D u_RgNoise;\n\nvec3 u_Gravity = vec3(0.0, 0.0, 0.0);\nvec3 u_Origin = vec3(0.0, 0.0, 0.0);\nfloat u_MinTheta = -PI;\nfloat u_MaxTheta = PI;\nfloat u_MinSpeed = 0.01;\nfloat u_MaxSpeed = 0.02;\n\n// uniform sampler2D u_ForceField;\n\n// PARTICLE SPECIFIC ----------\nin vec3 i_Position;\nin float i_Age;\nin float i_Life;\nin vec3 i_Velocity;\n// ----------------------------\n\n\n// Transform Feedback Varyings\nout vec3 v_Position;\nout float v_Age;\nout float v_Life;\nout vec3 v_Velocity;\n\nvec3 mod289(vec3 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\n\nvec4 permute(vec4 x) {\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec3 v) {\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n    // First corner\n    vec3 i  = floor(v + dot(v, C.yyy) );\n    vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n    // Other corners\n    vec3 g = step(x0.yzx, x0.xyz);\n    vec3 l = 1.0 - g;\n    vec3 i1 = min( g.xyz, l.zxy );\n    vec3 i2 = max( g.xyz, l.zxy );\n\n    //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n    //   x1 = x0 - i1  + 1.0 * C.xxx;\n    //   x2 = x0 - i2  + 2.0 * C.xxx;\n    //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n    vec3 x1 = x0 - i1 + C.xxx;\n    vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n    vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n    // Permutations\n    i = mod289(i);\n    vec4 p = permute( permute( permute(\n                    i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n                + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n            + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n    // Gradients: 7x7 points over a square, mapped onto an octahedron.\n    // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n    float n_ = 0.142857142857; // 1.0/7.0\n    vec3  ns = n_ * D.wyz - D.xzx;\n\n    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n    vec4 x_ = floor(j * ns.z);\n    vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n    vec4 x = x_ *ns.x + ns.yyyy;\n    vec4 y = y_ *ns.x + ns.yyyy;\n    vec4 h = 1.0 - abs(x) - abs(y);\n\n    vec4 b0 = vec4( x.xy, y.xy );\n    vec4 b1 = vec4( x.zw, y.zw );\n\n    //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n    //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n    vec4 s0 = floor(b0)*2.0 + 1.0;\n    vec4 s1 = floor(b1)*2.0 + 1.0;\n    vec4 sh = -step(h, vec4(0.0));\n\n    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n    vec3 p0 = vec3(a0.xy,h.x);\n    vec3 p1 = vec3(a0.zw,h.y);\n    vec3 p2 = vec3(a1.xy,h.z);\n    vec3 p3 = vec3(a1.zw,h.w);\n\n    //Normalise gradients\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n\n    // Mix final noise value\n    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n    m = m * m;\n    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                dot(p2,x2), dot(p3,x3) ) );\n}\n\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nvec3 flow(vec3 _p){\n    float x = _p.y * _p.z;\n    float y = _p.x * _p.z;\n    float z = _p.y * _p.x;\n\n    return vec3(x,y,z);\n}\n\nvec3 trigFlow(vec3 _p){\n    return vec3(sin(_p.y*_p.z), cos(sin(_p.x)), sin(_p.z*_p.y));\n}\n\nvec3 piFlow(vec3 _p){\n    return vec3(\n            sin(2.0 * PI * _p.z),\n            sin(2.0 * PI * _p.x),\n            cos(2.0 * PI * _p.y)\n        );\n}\n\nvoid main(){\n    if(i_Age >= i_Life) {\n        ivec2 noise_coord = ivec2(gl_VertexID % 512, gl_VertexID / 512);\n        vec3 rand = texelFetch(u_RgNoise, noise_coord, 0).rgb;\n        float theta = u_MinTheta + rand.r*(u_MaxTheta - u_MinTheta);\n        float phi   = u_MinTheta + rand.b*(u_MaxTheta - u_MinTheta);\n\n        float x = sin(theta)*cos(phi);\n        float y = sin(theta)*sin(phi);\n        float z = cos(theta);\n\n        v_Position = 0.5 * (2.0 * texelFetch(u_InitialPosition, ivec2(gl_VertexID, 0), 0).rgb - vec3(1.0));\n        v_Age = 0.0;\n        v_Life = i_Life;\n        v_Velocity = vec3(0);\n    } else {\n        v_Position = i_Position + i_Velocity * u_TimeDelta;\n        v_Age = i_Age + u_TimeDelta;\n        v_Life = i_Life;\n        v_Velocity = i_Velocity + u_Gravity * u_TimeDelta + piFlow(v_Position) * 0.08 * u_TimeDelta;\n    }\n}\n"

/***/ }),

/***/ "./assets/js/glsl/flowfield/passthru_frag.glsl":
/*!*****************************************************!*\
  !*** ./assets/js/glsl/flowfield/passthru_frag.glsl ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nout vec4 o_FragColor;\n\nvoid main() {\n    o_FragColor = vec4(1.0);\n}\n\n"

/***/ }),

/***/ "./assets/js/glsl/gameoflife/copyFrag.glsl":
/*!*************************************************!*\
  !*** ./assets/js/glsl/gameoflife/copyFrag.glsl ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nuniform sampler2D u_StateRender;\nuniform vec2 u_Scale;\n\nin vec2 v_TexCoord;\nout vec4 OUTCOLOR;\n\nvoid main(){\n    OUTCOLOR = texture(u_StateRender, gl_FragCoord.xy / u_Scale);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/gameoflife/golFrag.glsl":
/*!************************************************!*\
  !*** ./assets/js/glsl/gameoflife/golFrag.glsl ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nuniform sampler2D u_StateUpdate;\nuniform vec2 u_Scale;\n\nin vec2 v_TexCoord;\nout vec4 OUTCOLOR;\n\nint get(vec2 _offset){\n    return int(texture(u_StateUpdate, (gl_FragCoord.xy + _offset) / u_Scale).r);\n}\n\nvoid main(){\n    int sum =\n        get(vec2(-1.0, -1.0)) +\n        get(vec2(-1.0,  0.0)) +\n        get(vec2(-1.0,  1.0)) +\n        get(vec2( 0.0, -1.0)) +\n        get(vec2( 0.0,  1.0)) +\n        get(vec2( 1.0, -1.0)) +\n        get(vec2( 1.0,  0.0)) +\n        get(vec2( 1.0,  1.0));\n    if (sum == 3) {\n        OUTCOLOR = vec4(1.0, 1.0, 1.0, 1.0);\n    } else if (sum == 2) {\n        float current = float(get(vec2(0.0, 0.0)));\n        OUTCOLOR = vec4(current, current, current, 1.0);\n    } else {\n        OUTCOLOR = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}\n"

/***/ }),

/***/ "./assets/js/glsl/gameoflife/quadVert.glsl":
/*!*************************************************!*\
  !*** ./assets/js/glsl/gameoflife/quadVert.glsl ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 i_Position;\nin vec3 i_Normal;\nin vec2 i_TexCoord;\n\nout vec2 v_TexCoord;\nout vec3 v_Normal;\n\nvoid main(){\n    gl_Position = vec4(i_Position,  1.0);\n    v_TexCoord = i_TexCoord;\n    v_Normal = i_Normal;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/gameoflifeAsTexture/copyFrag.glsl":
/*!**********************************************************!*\
  !*** ./assets/js/glsl/gameoflifeAsTexture/copyFrag.glsl ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nuniform sampler2D u_StateRender;\n// uniform vec2 u_Scale;\n\nin vec2 v_TexCoord;\nout vec4 OUTCOLOR;\n\nvoid main(){\n    // Acts as a mask:\n    // OUTCOLOR = texture(u_StateRender, gl_FragCoord.xy / u_Scale);\n    OUTCOLOR = texture(u_StateRender, v_TexCoord.xy);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/gameoflifeAsTexture/golFrag.glsl":
/*!*********************************************************!*\
  !*** ./assets/js/glsl/gameoflifeAsTexture/golFrag.glsl ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nuniform sampler2D u_StateUpdate;\nuniform vec2 u_Scale;\n\nout vec4 OUTCOLOR;\n\nint get(vec2 _offset){\n    return int(texture(u_StateUpdate, (gl_FragCoord.xy + _offset) / u_Scale).r);\n}\n\nvoid main(){\n    int sum =\n        get(vec2(-1.0, -1.0)) +\n        get(vec2(-1.0,  0.0)) +\n        get(vec2(-1.0,  1.0)) +\n        get(vec2( 0.0, -1.0)) +\n        get(vec2( 0.0,  1.0)) +\n        get(vec2( 1.0, -1.0)) +\n        get(vec2( 1.0,  0.0)) +\n        get(vec2( 1.0,  1.0));\n    if (sum == 3) {\n        OUTCOLOR = vec4(1.0, 1.0, 1.0, 1.0);\n    } else if (sum == 2) {\n        float current = float(get(vec2(0.0, 0.0)));\n        OUTCOLOR = vec4(current, current, current, 1.0);\n    } else {\n        OUTCOLOR = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}\n"

/***/ }),

/***/ "./assets/js/glsl/gameoflifeAsTexture/renderVert.glsl":
/*!************************************************************!*\
  !*** ./assets/js/glsl/gameoflifeAsTexture/renderVert.glsl ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 i_Position;\nin vec3 i_Normal;\nin vec2 i_TexCoord;\n\nuniform mat4 u_ModelMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ProjectionMatrix;\n\nout vec2 v_TexCoord;\nout vec3 v_Normal;\n\nvoid main(){\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position,  1.0);\n    v_TexCoord = i_TexCoord;\n    v_Normal = i_Normal;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/gameoflifeAsTexture/updateVert.glsl":
/*!************************************************************!*\
  !*** ./assets/js/glsl/gameoflifeAsTexture/updateVert.glsl ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 i_Position;\nin vec3 i_Normal;\nin vec2 i_TexCoord;\n\nout vec2 v_TexCoord;\nout vec3 v_Normal;\n\nvoid main(){\n    gl_Position = vec4(i_Position,  1.0);\n    v_TexCoord = i_TexCoord;\n    v_Normal = i_Normal;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/particles3d/particle_render_frag.glsl":
/*!**************************************************************!*\
  !*** ./assets/js/glsl/particles3d/particle_render_frag.glsl ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin float v_Age;\nin float v_Life;\n\nout vec4 o_FragColor;\n\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d){\n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid main() {\n    float t = 0.01 + v_Age/v_Life;\n    float distance = length(2.0 * gl_PointCoord - 1.0);\n    if (distance > 1.0) {\n            discard;\n    }\n    // o_FragColor = vec4(0.1, 0.1, 0.1, 1.0);\n    o_FragColor = vec4(\n            palette(t,\n                vec3(0.9,0.7,0.8),\n                vec3(0.7,0.8,0.3),\n                vec3(0.75,0.6,0.6),\n                vec3(0.1,0.15,0.20)), 1.0-t\n            );\n    // o_FragColor = vec4(\n            // palette(t,\n                // vec3(0.8,0.3,0.2),\n                // vec3(0.7,0.3,0.3),\n                // vec3(0.9,0.4,0.2),\n                // vec3(0.2,0.15,0.20)), 1.0-t\n            // );\n}\n"

/***/ }),

/***/ "./assets/js/glsl/particles3d/particle_render_vert.glsl":
/*!**************************************************************!*\
  !*** ./assets/js/glsl/particles3d/particle_render_vert.glsl ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nin vec3 i_Position;\nin float i_Age;\nin float i_Life;\nin vec3 i_Velocity;\n\nout float v_Age;\nout float v_Life;\nout vec3 v_Velocity;\n\nvoid main(){\n    v_Age = i_Age;\n    v_Life = i_Life;\n    v_Velocity = i_Velocity;\n    float ageFactor = 1.0 + (1.0 - i_Age/i_Life);\n\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position, 1.0);\n    gl_PointSize = 1.0/gl_Position.z * 8.0 * ageFactor;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/particles3d/particle_update_vert.glsl":
/*!**************************************************************!*\
  !*** ./assets/js/glsl/particles3d/particle_update_vert.glsl ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\n\n#define PI 3.142\n\nprecision mediump float;\n\nuniform float u_TimeDelta;\nuniform float u_TotalTime;\nuniform sampler2D u_RgNoise;\nuniform sampler2D u_ForceField;\n// uniform vec2 u_Gravity;\n\n// PARTICLE SPECIFIC ----------\n// uniform vec2 u_Origin;\n// uniform float u_MinTheta;\n// uniform float u_MaxTheta;\n// uniform float u_MinSpeed;\n// uniform float u_MaxSpeed;\n// ----------------------------\n\nvec3 u_Gravity = vec3(0.0, 0.7, 0.0);\nvec3 u_Origin = vec3(0.0, 0.0, 0.0);\n// float u_MinTheta = PI/2.0 - 0.3;\n// float u_MaxTheta = PI/2.0 + 0.3;\nfloat u_MinTheta = -PI;\nfloat u_MaxTheta = PI;\nfloat u_MinSpeed = 0.01;\nfloat u_MaxSpeed = 0.02;\n\n// uniform sampler2D u_ForceField;\n\n// PARTICLE SPECIFIC ----------\nin vec3 i_Position;\nin float i_Age;\nin float i_Life;\nin vec3 i_Velocity;\n// ----------------------------\n\n\n// Transform Feedback Varyings\nout vec3 v_Position;\nout float v_Age;\nout float v_Life;\nout vec3 v_Velocity;\n\nvec3 mod289(vec3 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\n\nvec4 permute(vec4 x) {\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec3 v) {\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n    // First corner\n    vec3 i  = floor(v + dot(v, C.yyy) );\n    vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n    // Other corners\n    vec3 g = step(x0.yzx, x0.xyz);\n    vec3 l = 1.0 - g;\n    vec3 i1 = min( g.xyz, l.zxy );\n    vec3 i2 = max( g.xyz, l.zxy );\n\n    //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n    //   x1 = x0 - i1  + 1.0 * C.xxx;\n    //   x2 = x0 - i2  + 2.0 * C.xxx;\n    //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n    vec3 x1 = x0 - i1 + C.xxx;\n    vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n    vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n    // Permutations\n    i = mod289(i);\n    vec4 p = permute( permute( permute(\n                    i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n                + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n            + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n    // Gradients: 7x7 points over a square, mapped onto an octahedron.\n    // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n    float n_ = 0.142857142857; // 1.0/7.0\n    vec3  ns = n_ * D.wyz - D.xzx;\n\n    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n    vec4 x_ = floor(j * ns.z);\n    vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n    vec4 x = x_ *ns.x + ns.yyyy;\n    vec4 y = y_ *ns.x + ns.yyyy;\n    vec4 h = 1.0 - abs(x) - abs(y);\n\n    vec4 b0 = vec4( x.xy, y.xy );\n    vec4 b1 = vec4( x.zw, y.zw );\n\n    //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n    //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n    vec4 s0 = floor(b0)*2.0 + 1.0;\n    vec4 s1 = floor(b1)*2.0 + 1.0;\n    vec4 sh = -step(h, vec4(0.0));\n\n    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n    vec3 p0 = vec3(a0.xy,h.x);\n    vec3 p1 = vec3(a0.zw,h.y);\n    vec3 p2 = vec3(a1.xy,h.z);\n    vec3 p3 = vec3(a1.zw,h.w);\n\n    //Normalise gradients\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n\n    // Mix final noise value\n    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n    m = m * m;\n    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                dot(p2,x2), dot(p3,x3) ) );\n}\n\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\n\nvoid main(){\n    if(i_Age >= i_Life) {\n        ivec2 noise_coord = ivec2(gl_VertexID % 512, gl_VertexID / 512);\n        vec3 rand = texelFetch(u_RgNoise, noise_coord, 0).rgb;\n        // float theta = u_MinTheta + rand.r*(u_MaxTheta - u_MinTheta);\n        float theta = u_MinTheta + rand.r*(u_MaxTheta - u_MinTheta);\n        float phi   = u_MinTheta + rand.b*(u_MaxTheta - u_MinTheta);\n\n        float x = sin(theta)*cos(phi);\n        float y = sin(theta)*sin(phi);\n        float z = cos(theta);\n\n        float posx = (rand.x-0.5)*0.1;\n        float posz = (rand.z-0.5)*0.8;\n\n        // v_Position = u_Origin;\n        v_Position = vec3(posx, -1.6, posz);\n        v_Age = 0.0;\n        v_Life = i_Life;\n\n        v_Velocity = vec3(x, y, z) * (u_MinSpeed + rand.g * (u_MaxSpeed - u_MinSpeed));\n    } else {\n        v_Position = i_Position + i_Velocity * u_TimeDelta;\n        v_Age = i_Age + u_TimeDelta;\n        v_Life = i_Life;\n        // vec3 force = 0.5 * (2.0 * texture(u_ForceField, i_Position.xy).rgb - vec3(1.0));\n        vec3 force = vec3(\n                snoise(i_Position.xyz+u_TotalTime*0.1),\n                snoise(i_Position.yzx+u_TotalTime*0.1),\n                snoise(i_Position.zxy+u_TotalTime*0.1)\n                );\n        v_Velocity = i_Velocity + u_Gravity * u_TimeDelta + force * u_TimeDelta;\n    }\n}\n"

/***/ }),

/***/ "./assets/js/glsl/particles3d/passthru_frag.glsl":
/*!*******************************************************!*\
  !*** ./assets/js/glsl/particles3d/passthru_frag.glsl ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nout vec4 o_FragColor;\n\nvoid main() {\n    o_FragColor = vec4(1.0);\n}\n\n"

/***/ }),

/***/ "./assets/js/glsl/pointCube/pointsFrag.glsl":
/*!**************************************************!*\
  !*** ./assets/js/glsl/pointCube/pointsFrag.glsl ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nout vec4 OUTCOLOUR;\n\nvoid main(){\n    float distance = length(2.0 * gl_PointCoord - 1.0);\n    if (distance > 1.0) {\n            discard;\n    }\n    OUTCOLOUR = vec4(0.0, 0.0, 0.0, 1.0);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/pointCube/pointsVert.glsl":
/*!**************************************************!*\
  !*** ./assets/js/glsl/pointCube/pointsVert.glsl ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 i_Position;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nuniform sampler2D u_Texture;\n\nfloat off = 0.5-(1.0/16.0);\n\nvoid main(){\n    // float vel = texelFetch(u_Texture, ivec2(gl_VertexID, 0), 0).r;\n    vec3 position = texelFetch(u_Texture, ivec2(gl_VertexID, 0), 0).rgb;\n    // position /= 255.0;\n    position -= off;\n    // position -= vec3(0.5);\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position*position, 1.0);\n    // gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position, 1.0);\n    gl_PointSize = (gl_Position.w * -1.0) + 6.0;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/pointsFrag.glsl":
/*!****************************************!*\
  !*** ./assets/js/glsl/pointsFrag.glsl ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nout vec4 OUTCOLOUR;\n\nvoid main(){\n    float distance = length(2.0 * gl_PointCoord - 1.0);\n    if (distance > 1.0) {\n            discard;\n    }\n    OUTCOLOUR = vec4(0.0, 0.0, 0.0, 1.0);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/pointsVert.glsl":
/*!****************************************!*\
  !*** ./assets/js/glsl/pointsVert.glsl ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 i_Position;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nvoid main(){\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position, 1.0);\n    gl_PointSize = (gl_Position.w * -1.0) + 6.0;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/textureFrag.glsl":
/*!*****************************************!*\
  !*** ./assets/js/glsl/textureFrag.glsl ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec2 v_TexCoord;\n\nuniform sampler2D u_Texture;\n\nout vec4 OUTCOLOUR;\n\nvoid main(){\n    OUTCOLOUR = texture(u_Texture, v_TexCoord);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/textureVert.glsl":
/*!*****************************************!*\
  !*** ./assets/js/glsl/textureVert.glsl ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 i_Position;\nin vec2 i_TexCoord;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nout vec2 v_TexCoord;\n\nvoid main(){\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position, 1.0);\n\n    v_TexCoord = i_TexCoord;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/userInteraction/particle_render_frag.glsl":
/*!******************************************************************!*\
  !*** ./assets/js/glsl/userInteraction/particle_render_frag.glsl ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin float v_Age;\nin float v_Life;\n\nout vec4 o_FragColor;\n\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d){\n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid main() {\n    float t = v_Age/v_Life;\n    float distance = length(2.0 * gl_PointCoord - 1.0);\n    if (distance > 1.0) {\n            discard;\n    }\n    o_FragColor = vec4(\n            palette(t,\n                vec3(0.5),\n                vec3(0.5),\n                vec3(1.0),\n                vec3(0.0,0.15,0.33)), 1.0-t\n            );\n}\n"

/***/ }),

/***/ "./assets/js/glsl/userInteraction/particle_render_vert.glsl":
/*!******************************************************************!*\
  !*** ./assets/js/glsl/userInteraction/particle_render_vert.glsl ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nin vec3 i_Position;\nin float i_Age;\nin float i_Life;\nin vec3 i_Velocity;\n\nout float v_Age;\nout float v_Life;\nout vec3 v_Velocity;\n\nvoid main(){\n    v_Age = i_Age;\n    v_Life = i_Life;\n    v_Velocity = i_Velocity;\n    float ageFactor = 1.0+(1.0 - i_Age/i_Life);\n\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * vec4(i_Position, 1.0);\n    gl_PointSize = 1.0/gl_Position.z * 4.0 * ageFactor;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/userInteraction/particle_update_vert.glsl":
/*!******************************************************************!*\
  !*** ./assets/js/glsl/userInteraction/particle_update_vert.glsl ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\n\n#define PI 3.142\n\nprecision mediump float;\nprecision mediump sampler3D;\n\nuniform float u_TimeDelta;\nuniform float u_TotalTime;\nuniform vec2 u_Mouse;\nuniform int u_Click;\nuniform sampler2D u_InitialPosition;\nuniform sampler2D u_NoiseRGB;\nuniform int u_NumParticlesSqRoot;\nuniform mat4 u_ModelMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_InverseModelMatrix;\n\nvec3 u_Gravity = vec3(0.0, 0.0, 0.0);\nvec3 u_Origin = vec3(0.0, 0.0, 0.0);\nfloat u_MinTheta = -PI;\nfloat u_MaxTheta = PI;\nfloat u_MinSpeed = 0.01;\nfloat u_MaxSpeed = 0.02;\nvec3 acc = vec3(0.0);\n\nin vec3 i_Position;\nin float i_Age;\nin float i_Life;\nin vec3 i_Velocity;\n\n// Transform Feedback Varyings\nout vec3 v_Position;\nout float v_Age;\nout float v_Life;\nout vec3 v_Velocity;\n\nvec3 mod289(vec3 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\n\nvec4 permute(vec4 x) {\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec3 v) {\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n    // First corner\n    vec3 i  = floor(v + dot(v, C.yyy) );\n    vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n    // Other corners\n    vec3 g = step(x0.yzx, x0.xyz);\n    vec3 l = 1.0 - g;\n    vec3 i1 = min( g.xyz, l.zxy );\n    vec3 i2 = max( g.xyz, l.zxy );\n\n    //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n    //   x1 = x0 - i1  + 1.0 * C.xxx;\n    //   x2 = x0 - i2  + 2.0 * C.xxx;\n    //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n    vec3 x1 = x0 - i1 + C.xxx;\n    vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n    vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n    // Permutations\n    i = mod289(i);\n    vec4 p = permute( permute( permute(\n                    i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n                + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n            + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n    // Gradients: 7x7 points over a square, mapped onto an octahedron.\n    // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n    float n_ = 0.142857142857; // 1.0/7.0\n    vec3  ns = n_ * D.wyz - D.xzx;\n\n    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n    vec4 x_ = floor(j * ns.z);\n    vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n    vec4 x = x_ *ns.x + ns.yyyy;\n    vec4 y = y_ *ns.x + ns.yyyy;\n    vec4 h = 1.0 - abs(x) - abs(y);\n\n    vec4 b0 = vec4( x.xy, y.xy );\n    vec4 b1 = vec4( x.zw, y.zw );\n\n    //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n    //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n    vec4 s0 = floor(b0)*2.0 + 1.0;\n    vec4 s1 = floor(b1)*2.0 + 1.0;\n    vec4 sh = -step(h, vec4(0.0));\n\n    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n    vec3 p0 = vec3(a0.xy,h.x);\n    vec3 p1 = vec3(a0.zw,h.y);\n    vec3 p2 = vec3(a1.xy,h.z);\n    vec3 p3 = vec3(a1.zw,h.w);\n\n    //Normalise gradients\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n\n    // Mix final noise value\n    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n    m = m * m;\n    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                dot(p2,x2), dot(p3,x3) ) );\n}\n\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nvec3 flow(vec3 _p){\n    float x = _p.y * _p.z;\n    float y = _p.x * _p.z;\n    float z = _p.y * _p.x;\n\n    return vec3(x,y,z);\n}\n\nvec3 trigFlow(vec3 _p){\n    return vec3(sin(_p.y*_p.z), cos(sin(_p.x)), sin(_p.z*_p.y));\n}\n\nvec3 piFlow(vec3 _p){\n    return vec3(\n            sin(2.0 * PI * _p.z),\n            sin(2.0 * PI * _p.x),\n            cos(2.0 * PI * _p.y)\n        );\n}\n\nvec3 repel(vec3 _r, vec3 _pos){\n    vec3 dir = _pos - _r;\n    float d = length(dir);\n    normalize(dir);\n    float force = 1.0/(100.0*d*d);\n    dir *= force;\n    return dir;\n}\n\nfloat raySphereIntersect(vec3 r0, vec3 rd, vec3 s0, float sr) {\n    // - r0: ray origin\n    // - rd: normalized ray direction\n    // - s0: sphere center\n    // - sr: sphere radius\n    // - Returns distance from r0 to first intersecion with sphere,\n    //   or -1.0 if no intersection.\n    float a = dot(rd, rd);\n    vec3 s0_r0 = r0 - s0;\n    float b = 2.0 * dot(rd, s0_r0);\n    float c = dot(s0_r0, s0_r0) - (sr * sr);\n    if (b*b - 4.0*a*c < 0.0) {\n        return -1.0;\n    }\n    return (-b - sqrt((b*b) - 4.0*a*c))/(2.0*a);\n}\n\n\nvec3 rotateY(vec3 _p){\n    float t = u_TimeDelta * (PI / 12.0);\n    mat3 rY = mat3(cos(t), 0, -sin(t), 0, 1, 0, sin(t), 0, cos(t));\n    return rY * _p;\n}\n\nvec3 rotateZ(vec3 _p){\n    float t = u_TimeDelta * (PI / 12.0);\n    mat3 rZ = mat3(cos(t), sin(t), 0, -sin(t), cos(t), 0, 0, 0, 1);\n    return rZ * _p;\n}\n\nvoid main(){\n    if(i_Age >= i_Life) {\n        v_Position = 1.0 * (2.0 * texelFetch(u_InitialPosition, ivec2(gl_VertexID%u_NumParticlesSqRoot, gl_VertexID/u_NumParticlesSqRoot), 0).rgb - vec3(1.0));\n        v_Age = 0.0;\n        v_Life = i_Life;\n        v_Velocity = vec3(0);\n    } else {\n        if(u_Click > 0) {\n            vec4 rayStart = vec4(u_Mouse, -1.0, 1.0);\n            vec4 rayEnd   = vec4(u_Mouse,  0.0, 1.0);\n\n            mat4 M = inverse(u_ProjectionMatrix * u_ViewMatrix);\n            vec4 rayStart_world = M * rayStart;\n            rayStart_world /= rayStart_world.w;\n            vec4 rayEnd_world = M * rayEnd;\n            rayEnd_world  /=rayEnd_world.w;\n\n            vec3 rayDir_world = vec4(rayEnd_world - rayStart_world).xyz;\n            rayDir_world = normalize(rayDir_world);\n\n            // vec4 clickPos = inverse(u_ProjectionMatrix) * inverse(u_ViewMatrix) * vec4(u_Mouse, -1.0, 1.0);\n            // vec3 rO = clickPos.xyz;\n            // vec3 rD = normalize(vec3(0.0, 0.0, -1.0));\n            vec3 rO = rayStart_world.xyz;\n            vec3 rD = rayDir_world;\n            float distToIntersect = raySphereIntersect(rO, rD, vec3(0), 0.5);\n            vec3 intersect = rO + rD*distToIntersect;\n            acc += repel(i_Position,intersect);\n        }\n        v_Position = rotateY(i_Position) + i_Velocity * u_TimeDelta;\n        v_Age = i_Age + u_TimeDelta;\n        v_Life = i_Life;\n        vec3 force = vec3(\n                snoise(v_Position.xyz+u_TotalTime*0.1),\n                snoise(v_Position.yzx+u_TotalTime*0.1),\n                snoise(v_Position.zxy+u_TotalTime*0.1)\n                );\n        v_Velocity = i_Velocity + acc + u_Gravity + force*0.05 * u_TimeDelta;\n        acc *= 0.0;\n    }\n}\n"

/***/ }),

/***/ "./assets/js/glsl/userInteraction/passthru_frag.glsl":
/*!***********************************************************!*\
  !*** ./assets/js/glsl/userInteraction/passthru_frag.glsl ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nout vec4 o_FragColor;\n\nvoid main() {\n    o_FragColor = vec4(1.0);\n}\n\n"

/***/ })

/******/ });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,