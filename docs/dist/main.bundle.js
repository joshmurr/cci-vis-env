(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./assets/js/gallery.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/GL_BP/prod.bundle.js":
/*!****************************************!*\
  !*** ./assets/js/GL_BP/prod.bundle.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(t,r){if(true)module.exports=r();else { var i, e; }}(window,(function(){return function(t){var r={};function e(i){if(r[i])return r[i].exports;var s=r[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,e),s.l=!0,s.exports}return e.m=t,e.c=r,e.d=function(t,r,i){e.o(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,r){if(1&r&&(t=e(t)),8&r)return t;if(4&r&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&r&&"string"!=typeof t)for(var s in t)e.d(i,s,function(r){return t[r]}.bind(null,s));return i},e.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,"a",r),r},e.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},e.p="",e(e.s=7)}({7:function(t,r,e){"use strict";e.r(r),e.d(r,"default",(function(){return sr}));var i={};e.r(i),e.d(i,"create",(function(){return h})),e.d(i,"clone",(function(){return u})),e.d(i,"copy",(function(){return f})),e.d(i,"fromValues",(function(){return l})),e.d(i,"set",(function(){return c})),e.d(i,"identity",(function(){return g})),e.d(i,"transpose",(function(){return _})),e.d(i,"invert",(function(){return m})),e.d(i,"adjoint",(function(){return d})),e.d(i,"determinant",(function(){return b})),e.d(i,"multiply",(function(){return p})),e.d(i,"translate",(function(){return M})),e.d(i,"scale",(function(){return A})),e.d(i,"rotate",(function(){return R})),e.d(i,"rotateX",(function(){return v})),e.d(i,"rotateY",(function(){return T})),e.d(i,"rotateZ",(function(){return F})),e.d(i,"fromTranslation",(function(){return y})),e.d(i,"fromScaling",(function(){return E})),e.d(i,"fromRotation",(function(){return U})),e.d(i,"fromXRotation",(function(){return x})),e.d(i,"fromYRotation",(function(){return P})),e.d(i,"fromZRotation",(function(){return B})),e.d(i,"fromRotationTranslation",(function(){return w})),e.d(i,"fromQuat2",(function(){return O})),e.d(i,"getTranslation",(function(){return D})),e.d(i,"getScaling",(function(){return V})),e.d(i,"getRotation",(function(){return L})),e.d(i,"fromRotationTranslationScale",(function(){return S})),e.d(i,"fromRotationTranslationScaleOrigin",(function(){return I})),e.d(i,"fromQuat",(function(){return k})),e.d(i,"frustum",(function(){return Y})),e.d(i,"perspective",(function(){return N})),e.d(i,"perspectiveFromFieldOfView",(function(){return j})),e.d(i,"ortho",(function(){return C})),e.d(i,"lookAt",(function(){return G})),e.d(i,"targetTo",(function(){return z})),e.d(i,"str",(function(){return X})),e.d(i,"frob",(function(){return W})),e.d(i,"add",(function(){return q})),e.d(i,"subtract",(function(){return H})),e.d(i,"multiplyScalar",(function(){return Z})),e.d(i,"multiplyScalarAndAdd",(function(){return Q})),e.d(i,"exactEquals",(function(){return K})),e.d(i,"equals",(function(){return $})),e.d(i,"mul",(function(){return J})),e.d(i,"sub",(function(){return tt}));var s={};e.r(s),e.d(s,"create",(function(){return rt})),e.d(s,"clone",(function(){return et})),e.d(s,"length",(function(){return it})),e.d(s,"fromValues",(function(){return st})),e.d(s,"copy",(function(){return nt})),e.d(s,"set",(function(){return at})),e.d(s,"add",(function(){return ot})),e.d(s,"subtract",(function(){return ht})),e.d(s,"multiply",(function(){return ut})),e.d(s,"divide",(function(){return ft})),e.d(s,"ceil",(function(){return lt})),e.d(s,"floor",(function(){return ct})),e.d(s,"min",(function(){return gt})),e.d(s,"max",(function(){return _t})),e.d(s,"round",(function(){return mt})),e.d(s,"scale",(function(){return dt})),e.d(s,"scaleAndAdd",(function(){return bt})),e.d(s,"distance",(function(){return pt})),e.d(s,"squaredDistance",(function(){return Mt})),e.d(s,"squaredLength",(function(){return At})),e.d(s,"negate",(function(){return Rt})),e.d(s,"inverse",(function(){return vt})),e.d(s,"normalize",(function(){return Tt})),e.d(s,"dot",(function(){return Ft})),e.d(s,"cross",(function(){return yt})),e.d(s,"lerp",(function(){return Et})),e.d(s,"hermite",(function(){return Ut})),e.d(s,"bezier",(function(){return xt})),e.d(s,"random",(function(){return Pt})),e.d(s,"transformMat4",(function(){return Bt})),e.d(s,"transformMat3",(function(){return wt})),e.d(s,"transformQuat",(function(){return Ot})),e.d(s,"rotateX",(function(){return Dt})),e.d(s,"rotateY",(function(){return Vt})),e.d(s,"rotateZ",(function(){return Lt})),e.d(s,"angle",(function(){return St})),e.d(s,"zero",(function(){return It})),e.d(s,"str",(function(){return kt})),e.d(s,"exactEquals",(function(){return Yt})),e.d(s,"equals",(function(){return Nt})),e.d(s,"sub",(function(){return Ct})),e.d(s,"mul",(function(){return Gt})),e.d(s,"div",(function(){return zt})),e.d(s,"dist",(function(){return Xt})),e.d(s,"sqrDist",(function(){return Wt})),e.d(s,"len",(function(){return qt})),e.d(s,"sqrLen",(function(){return Ht})),e.d(s,"forEach",(function(){return Zt}));var n=1e-6,a="undefined"!=typeof Float32Array?Float32Array:Array,o=Math.random;Math.PI;function h(){var t=new a(16);return a!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function u(t){var r=new a(16);return r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=t[3],r[4]=t[4],r[5]=t[5],r[6]=t[6],r[7]=t[7],r[8]=t[8],r[9]=t[9],r[10]=t[10],r[11]=t[11],r[12]=t[12],r[13]=t[13],r[14]=t[14],r[15]=t[15],r}function f(t,r){return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],t}function l(t,r,e,i,s,n,o,h,u,f,l,c,g,_,m,d){var b=new a(16);return b[0]=t,b[1]=r,b[2]=e,b[3]=i,b[4]=s,b[5]=n,b[6]=o,b[7]=h,b[8]=u,b[9]=f,b[10]=l,b[11]=c,b[12]=g,b[13]=_,b[14]=m,b[15]=d,b}function c(t,r,e,i,s,n,a,o,h,u,f,l,c,g,_,m,d){return t[0]=r,t[1]=e,t[2]=i,t[3]=s,t[4]=n,t[5]=a,t[6]=o,t[7]=h,t[8]=u,t[9]=f,t[10]=l,t[11]=c,t[12]=g,t[13]=_,t[14]=m,t[15]=d,t}function g(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function _(t,r){if(t===r){var e=r[1],i=r[2],s=r[3],n=r[6],a=r[7],o=r[11];t[1]=r[4],t[2]=r[8],t[3]=r[12],t[4]=e,t[6]=r[9],t[7]=r[13],t[8]=i,t[9]=n,t[11]=r[14],t[12]=s,t[13]=a,t[14]=o}else t[0]=r[0],t[1]=r[4],t[2]=r[8],t[3]=r[12],t[4]=r[1],t[5]=r[5],t[6]=r[9],t[7]=r[13],t[8]=r[2],t[9]=r[6],t[10]=r[10],t[11]=r[14],t[12]=r[3],t[13]=r[7],t[14]=r[11],t[15]=r[15];return t}function m(t,r){var e=r[0],i=r[1],s=r[2],n=r[3],a=r[4],o=r[5],h=r[6],u=r[7],f=r[8],l=r[9],c=r[10],g=r[11],_=r[12],m=r[13],d=r[14],b=r[15],p=e*o-i*a,M=e*h-s*a,A=e*u-n*a,R=i*h-s*o,v=i*u-n*o,T=s*u-n*h,F=f*m-l*_,y=f*d-c*_,E=f*b-g*_,U=l*d-c*m,x=l*b-g*m,P=c*b-g*d,B=p*P-M*x+A*U+R*E-v*y+T*F;return B?(B=1/B,t[0]=(o*P-h*x+u*U)*B,t[1]=(s*x-i*P-n*U)*B,t[2]=(m*T-d*v+b*R)*B,t[3]=(c*v-l*T-g*R)*B,t[4]=(h*E-a*P-u*y)*B,t[5]=(e*P-s*E+n*y)*B,t[6]=(d*A-_*T-b*M)*B,t[7]=(f*T-c*A+g*M)*B,t[8]=(a*x-o*E+u*F)*B,t[9]=(i*E-e*x-n*F)*B,t[10]=(_*v-m*A+b*p)*B,t[11]=(l*A-f*v-g*p)*B,t[12]=(o*y-a*U-h*F)*B,t[13]=(e*U-i*y+s*F)*B,t[14]=(m*M-_*R-d*p)*B,t[15]=(f*R-l*M+c*p)*B,t):null}function d(t,r){var e=r[0],i=r[1],s=r[2],n=r[3],a=r[4],o=r[5],h=r[6],u=r[7],f=r[8],l=r[9],c=r[10],g=r[11],_=r[12],m=r[13],d=r[14],b=r[15];return t[0]=o*(c*b-g*d)-l*(h*b-u*d)+m*(h*g-u*c),t[1]=-(i*(c*b-g*d)-l*(s*b-n*d)+m*(s*g-n*c)),t[2]=i*(h*b-u*d)-o*(s*b-n*d)+m*(s*u-n*h),t[3]=-(i*(h*g-u*c)-o*(s*g-n*c)+l*(s*u-n*h)),t[4]=-(a*(c*b-g*d)-f*(h*b-u*d)+_*(h*g-u*c)),t[5]=e*(c*b-g*d)-f*(s*b-n*d)+_*(s*g-n*c),t[6]=-(e*(h*b-u*d)-a*(s*b-n*d)+_*(s*u-n*h)),t[7]=e*(h*g-u*c)-a*(s*g-n*c)+f*(s*u-n*h),t[8]=a*(l*b-g*m)-f*(o*b-u*m)+_*(o*g-u*l),t[9]=-(e*(l*b-g*m)-f*(i*b-n*m)+_*(i*g-n*l)),t[10]=e*(o*b-u*m)-a*(i*b-n*m)+_*(i*u-n*o),t[11]=-(e*(o*g-u*l)-a*(i*g-n*l)+f*(i*u-n*o)),t[12]=-(a*(l*d-c*m)-f*(o*d-h*m)+_*(o*c-h*l)),t[13]=e*(l*d-c*m)-f*(i*d-s*m)+_*(i*c-s*l),t[14]=-(e*(o*d-h*m)-a*(i*d-s*m)+_*(i*h-s*o)),t[15]=e*(o*c-h*l)-a*(i*c-s*l)+f*(i*h-s*o),t}function b(t){var r=t[0],e=t[1],i=t[2],s=t[3],n=t[4],a=t[5],o=t[6],h=t[7],u=t[8],f=t[9],l=t[10],c=t[11],g=t[12],_=t[13],m=t[14],d=t[15];return(r*a-e*n)*(l*d-c*m)-(r*o-i*n)*(f*d-c*_)+(r*h-s*n)*(f*m-l*_)+(e*o-i*a)*(u*d-c*g)-(e*h-s*a)*(u*m-l*g)+(i*h-s*o)*(u*_-f*g)}function p(t,r,e){var i=r[0],s=r[1],n=r[2],a=r[3],o=r[4],h=r[5],u=r[6],f=r[7],l=r[8],c=r[9],g=r[10],_=r[11],m=r[12],d=r[13],b=r[14],p=r[15],M=e[0],A=e[1],R=e[2],v=e[3];return t[0]=M*i+A*o+R*l+v*m,t[1]=M*s+A*h+R*c+v*d,t[2]=M*n+A*u+R*g+v*b,t[3]=M*a+A*f+R*_+v*p,M=e[4],A=e[5],R=e[6],v=e[7],t[4]=M*i+A*o+R*l+v*m,t[5]=M*s+A*h+R*c+v*d,t[6]=M*n+A*u+R*g+v*b,t[7]=M*a+A*f+R*_+v*p,M=e[8],A=e[9],R=e[10],v=e[11],t[8]=M*i+A*o+R*l+v*m,t[9]=M*s+A*h+R*c+v*d,t[10]=M*n+A*u+R*g+v*b,t[11]=M*a+A*f+R*_+v*p,M=e[12],A=e[13],R=e[14],v=e[15],t[12]=M*i+A*o+R*l+v*m,t[13]=M*s+A*h+R*c+v*d,t[14]=M*n+A*u+R*g+v*b,t[15]=M*a+A*f+R*_+v*p,t}function M(t,r,e){var i,s,n,a,o,h,u,f,l,c,g,_,m=e[0],d=e[1],b=e[2];return r===t?(t[12]=r[0]*m+r[4]*d+r[8]*b+r[12],t[13]=r[1]*m+r[5]*d+r[9]*b+r[13],t[14]=r[2]*m+r[6]*d+r[10]*b+r[14],t[15]=r[3]*m+r[7]*d+r[11]*b+r[15]):(i=r[0],s=r[1],n=r[2],a=r[3],o=r[4],h=r[5],u=r[6],f=r[7],l=r[8],c=r[9],g=r[10],_=r[11],t[0]=i,t[1]=s,t[2]=n,t[3]=a,t[4]=o,t[5]=h,t[6]=u,t[7]=f,t[8]=l,t[9]=c,t[10]=g,t[11]=_,t[12]=i*m+o*d+l*b+r[12],t[13]=s*m+h*d+c*b+r[13],t[14]=n*m+u*d+g*b+r[14],t[15]=a*m+f*d+_*b+r[15]),t}function A(t,r,e){var i=e[0],s=e[1],n=e[2];return t[0]=r[0]*i,t[1]=r[1]*i,t[2]=r[2]*i,t[3]=r[3]*i,t[4]=r[4]*s,t[5]=r[5]*s,t[6]=r[6]*s,t[7]=r[7]*s,t[8]=r[8]*n,t[9]=r[9]*n,t[10]=r[10]*n,t[11]=r[11]*n,t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],t}function R(t,r,e,i){var s,a,o,h,u,f,l,c,g,_,m,d,b,p,M,A,R,v,T,F,y,E,U,x,P=i[0],B=i[1],w=i[2],O=Math.hypot(P,B,w);return O<n?null:(P*=O=1/O,B*=O,w*=O,s=Math.sin(e),o=1-(a=Math.cos(e)),h=r[0],u=r[1],f=r[2],l=r[3],c=r[4],g=r[5],_=r[6],m=r[7],d=r[8],b=r[9],p=r[10],M=r[11],A=P*P*o+a,R=B*P*o+w*s,v=w*P*o-B*s,T=P*B*o-w*s,F=B*B*o+a,y=w*B*o+P*s,E=P*w*o+B*s,U=B*w*o-P*s,x=w*w*o+a,t[0]=h*A+c*R+d*v,t[1]=u*A+g*R+b*v,t[2]=f*A+_*R+p*v,t[3]=l*A+m*R+M*v,t[4]=h*T+c*F+d*y,t[5]=u*T+g*F+b*y,t[6]=f*T+_*F+p*y,t[7]=l*T+m*F+M*y,t[8]=h*E+c*U+d*x,t[9]=u*E+g*U+b*x,t[10]=f*E+_*U+p*x,t[11]=l*E+m*U+M*x,r!==t&&(t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15]),t)}function v(t,r,e){var i=Math.sin(e),s=Math.cos(e),n=r[4],a=r[5],o=r[6],h=r[7],u=r[8],f=r[9],l=r[10],c=r[11];return r!==t&&(t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15]),t[4]=n*s+u*i,t[5]=a*s+f*i,t[6]=o*s+l*i,t[7]=h*s+c*i,t[8]=u*s-n*i,t[9]=f*s-a*i,t[10]=l*s-o*i,t[11]=c*s-h*i,t}function T(t,r,e){var i=Math.sin(e),s=Math.cos(e),n=r[0],a=r[1],o=r[2],h=r[3],u=r[8],f=r[9],l=r[10],c=r[11];return r!==t&&(t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15]),t[0]=n*s-u*i,t[1]=a*s-f*i,t[2]=o*s-l*i,t[3]=h*s-c*i,t[8]=n*i+u*s,t[9]=a*i+f*s,t[10]=o*i+l*s,t[11]=h*i+c*s,t}function F(t,r,e){var i=Math.sin(e),s=Math.cos(e),n=r[0],a=r[1],o=r[2],h=r[3],u=r[4],f=r[5],l=r[6],c=r[7];return r!==t&&(t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15]),t[0]=n*s+u*i,t[1]=a*s+f*i,t[2]=o*s+l*i,t[3]=h*s+c*i,t[4]=u*s-n*i,t[5]=f*s-a*i,t[6]=l*s-o*i,t[7]=c*s-h*i,t}function y(t,r){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=r[0],t[13]=r[1],t[14]=r[2],t[15]=1,t}function E(t,r){return t[0]=r[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=r[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function U(t,r,e){var i,s,a,o=e[0],h=e[1],u=e[2],f=Math.hypot(o,h,u);return f<n?null:(o*=f=1/f,h*=f,u*=f,i=Math.sin(r),a=1-(s=Math.cos(r)),t[0]=o*o*a+s,t[1]=h*o*a+u*i,t[2]=u*o*a-h*i,t[3]=0,t[4]=o*h*a-u*i,t[5]=h*h*a+s,t[6]=u*h*a+o*i,t[7]=0,t[8]=o*u*a+h*i,t[9]=h*u*a-o*i,t[10]=u*u*a+s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t)}function x(t,r){var e=Math.sin(r),i=Math.cos(r);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=i,t[6]=e,t[7]=0,t[8]=0,t[9]=-e,t[10]=i,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function P(t,r){var e=Math.sin(r),i=Math.cos(r);return t[0]=i,t[1]=0,t[2]=-e,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=e,t[9]=0,t[10]=i,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function B(t,r){var e=Math.sin(r),i=Math.cos(r);return t[0]=i,t[1]=e,t[2]=0,t[3]=0,t[4]=-e,t[5]=i,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function w(t,r,e){var i=r[0],s=r[1],n=r[2],a=r[3],o=i+i,h=s+s,u=n+n,f=i*o,l=i*h,c=i*u,g=s*h,_=s*u,m=n*u,d=a*o,b=a*h,p=a*u;return t[0]=1-(g+m),t[1]=l+p,t[2]=c-b,t[3]=0,t[4]=l-p,t[5]=1-(f+m),t[6]=_+d,t[7]=0,t[8]=c+b,t[9]=_-d,t[10]=1-(f+g),t[11]=0,t[12]=e[0],t[13]=e[1],t[14]=e[2],t[15]=1,t}function O(t,r){var e=new a(3),i=-r[0],s=-r[1],n=-r[2],o=r[3],h=r[4],u=r[5],f=r[6],l=r[7],c=i*i+s*s+n*n+o*o;return c>0?(e[0]=2*(h*o+l*i+u*n-f*s)/c,e[1]=2*(u*o+l*s+f*i-h*n)/c,e[2]=2*(f*o+l*n+h*s-u*i)/c):(e[0]=2*(h*o+l*i+u*n-f*s),e[1]=2*(u*o+l*s+f*i-h*n),e[2]=2*(f*o+l*n+h*s-u*i)),w(t,r,e),t}function D(t,r){return t[0]=r[12],t[1]=r[13],t[2]=r[14],t}function V(t,r){var e=r[0],i=r[1],s=r[2],n=r[4],a=r[5],o=r[6],h=r[8],u=r[9],f=r[10];return t[0]=Math.hypot(e,i,s),t[1]=Math.hypot(n,a,o),t[2]=Math.hypot(h,u,f),t}function L(t,r){var e=new a(3);V(e,r);var i=1/e[0],s=1/e[1],n=1/e[2],o=r[0]*i,h=r[1]*s,u=r[2]*n,f=r[4]*i,l=r[5]*s,c=r[6]*n,g=r[8]*i,_=r[9]*s,m=r[10]*n,d=o+l+m,b=0;return d>0?(b=2*Math.sqrt(d+1),t[3]=.25*b,t[0]=(c-_)/b,t[1]=(g-u)/b,t[2]=(h-f)/b):o>l&&o>m?(b=2*Math.sqrt(1+o-l-m),t[3]=(c-_)/b,t[0]=.25*b,t[1]=(h+f)/b,t[2]=(g+u)/b):l>m?(b=2*Math.sqrt(1+l-o-m),t[3]=(g-u)/b,t[0]=(h+f)/b,t[1]=.25*b,t[2]=(c+_)/b):(b=2*Math.sqrt(1+m-o-l),t[3]=(h-f)/b,t[0]=(g+u)/b,t[1]=(c+_)/b,t[2]=.25*b),t}function S(t,r,e,i){var s=r[0],n=r[1],a=r[2],o=r[3],h=s+s,u=n+n,f=a+a,l=s*h,c=s*u,g=s*f,_=n*u,m=n*f,d=a*f,b=o*h,p=o*u,M=o*f,A=i[0],R=i[1],v=i[2];return t[0]=(1-(_+d))*A,t[1]=(c+M)*A,t[2]=(g-p)*A,t[3]=0,t[4]=(c-M)*R,t[5]=(1-(l+d))*R,t[6]=(m+b)*R,t[7]=0,t[8]=(g+p)*v,t[9]=(m-b)*v,t[10]=(1-(l+_))*v,t[11]=0,t[12]=e[0],t[13]=e[1],t[14]=e[2],t[15]=1,t}function I(t,r,e,i,s){var n=r[0],a=r[1],o=r[2],h=r[3],u=n+n,f=a+a,l=o+o,c=n*u,g=n*f,_=n*l,m=a*f,d=a*l,b=o*l,p=h*u,M=h*f,A=h*l,R=i[0],v=i[1],T=i[2],F=s[0],y=s[1],E=s[2],U=(1-(m+b))*R,x=(g+A)*R,P=(_-M)*R,B=(g-A)*v,w=(1-(c+b))*v,O=(d+p)*v,D=(_+M)*T,V=(d-p)*T,L=(1-(c+m))*T;return t[0]=U,t[1]=x,t[2]=P,t[3]=0,t[4]=B,t[5]=w,t[6]=O,t[7]=0,t[8]=D,t[9]=V,t[10]=L,t[11]=0,t[12]=e[0]+F-(U*F+B*y+D*E),t[13]=e[1]+y-(x*F+w*y+V*E),t[14]=e[2]+E-(P*F+O*y+L*E),t[15]=1,t}function k(t,r){var e=r[0],i=r[1],s=r[2],n=r[3],a=e+e,o=i+i,h=s+s,u=e*a,f=i*a,l=i*o,c=s*a,g=s*o,_=s*h,m=n*a,d=n*o,b=n*h;return t[0]=1-l-_,t[1]=f+b,t[2]=c-d,t[3]=0,t[4]=f-b,t[5]=1-u-_,t[6]=g+m,t[7]=0,t[8]=c+d,t[9]=g-m,t[10]=1-u-l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function Y(t,r,e,i,s,n,a){var o=1/(e-r),h=1/(s-i),u=1/(n-a);return t[0]=2*n*o,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*n*h,t[6]=0,t[7]=0,t[8]=(e+r)*o,t[9]=(s+i)*h,t[10]=(a+n)*u,t[11]=-1,t[12]=0,t[13]=0,t[14]=a*n*2*u,t[15]=0,t}function N(t,r,e,i,s){var n,a=1/Math.tan(r/2);return t[0]=a/e,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=s&&s!==1/0?(n=1/(i-s),t[10]=(s+i)*n,t[14]=2*s*i*n):(t[10]=-1,t[14]=-2*i),t}function j(t,r,e,i){var s=Math.tan(r.upDegrees*Math.PI/180),n=Math.tan(r.downDegrees*Math.PI/180),a=Math.tan(r.leftDegrees*Math.PI/180),o=Math.tan(r.rightDegrees*Math.PI/180),h=2/(a+o),u=2/(s+n);return t[0]=h,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=u,t[6]=0,t[7]=0,t[8]=-(a-o)*h*.5,t[9]=(s-n)*u*.5,t[10]=i/(e-i),t[11]=-1,t[12]=0,t[13]=0,t[14]=i*e/(e-i),t[15]=0,t}function C(t,r,e,i,s,n,a){var o=1/(r-e),h=1/(i-s),u=1/(n-a);return t[0]=-2*o,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*h,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*u,t[11]=0,t[12]=(r+e)*o,t[13]=(s+i)*h,t[14]=(a+n)*u,t[15]=1,t}function G(t,r,e,i){var s,a,o,h,u,f,l,c,_,m,d=r[0],b=r[1],p=r[2],M=i[0],A=i[1],R=i[2],v=e[0],T=e[1],F=e[2];return Math.abs(d-v)<n&&Math.abs(b-T)<n&&Math.abs(p-F)<n?g(t):(l=d-v,c=b-T,_=p-F,s=A*(_*=m=1/Math.hypot(l,c,_))-R*(c*=m),a=R*(l*=m)-M*_,o=M*c-A*l,(m=Math.hypot(s,a,o))?(s*=m=1/m,a*=m,o*=m):(s=0,a=0,o=0),h=c*o-_*a,u=_*s-l*o,f=l*a-c*s,(m=Math.hypot(h,u,f))?(h*=m=1/m,u*=m,f*=m):(h=0,u=0,f=0),t[0]=s,t[1]=h,t[2]=l,t[3]=0,t[4]=a,t[5]=u,t[6]=c,t[7]=0,t[8]=o,t[9]=f,t[10]=_,t[11]=0,t[12]=-(s*d+a*b+o*p),t[13]=-(h*d+u*b+f*p),t[14]=-(l*d+c*b+_*p),t[15]=1,t)}function z(t,r,e,i){var s=r[0],n=r[1],a=r[2],o=i[0],h=i[1],u=i[2],f=s-e[0],l=n-e[1],c=a-e[2],g=f*f+l*l+c*c;g>0&&(f*=g=1/Math.sqrt(g),l*=g,c*=g);var _=h*c-u*l,m=u*f-o*c,d=o*l-h*f;return(g=_*_+m*m+d*d)>0&&(_*=g=1/Math.sqrt(g),m*=g,d*=g),t[0]=_,t[1]=m,t[2]=d,t[3]=0,t[4]=l*d-c*m,t[5]=c*_-f*d,t[6]=f*m-l*_,t[7]=0,t[8]=f,t[9]=l,t[10]=c,t[11]=0,t[12]=s,t[13]=n,t[14]=a,t[15]=1,t}function X(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")"}function W(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])}function q(t,r,e){return t[0]=r[0]+e[0],t[1]=r[1]+e[1],t[2]=r[2]+e[2],t[3]=r[3]+e[3],t[4]=r[4]+e[4],t[5]=r[5]+e[5],t[6]=r[6]+e[6],t[7]=r[7]+e[7],t[8]=r[8]+e[8],t[9]=r[9]+e[9],t[10]=r[10]+e[10],t[11]=r[11]+e[11],t[12]=r[12]+e[12],t[13]=r[13]+e[13],t[14]=r[14]+e[14],t[15]=r[15]+e[15],t}function H(t,r,e){return t[0]=r[0]-e[0],t[1]=r[1]-e[1],t[2]=r[2]-e[2],t[3]=r[3]-e[3],t[4]=r[4]-e[4],t[5]=r[5]-e[5],t[6]=r[6]-e[6],t[7]=r[7]-e[7],t[8]=r[8]-e[8],t[9]=r[9]-e[9],t[10]=r[10]-e[10],t[11]=r[11]-e[11],t[12]=r[12]-e[12],t[13]=r[13]-e[13],t[14]=r[14]-e[14],t[15]=r[15]-e[15],t}function Z(t,r,e){return t[0]=r[0]*e,t[1]=r[1]*e,t[2]=r[2]*e,t[3]=r[3]*e,t[4]=r[4]*e,t[5]=r[5]*e,t[6]=r[6]*e,t[7]=r[7]*e,t[8]=r[8]*e,t[9]=r[9]*e,t[10]=r[10]*e,t[11]=r[11]*e,t[12]=r[12]*e,t[13]=r[13]*e,t[14]=r[14]*e,t[15]=r[15]*e,t}function Q(t,r,e,i){return t[0]=r[0]+e[0]*i,t[1]=r[1]+e[1]*i,t[2]=r[2]+e[2]*i,t[3]=r[3]+e[3]*i,t[4]=r[4]+e[4]*i,t[5]=r[5]+e[5]*i,t[6]=r[6]+e[6]*i,t[7]=r[7]+e[7]*i,t[8]=r[8]+e[8]*i,t[9]=r[9]+e[9]*i,t[10]=r[10]+e[10]*i,t[11]=r[11]+e[11]*i,t[12]=r[12]+e[12]*i,t[13]=r[13]+e[13]*i,t[14]=r[14]+e[14]*i,t[15]=r[15]+e[15]*i,t}function K(t,r){return t[0]===r[0]&&t[1]===r[1]&&t[2]===r[2]&&t[3]===r[3]&&t[4]===r[4]&&t[5]===r[5]&&t[6]===r[6]&&t[7]===r[7]&&t[8]===r[8]&&t[9]===r[9]&&t[10]===r[10]&&t[11]===r[11]&&t[12]===r[12]&&t[13]===r[13]&&t[14]===r[14]&&t[15]===r[15]}function $(t,r){var e=t[0],i=t[1],s=t[2],a=t[3],o=t[4],h=t[5],u=t[6],f=t[7],l=t[8],c=t[9],g=t[10],_=t[11],m=t[12],d=t[13],b=t[14],p=t[15],M=r[0],A=r[1],R=r[2],v=r[3],T=r[4],F=r[5],y=r[6],E=r[7],U=r[8],x=r[9],P=r[10],B=r[11],w=r[12],O=r[13],D=r[14],V=r[15];return Math.abs(e-M)<=n*Math.max(1,Math.abs(e),Math.abs(M))&&Math.abs(i-A)<=n*Math.max(1,Math.abs(i),Math.abs(A))&&Math.abs(s-R)<=n*Math.max(1,Math.abs(s),Math.abs(R))&&Math.abs(a-v)<=n*Math.max(1,Math.abs(a),Math.abs(v))&&Math.abs(o-T)<=n*Math.max(1,Math.abs(o),Math.abs(T))&&Math.abs(h-F)<=n*Math.max(1,Math.abs(h),Math.abs(F))&&Math.abs(u-y)<=n*Math.max(1,Math.abs(u),Math.abs(y))&&Math.abs(f-E)<=n*Math.max(1,Math.abs(f),Math.abs(E))&&Math.abs(l-U)<=n*Math.max(1,Math.abs(l),Math.abs(U))&&Math.abs(c-x)<=n*Math.max(1,Math.abs(c),Math.abs(x))&&Math.abs(g-P)<=n*Math.max(1,Math.abs(g),Math.abs(P))&&Math.abs(_-B)<=n*Math.max(1,Math.abs(_),Math.abs(B))&&Math.abs(m-w)<=n*Math.max(1,Math.abs(m),Math.abs(w))&&Math.abs(d-O)<=n*Math.max(1,Math.abs(d),Math.abs(O))&&Math.abs(b-D)<=n*Math.max(1,Math.abs(b),Math.abs(D))&&Math.abs(p-V)<=n*Math.max(1,Math.abs(p),Math.abs(V))}Math.hypot||(Math.hypot=function(){for(var t=0,r=arguments.length;r--;)t+=arguments[r]*arguments[r];return Math.sqrt(t)});var J=p,tt=H;function rt(){var t=new a(3);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function et(t){var r=new a(3);return r[0]=t[0],r[1]=t[1],r[2]=t[2],r}function it(t){var r=t[0],e=t[1],i=t[2];return Math.hypot(r,e,i)}function st(t,r,e){var i=new a(3);return i[0]=t,i[1]=r,i[2]=e,i}function nt(t,r){return t[0]=r[0],t[1]=r[1],t[2]=r[2],t}function at(t,r,e,i){return t[0]=r,t[1]=e,t[2]=i,t}function ot(t,r,e){return t[0]=r[0]+e[0],t[1]=r[1]+e[1],t[2]=r[2]+e[2],t}function ht(t,r,e){return t[0]=r[0]-e[0],t[1]=r[1]-e[1],t[2]=r[2]-e[2],t}function ut(t,r,e){return t[0]=r[0]*e[0],t[1]=r[1]*e[1],t[2]=r[2]*e[2],t}function ft(t,r,e){return t[0]=r[0]/e[0],t[1]=r[1]/e[1],t[2]=r[2]/e[2],t}function lt(t,r){return t[0]=Math.ceil(r[0]),t[1]=Math.ceil(r[1]),t[2]=Math.ceil(r[2]),t}function ct(t,r){return t[0]=Math.floor(r[0]),t[1]=Math.floor(r[1]),t[2]=Math.floor(r[2]),t}function gt(t,r,e){return t[0]=Math.min(r[0],e[0]),t[1]=Math.min(r[1],e[1]),t[2]=Math.min(r[2],e[2]),t}function _t(t,r,e){return t[0]=Math.max(r[0],e[0]),t[1]=Math.max(r[1],e[1]),t[2]=Math.max(r[2],e[2]),t}function mt(t,r){return t[0]=Math.round(r[0]),t[1]=Math.round(r[1]),t[2]=Math.round(r[2]),t}function dt(t,r,e){return t[0]=r[0]*e,t[1]=r[1]*e,t[2]=r[2]*e,t}function bt(t,r,e,i){return t[0]=r[0]+e[0]*i,t[1]=r[1]+e[1]*i,t[2]=r[2]+e[2]*i,t}function pt(t,r){var e=r[0]-t[0],i=r[1]-t[1],s=r[2]-t[2];return Math.hypot(e,i,s)}function Mt(t,r){var e=r[0]-t[0],i=r[1]-t[1],s=r[2]-t[2];return e*e+i*i+s*s}function At(t){var r=t[0],e=t[1],i=t[2];return r*r+e*e+i*i}function Rt(t,r){return t[0]=-r[0],t[1]=-r[1],t[2]=-r[2],t}function vt(t,r){return t[0]=1/r[0],t[1]=1/r[1],t[2]=1/r[2],t}function Tt(t,r){var e=r[0],i=r[1],s=r[2],n=e*e+i*i+s*s;return n>0&&(n=1/Math.sqrt(n)),t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t}function Ft(t,r){return t[0]*r[0]+t[1]*r[1]+t[2]*r[2]}function yt(t,r,e){var i=r[0],s=r[1],n=r[2],a=e[0],o=e[1],h=e[2];return t[0]=s*h-n*o,t[1]=n*a-i*h,t[2]=i*o-s*a,t}function Et(t,r,e,i){var s=r[0],n=r[1],a=r[2];return t[0]=s+i*(e[0]-s),t[1]=n+i*(e[1]-n),t[2]=a+i*(e[2]-a),t}function Ut(t,r,e,i,s,n){var a=n*n,o=a*(2*n-3)+1,h=a*(n-2)+n,u=a*(n-1),f=a*(3-2*n);return t[0]=r[0]*o+e[0]*h+i[0]*u+s[0]*f,t[1]=r[1]*o+e[1]*h+i[1]*u+s[1]*f,t[2]=r[2]*o+e[2]*h+i[2]*u+s[2]*f,t}function xt(t,r,e,i,s,n){var a=1-n,o=a*a,h=n*n,u=o*a,f=3*n*o,l=3*h*a,c=h*n;return t[0]=r[0]*u+e[0]*f+i[0]*l+s[0]*c,t[1]=r[1]*u+e[1]*f+i[1]*l+s[1]*c,t[2]=r[2]*u+e[2]*f+i[2]*l+s[2]*c,t}function Pt(t,r){r=r||1;var e=2*o()*Math.PI,i=2*o()-1,s=Math.sqrt(1-i*i)*r;return t[0]=Math.cos(e)*s,t[1]=Math.sin(e)*s,t[2]=i*r,t}function Bt(t,r,e){var i=r[0],s=r[1],n=r[2],a=e[3]*i+e[7]*s+e[11]*n+e[15];return a=a||1,t[0]=(e[0]*i+e[4]*s+e[8]*n+e[12])/a,t[1]=(e[1]*i+e[5]*s+e[9]*n+e[13])/a,t[2]=(e[2]*i+e[6]*s+e[10]*n+e[14])/a,t}function wt(t,r,e){var i=r[0],s=r[1],n=r[2];return t[0]=i*e[0]+s*e[3]+n*e[6],t[1]=i*e[1]+s*e[4]+n*e[7],t[2]=i*e[2]+s*e[5]+n*e[8],t}function Ot(t,r,e){var i=e[0],s=e[1],n=e[2],a=e[3],o=r[0],h=r[1],u=r[2],f=s*u-n*h,l=n*o-i*u,c=i*h-s*o,g=s*c-n*l,_=n*f-i*c,m=i*l-s*f,d=2*a;return f*=d,l*=d,c*=d,g*=2,_*=2,m*=2,t[0]=o+f+g,t[1]=h+l+_,t[2]=u+c+m,t}function Dt(t,r,e,i){var s=[],n=[];return s[0]=r[0]-e[0],s[1]=r[1]-e[1],s[2]=r[2]-e[2],n[0]=s[0],n[1]=s[1]*Math.cos(i)-s[2]*Math.sin(i),n[2]=s[1]*Math.sin(i)+s[2]*Math.cos(i),t[0]=n[0]+e[0],t[1]=n[1]+e[1],t[2]=n[2]+e[2],t}function Vt(t,r,e,i){var s=[],n=[];return s[0]=r[0]-e[0],s[1]=r[1]-e[1],s[2]=r[2]-e[2],n[0]=s[2]*Math.sin(i)+s[0]*Math.cos(i),n[1]=s[1],n[2]=s[2]*Math.cos(i)-s[0]*Math.sin(i),t[0]=n[0]+e[0],t[1]=n[1]+e[1],t[2]=n[2]+e[2],t}function Lt(t,r,e,i){var s=[],n=[];return s[0]=r[0]-e[0],s[1]=r[1]-e[1],s[2]=r[2]-e[2],n[0]=s[0]*Math.cos(i)-s[1]*Math.sin(i),n[1]=s[0]*Math.sin(i)+s[1]*Math.cos(i),n[2]=s[2],t[0]=n[0]+e[0],t[1]=n[1]+e[1],t[2]=n[2]+e[2],t}function St(t,r){var e=t[0],i=t[1],s=t[2],n=r[0],a=r[1],o=r[2],h=Math.sqrt(e*e+i*i+s*s)*Math.sqrt(n*n+a*a+o*o),u=h&&Ft(t,r)/h;return Math.acos(Math.min(Math.max(u,-1),1))}function It(t){return t[0]=0,t[1]=0,t[2]=0,t}function kt(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"}function Yt(t,r){return t[0]===r[0]&&t[1]===r[1]&&t[2]===r[2]}function Nt(t,r){var e=t[0],i=t[1],s=t[2],a=r[0],o=r[1],h=r[2];return Math.abs(e-a)<=n*Math.max(1,Math.abs(e),Math.abs(a))&&Math.abs(i-o)<=n*Math.max(1,Math.abs(i),Math.abs(o))&&Math.abs(s-h)<=n*Math.max(1,Math.abs(s),Math.abs(h))}var jt,Ct=ht,Gt=ut,zt=ft,Xt=pt,Wt=Mt,qt=it,Ht=At,Zt=(jt=rt(),function(t,r,e,i,s,n){var a,o;for(r||(r=3),e||(e=0),o=i?Math.min(i*r+e,t.length):t.length,a=e;a<o;a+=r)jt[0]=t[a],jt[1]=t[a+1],jt[2]=t[a+2],s(jt,jt,n),t[a]=jt[0],t[a+1]=jt[1],t[a+2]=jt[2];return t});class Qt{constructor(t){this.gl=t,this._indexedGeometry=!1,this._uniformsNeedsUpdate=!1,this._translate=[0,0,0],this._rotation={speed:0,axis:[0,0,0]},this._verts=[],this._indices=[],this._normals=[],this._colors=[],this._buffers=[],this._VAOs=[],this._uniforms={},this._textures={}}setupVAO(t,r){this.gl.bindVertexArray(r);for(const r of t){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,r.buffer_object);let t=0;for(const e in r.attributes)if(r.attributes.hasOwnProperty(e)){const i=r.attributes[e];this.gl.enableVertexAttribArray(i.location),this.gl.vertexAttribPointer(i.location,i.num_components,i.type,!1,r.stride,t),t+=i.num_components*i.size,i.hasOwnProperty("divisor")&&this.gl.vertexAttribDivisor(i.location,i.divisor)}}if(this._indexedGeometry){const t=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,t),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(this._indices),this.gl.STATIC_DRAW)}this.gl.bindVertexArray(null),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,null)}addUniform(t,r,e,i,s,n){this._uniforms[t]={value:r,uniformType:e,type:i,programName:s,location:this.gl.getUniformLocation(n,t)}}updateUniform(t,r){if(this._uniforms.hasOwnProperty(t)){this._uniforms[t].value=r}}linkUniforms(t,r){console.error("'linkUniforms()' is deprecated, use 'initUniforms()'")}initUniforms(t,r){for(const e of r)switch(e){case"u_ModelMatrix":this._uniforms.u_ModelMatrix={type:"uniformMatrix4fv",value:i.create(),location:this.gl.getUniformLocation(t,"u_ModelMatrix")}}}setUniforms(){for(const t in this._uniforms)if(this._uniforms.hasOwnProperty(t)){const r=this._uniforms[t];if(r.programName&&_programName&&_programName!==r.programName)continue;switch(r.type){case"texture":this.gl.activeTexture(this.gl.TEXTURE0+r.unit),this.gl.uniform1i(r.location,0);break;case"uniform2fv":this.gl[r.type](r.location,r.value);break;default:this.gl[r.type](r.location,!1,r.value)}}}get VAO(){return this._VAOs[0]}get uniforms(){return this._uniforms}get numVertices(){return this._verts.length/3}get numIndices(){return this._indices.length}get buffers(){return this._buffers}get translate(){return this._translate}set translate(t){this._uniformsNeedsUpdate=!0,this._translate[0]=t[0],this._translate[1]=t[1],this._translate[2]=t[2]}set rotate(t){this._uniformsNeedsUpdate=!0;const[r,e]=Object.values(t);this._rotation.speed=r,this._rotation.axis[0]=e[0],this._rotation.axis[1]=e[1],this._rotation.axis[2]=e[2]}get needsUpdate(){return this._uniformsNeedsUpdate}updateModelMatrix(t){i.identity(this._uniforms.u_ModelMatrix.value),i.translate(this._uniforms.u_ModelMatrix.value,this._uniforms.u_ModelMatrix.value,this._translate),i.rotate(this._uniforms.u_ModelMatrix.value,this._uniforms.u_ModelMatrix.value,t*this._rotation.speed,this._rotation.axis)}normalizeVerts(){for(let t=0;t<this._verts.length;t+=3){const r=this.normalize(this._verts[t],this._verts[t+1],this._verts[t+2]);this._verts[t]=r[0],this._verts[t+1]=r[1],this._verts[t+2]=r[2]}}normalize(t,r,e){const i=Math.sqrt(t*t+r*r+e*e);return[t/i,r/i,e/i]}}function Kt(t,r,e){var i,s,n,a,o,h,u,f;switch(1===arguments.length&&(r=t.s,e=t.v,t=t.h),h=e*(1-r),u=e*(1-(o=6*t-(a=Math.floor(6*t)))*r),f=e*(1-(1-o)*r),a%6){case 0:i=e,s=f,n=h;break;case 1:i=u,s=e,n=h;break;case 2:i=h,s=e,n=f;break;case 3:i=h,s=u,n=e;break;case 4:i=f,s=h,n=e;break;case 5:i=e,s=h,n=u}return[i,s,n]}class $t extends Qt{constructor(t){super(t),this._indexedGeometry=!0,this._verts=[0,0,1,.894,0,.447,.276,.851,.447,-.724,.526,.447,-.724,-.526,.447,.276,-.851,.447,.724,.526,-.447,-.276,.851,-.447,-.894,0,-.447,-.276,-.851,-.447,.724,-.526,-.447,0,0,-1],this._indices=[0,1,2,0,2,3,0,3,4,0,4,5,0,5,1,11,7,6,11,8,7,11,9,8,11,10,9,11,6,10,1,6,2,2,7,3,3,8,4,4,9,5,5,10,1,6,7,2,7,8,3,8,9,4,9,10,5,10,6,1],this._normals=[];for(let t=0;t<this._verts.length;t+=3){let r=this._verts[t],e=this._verts[t+1],i=this._verts[t+2],s=Math.sqrt(r*r+e*e+i*i);this._normals.push(r/s,e/s,i/s)}this._colors=[];for(let t=0;t<this._verts.length;t++){const r=t/this._verts.length,[e,i,s]=Kt(r,1,1);this._colors.push(e,i,s,1)}}linkProgram(t){this._buffers.push(this.gl.createBuffer(),this.gl.createBuffer(),this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[0]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._verts),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[1]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._normals),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[2]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._colors),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);const r={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:3,type:this.gl.FLOAT,size:4}},e={i_Normal:{location:this.gl.getAttribLocation(t,"i_Normal"),num_components:3,type:this.gl.FLOAT,size:4}},i={i_Color:{location:this.gl.getAttribLocation(t,"i_Color"),num_components:3,type:this.gl.FLOAT,size:4}};this._VAOs.push(this.gl.createVertexArray());const s=[{vao:this._VAOs[0],buffers:[{buffer_object:this._buffers[0],stride:0,attributes:r},{buffer_object:this._buffers[1],stride:0,attributes:e},{buffer_object:this._buffers[2],stride:0,attributes:i}]}];for(const t of s)this.setupVAO(t.buffers,t.vao)}}class Jt extends Qt{constructor(t,r){super(t),this._numPoints=r;for(let t=0;t<r;t++){const t=Math.random()*Math.PI*2,r=Math.random()*Math.PI*2;this._verts.push(Math.sin(t)*Math.cos(r),Math.sin(t)*Math.sin(r),Math.cos(t))}}linkProgram(t){this._buffers.push(this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[0]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._verts),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);const r={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:3,type:this.gl.FLOAT,size:4}};this._VAOs.push(this.gl.createVertexArray());const e=[{vao:this._VAOs[0],buffers:[{buffer_object:this._buffers[0],stride:0,attributes:r}]}];for(const t of e)this.setupVAO(t.buffers,t.vao)}}class tr extends Qt{constructor(t,r,e){super(t),this._numPoints=r;for(let t=0;t<r;t++)this._verts.push(1,1,1)}linkProgram(t){this._buffers.push(this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[0]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._verts),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);const r={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:3,type:this.gl.FLOAT,size:4}};this._VAOs.push(this.gl.createVertexArray());const e=[{vao:this._VAOs[0],buffers:[{buffer_object:this._buffers[0],stride:0,attributes:r}]}];for(const t of e)this.setupVAO(t.buffers,t.vao)}}class rr extends Qt{constructor(t,r=null){super(t),this._options={dimensions:2,numParticles:100,birthRate:.5,lifeRange:[1.01,1.15],directionRange:[Math.PI/2-.5,Math.PI/2+.5],speedRange:[.5,1],gravity:[0,-.8]},r&&Object.assign(this._options,r);for(let t=0;t<this._options.numParticles;++t){for(let t=0;t<this._options.dimensions;++t)this._verts.push(Math.random());for(let t=0;t<this._options.dimensions;++t)this._verts.push(0);let t=this._options.lifeRange[0]+Math.random()*(this._options.lifeRange[1]-this._options.lifeRange[0]);this._verts.push(t+1,t)}this._read=0,this._write=1,this._bornParticles=0}get read(){return this._read}get write(){return this._write}set read(t){this._read=t}set write(t){this._write=t}get VAOs(){return this._VAOs}get buffers(){return this._buffers}get VAO(){const t=this._read;return this._read=this._write,this._write=t,this._VAOs[t]}get numVertices(){return this._bornParticles}linkProgram(t,r){this._buffers.push(this.gl.createBuffer(),this.gl.createBuffer());const e=new Float32Array(this._verts);for(const t of this._buffers)this.gl.bindBuffer(this.gl.ARRAY_BUFFER,t),this.gl.bufferData(this.gl.ARRAY_BUFFER,e,this.gl.STREAM_DRAW);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this._VAOs.push(this.gl.createVertexArray(),this.gl.createVertexArray(),this.gl.createVertexArray(),this.gl.createVertexArray());const i={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:this._options.dimensions,type:this.gl.FLOAT,size:4},i_Velocity:{location:this.gl.getAttribLocation(t,"i_Velocity"),num_components:this._options.dimensions,type:this.gl.FLOAT,size:4},i_Age:{location:this.gl.getAttribLocation(t,"i_Age"),num_components:1,type:this.gl.FLOAT,size:4},i_Life:{location:this.gl.getAttribLocation(t,"i_Life"),num_components:1,type:this.gl.FLOAT,size:4}},s={i_Position:{location:this.gl.getAttribLocation(r,"i_Position"),num_components:this._options.dimensions,type:this.gl.FLOAT}},n=[{vao:this._VAOs[0],buffers:[{buffer_object:this._buffers[0],stride:4*(2*this._options.dimensions+2),attributes:i}]},{vao:this._VAOs[1],buffers:[{buffer_object:this._buffers[1],stride:4*(2*this._options.dimensions+2),attributes:i}]},{vao:this._VAOs[2],buffers:[{buffer_object:this._buffers[0],stride:4*(2*this._options.dimensions+2),attributes:s}]},{vao:this._VAOs[3],buffers:[{buffer_object:this._buffers[1],stride:4*(2*this._options.dimensions+2),attributes:s}]}];for(const t of n)this.setupVAO(t.buffers,t.vao)}step(t,r){const e=this._bornParticles;this._bornParticles<this._options.numParticles&&(this._bornParticles=Math.min(this._options.numParticles,Math.floor(this._bornParticles+this._options.birthRate*r))),t.bindVertexArray(this._VAOs[this._read]),t.bindBufferBase(t.TRANSFORM_FEEDBACK_BUFFER,0,this._buffers[this._write]),t.enable(t.RASTERIZER_DISCARD),t.beginTransformFeedback(t.POINTS),t.drawArrays(t.POINTS,0,e),t.endTransformFeedback(),t.disable(t.RASTERIZER_DISCARD),t.bindBufferBase(t.TRANSFORM_FEEDBACK_BUFFER,0,null)}}class er extends Qt{constructor(t,r){switch(super(t),this._indexedGeometry=!0,this._type=r,r){case"SOLID":this._verts=[-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1],this._indices=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23],this._textureCoordinates=[0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1],this.normalizeVerts();break;case"404":this._verts=[-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1],this._indices=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23],this._textureCoordinates=[0,0,.5,0,.5,1,0,1,0,0,.5,0,.5,1,0,1,.5,0,1,0,1,1,.5,1,.5,0,1,0,1,1,.5,1,.5,0,1,0,1,1,.5,1,.5,0,1,0,1,1,.5,1],this.normalizeVerts();break;case"DEBUG":this._verts=[-1,1,1,1,1,1,1,-1,1,-1,-1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1],this.normalizeVerts(),this._indices=[0,1,1,2,2,3,3,0,0,5,1,6,2,7,3,4,5,6,6,7,7,4,4,5]}}linkProgram(t){switch(this._VAOs.push(this.gl.createVertexArray()),this._type){case"SOLID":case"404":{const r=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,r),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._verts),this.gl.STATIC_DRAW);const e=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._textureCoordinates),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);const i={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:3,type:this.gl.FLOAT,size:4}},s={i_TexCoord:{location:this.gl.getAttribLocation(t,"i_TexCoord"),num_components:2,type:this.gl.FLOAT}},n=[{vao:this._VAOs[0],buffers:[{buffer_object:r,stride:0,attributes:i},{buffer_object:e,stride:0,attributes:s}]}];for(const t of n)this.setupVAO(t.buffers,t.vao);break}case"DEBUG":{const r=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,r),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._verts),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);const e={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:3,type:this.gl.FLOAT,size:0}},i=[{vao:this._VAOs[0],buffers:[{buffer_object:r,stride:0,attributes:e}]}];for(const t of i)this.setupVAO(t.buffers,t.vao)}}}}class ir extends Qt{constructor(t){super(t),this._indexedGeometry=!0,this._verts=[-1,-1,0,1,-1,0,1,1,0,-1,1,0],this._textureCoordinates=[0,0,1,0,1,1,0,1],this._normals=[0,0,1,0,0,1,0,0,1,0,0,1],this._indices=[0,1,2,0,2,3]}linkProgram(t,r){this._buffers.push(this.gl.createBuffer(),this.gl.createBuffer(),this.gl.createBuffer()),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[0]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._verts),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[1]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._normals),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this._buffers[2]),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this._textureCoordinates),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);const e={i_Position:{location:this.gl.getAttribLocation(t,"i_Position"),num_components:3,type:this.gl.FLOAT,size:4}},i={i_Normal:{location:this.gl.getAttribLocation(t,"i_Normal"),num_components:3,type:this.gl.FLOAT,size:4}},s={i_TexCoord:{location:this.gl.getAttribLocation(t,"i_TexCoord"),num_components:2,type:this.gl.FLOAT}};this._VAOs.push(this.gl.createVertexArray());const n=[{vao:this._VAOs[0],buffers:[{buffer_object:this._buffers[0],stride:0,attributes:e},{buffer_object:this._buffers[1],stride:0,attributes:i},{buffer_object:this._buffers[2],stride:0,attributes:s}]}];for(const t of n)this.setupVAO(t.buffers,t.vao)}}class sr{constructor(){this._canvas=null,this._WIDTH=this._HEIGHT=0,this._programs={},this._textures={},this._framebuffers={},this._time=0,this._oldTimestamp=0,this._deltaTime=0,this._mouse=[0,0],this._fieldOfView=45*Math.PI/180,this._aspect=1,this._zNear=.1,this._zFar=100,this._projectionMat=i.create(),this._viewMat=i.create(),this._position=s.fromValues(0,0,2),this._target=s.fromValues(0,0,0),this._up=s.fromValues(0,1,0)}init(t,r){this._canvas=document.createElement("canvas"),this._canvas.width=this._WIDTH=t,this._canvas.height=this._HEIGHT=r,document.getElementsByTagName("body")[0].appendChild(this._canvas),this.gl=this._canvas.getContext("webgl2"),this._aspect=this.gl.canvas.clientWidth/this.gl.canvas.clientHeight,this.gl||console.warn("You're browser does not support WebGL 2.0. Soz.")}initTarget(t,r,e){this._canvas=document.getElementById(e),this._canvas.width=this._WIDTH=t,this._canvas.height=this._HEIGHT=r,this.gl=this._canvas.getContext("webgl2"),this._aspect=this.gl.canvas.clientWidth/this.gl.canvas.clientHeight,this.gl||console.warn("You're browser does not support WebGL 2.0. Soz.")}initShaderProgram(t,r,e,i=null,s){const n=this.gl.createProgram(),a=this.loadShader(this.gl.VERTEX_SHADER,r),o=this.loadShader(this.gl.FRAGMENT_SHADER,e);if(this.gl.attachShader(n,a),this.gl.attachShader(n,o),null!=i&&this.gl.transformFeedbackVaryings(n,i,this.gl.INTERLEAVED_ATTRIBS),this.gl.linkProgram(n),!this.gl.getProgramParameter(n,this.gl.LINK_STATUS))return alert("Unable to initialize the shader program: "+this.gl.getProgramInfoLog(n)),null;this._programs[t]={shader:n,mode:s,transformFeedback:!!i,transformFeedbackVaryings:i,geometry:[],uniformNeedsUpdate:!1,globalUniforms:{},drawParams:{clearColor:[.95,.95,.95,1],clearDepth:[1],clear:["COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT"],viewport:[0,0,this.gl.canvas.width,this.gl.canvas.height],enable:["CULL_FACE","DEPTH_TEST"]},customFramebufferRoutine:!1,framebufferRoutine:{}}}initProgramUniforms(t,r){const e=this.getProgram(t);let i=e.globalUniforms;const s=e.shader;for(const e of r)switch(e){case"u_TimeDelta":this._programs[t].uniformNeedsUpdate=!0,i.u_TimeDelta={type:"uniform1fv",value:[this._deltaTime/1e3],location:this.gl.getUniformLocation(s,"u_TimeDelta")};break;case"u_TotalTime":this._programs[t].uniformNeedsUpdate=!0,i.u_TotalTime={type:"uniform1fv",value:[this._time/1e3],location:this.gl.getUniformLocation(s,"u_TotalTime")};break;case"u_Resolution":i.u_Resolution={type:"uniform2fv",value:[this.gl.canvas.width,this.gl.canvas.height],location:this.gl.getUniformLocation(s,"u_Resolution")};break;case"u_Mouse":this._programs[t].uniformNeedsUpdate=!0,i.u_Mouse={type:"uniform2fv",value:this._mouse,location:this.gl.getUniformLocation(s,"u_Mouse")},this.initMouse();break;case"u_ProjectionMatrix":i.u_ProjectionMatrix={type:"uniformMatrix4fv",value:this._projectionMat,location:this.gl.getUniformLocation(s,"u_ProjectionMatrix")};break;case"u_ViewMatrix":i.u_ViewMatrix={type:"uniformMatrix4fv",value:this._viewMat,location:this.gl.getUniformLocation(s,"u_ViewMatrix")}}this.updateGlobalUniforms(i)}addProgramUniform(t,r){const e=this.getProgram(t);e.globalUniforms[r.name]={type:r.type,value:r.value,location:this.gl.getUniformLocation(e.shader,r.name)}}initGeometryUniforms(t,r){const e=this.getProgram(t),i=e.shader;for(const t of e.geometry)t.initUniforms(i,r)}updateAllGlobalUniforms(){for(const t in this._programs)this._programs.hasOwnProperty(t)&&this.updateGlobalUniforms(this._programs[t].globalUniforms)}updateGlobalUniforms(t){for(const r in t)if(t.hasOwnProperty(r))switch(r){case"u_TimeDelta":t[r].value=[this._deltaTime/1e3];break;case"u_TotalTime":t[r].value=[this._time/1e3];break;case"u_Resolution":t[r].value=[this.gl.canvas.width,this.gl.canvas.height];break;case"u_Mouse":t[r].value=this._mouse;break;case"u_ProjectionMatrix":i.perspective(t[r].value,this._fieldOfView,this._aspect,this._zNear,this._zFar);break;case"u_ViewMatrix":i.lookAt(t[r].value,this._position,this._target,this._up)}}setGlobalUniforms(t){for(const r in t)if(t.hasOwnProperty(r)){const e=t[r];switch(e.type){case"uniformMatrix4fv":this.gl[e.type](e.location,!1,e.value);break;default:this.gl[e.type](e.location,e.value)}}}updateProjectionMatrix(t){i.perspective(this._programs[t].globalUniforms.u_ProjectionMatrix.value,this._fieldOfView,this._aspect,this._zNear,this._zFar)}updateViewMatrix(t){i.lookAt(this._programs[t].globaluniforms.u_viewmatrix.value,this._position,this._target,this._up)}setDrawParams(t,r){const e=this.getProgram(t);Object.assign(e.drawParams,r)}setFramebufferRoutine(t,r){const e=this.getProgram(t);Object.assign(e.framebufferRoutine,r),e.customFramebufferRoutine=!0}loadShader(t,r){const e=this.gl.createShader(t);return this.gl.shaderSource(e,r),this.gl.compileShader(e),this.gl.getShaderParameter(e,this.gl.COMPILE_STATUS)?e:(alert("An error occurred compiling the shaders: "+this.gl.getShaderInfoLog(e)),this.gl.deleteShader(e),null)}linkProgram(t,r){this._programs[t].geometry.push(r),r.linkProgram(this._programs[t].shader,[geometryTex])}framebuffer(t){this._framebuffers[t]=this.gl.createFramebuffer()}get framebuffers(){return this._framebuffers}framebufferTexture2D(t,r){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this._framebuffers[t]),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,r,0)}get textures(){return this._textures}bindTexture(t){this.gl.bindTexture(this.gl.TEXTURE_2D,t)}get programs(){return this._programs}set cameraPosition(t){this._position=s.fromValues(...t),this.updateAllGlobalUniforms()}set cameraTarget(t){this._target=s.fromValues(...t)}set FOV(t){this._fieldOfView=t*Math.PI/180}bindMainViewport(){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null)}getProgram(t){try{const r=this._programs[t];if(r)return r;throw new TypeError}catch(r){r instanceof TypeError&&console.error(`Shader Program '${t}' is not found, did you mean: '${Object.keys(this._programs)}'?`)}}draw(t){0!=this._oldTimestamp&&(this._deltaTime=t-this._oldTimestamp,this._deltaTime>500&&(this._deltaTime=0)),this._oldTimestamp=t,this._time+=this._deltaTime;for(const t in this._programs)if(this._programs.hasOwnProperty(t)){const r=this._programs[t];if(r.customFramebufferRoutine)for(const t in r.framebufferRoutine)if(r.framebufferRoutine.hasOwnProperty(t)){const e=r.framebufferRoutine[t];switch(t){case"pre":this[e.func](...e.args);break;case"bindFramebuffer":this.gl[t](this.gl.FRAMEBUFFER,this._framebuffers[e]);break;case"framebufferTexture2D":{let[r,i]=e;this.gl[t](this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this._programs[r].globalUniforms[i].value,0);break}case"bindTexture":{let[r,i]=e;this.gl[t](this.gl.TEXTURE_2D,this._programs[r].globalUniforms[i].value);break}}}for(const t in r.drawParams)if(r.drawParams.hasOwnProperty(t)){const e=r.drawParams[t];if("enable"===t)for(const r of e)this.gl[t](this.gl[r]);else if("blendFunc"===t)this.gl[t](this.gl[e[0]],this.gl[e[1]]);else if("depthFunc"===t)this.gl[t](this.gl[e[0]]);else if("clear"===t){if(!e)continue;let r=0;for(const t of e)r|=this.gl[t];this.gl[t](r)}else this.gl[t](...e)}if(r.geometry.length<1)continue;this.gl.useProgram(r.shader),Object.keys(r.globalUniforms).length>0&&(r.uniformNeedsUpdate&&this.updateGlobalUniforms(r.globalUniforms),this.setGlobalUniforms(r.globalUniforms));for(const t of r.geometry)if(r.transformFeedback)t.step(this.gl,this._deltaTime);else switch(this.gl.bindVertexArray(t.VAO),t.needsUpdate&&t.updateModelMatrix(this._time),t.setUniforms(),r.mode){case"POINTS":this.gl.drawArrays(this.gl[r.mode],0,t.numVertices);break;default:this.gl.drawElements(this.gl[r.mode],t.numIndices,this.gl.UNSIGNED_SHORT,0)}this.gl.bindVertexArray(null),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,null)}}loadTexture(t,r,e){const i=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,i),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,1,1,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,new Uint8Array([0,0,255,255]));var s=new Image;console.log(e),s.src=e,s.addEventListener("load",(function(){this.gl.bindTexture(this.gl.TEXTURE_2D,i),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,s),this.gl.generateMipmap(this.gl.TEXTURE_2D)})),this._programs[t].globalUniforms[r]={type:"uniform1i",value:i,location:this.gl.getUniformLocation(this._programs[t].shader,r),unit:0}}dataTexture(t,r){let e={name:"u_Texture",level:0,unit:0,width:1,height:1,data:new Uint8Array([0,0,255,255]),border:0,internalFormat:"RGBA8",format:"RGBA",wrap:"CLAMP_TO_EDGE",filter:"NEAREST",type:"UNSIGNED_BYTE"};Object.assign(e,r);const i=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,i),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl[e.internalFormat],e.width,e.height,e.border,this.gl[e.format],this.gl[e.type],e.data),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl[e.wrap]),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl[e.wrap]),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl[e.filter]),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl[e.filter]),this._programs[t].globalUniforms[e.name]={type:"uniform1i",value:i,location:this.gl.getUniformLocation(this._programs[t].shader,e.name),unit:e.unit}}swapTextures(t,r){const[e,i]=t,[s,n]=r,a=this._programs[s].globalUniforms[n].value;this._programs[s].globalUniforms[n].value=this._programs[e].globalUniforms[i].value,this._programs[e].globalUniforms[i].value=a}initMouse(){this._canvas.addEventListener("mousemove",t=>{this._mouse[0]=2*t.clientX/this._WIDTH-1,this._mouse[1]=-(2*t.clientY/this._HEIGHT-1)})}Quad(t=null){const r=new ir(this.gl);if(t)for(const e of t)this._programs[e].geometry.push(r),r.linkProgram(this._programs[e].shader);return r}Cube(t,r){const e=new er(this.gl,r);if(t)for(const r of t)this._programs[r].geometry.push(e),e.linkProgram(this._programs[r].shader);return e}RandomPointSphere(t,r){const e=new Jt(this.gl,r);if(t)for(const r of t)this._programs[r].geometry.push(e),e.linkProgram(this._programs[r].shader);return e}PointCloud(t,r){const e=new tr(this.gl,r);if(t)for(const r of t)this._programs[r].geometry.push(e),e.linkProgram(this._programs[r].shader);return e}Icosahedron(t){const r=new $t(this.gl);return this._programs[t].geometry.push(r),r.linkProgram(this._programs[t].shader),r}ParticleSystem(t,r,e=null){const i=new rr(this.gl,e);return this._programs[t].geometry.push(i),this._programs[r].geometry.push(i),i.linkProgram(this._programs[t].shader,this._programs[r].shader),i}GameOfLifeTexture2D(t,r){Object.keys(arguments).length<2&&console.error("GameOfLife requires an 'update' and a 'render' program");const e=new GameOfLifeTexture2D(this.gl);return this._programs[t].geometry.push(e),this._programs[r].geometry.push(e),e.linkProgram(this._programs[t].shader,this._programs[r].shader),e}}}})}));

/***/ }),

/***/ "./assets/js/gallery.js":
/*!******************************!*\
  !*** ./assets/js/gallery.js ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _GL_BP_prod_bundle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GL_BP/prod.bundle.js */ "./assets/js/GL_BP/prod.bundle.js");
/* harmony import */ var _GL_BP_prod_bundle_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_GL_BP_prod_bundle_js__WEBPACK_IMPORTED_MODULE_0__);


const overlay = document.getElementById("overlay");
const warning = document.getElementById("warning");
const close = document.getElementById("close");
const demoTitle = document.getElementById("demoTitle");
const galleryItems = document.querySelectorAll(".item");
let GL, dim;


var isFirefox = typeof InstallTrigger !== 'undefined';
if(!isFirefox) {
    warning.classList.toggle("hide", false);
}

for(const item of galleryItems){
    item.addEventListener("click", showOverlay)
}

close.addEventListener("click", hideOverlay);

function showOverlay(e){
    overlay.style.top = String(window.pageYOffset + "px");
    overlay.classList.toggle("hide", false);
    console.log("showing overlay");
    const currentFunction = e.target.getAttribute('name');
    main(currentFunction);
}

function hideOverlay(e){
    overlay.classList.toggle("hide", true);
}


function main(currentFunction){
    const regex = /_/g;
    dim = window.screen.width < 600 ? window.screen.width-80 : 512;
    demoTitle.innerHTML = currentFunction.replace(regex, ' ');
    GL = new _GL_BP_prod_bundle_js__WEBPACK_IMPORTED_MODULE_0___default.a();
    GL.initTarget(dim, dim, "overlayCanvas");

    switch(currentFunction) {
        case 'Ten_Thousand_Points' : {
            pointSphere();
            break;
        }
        case 'GPU_Game_of_Life' : {
            golTexture2d(2);
            break;
        }
        case 'Point_Cube' : {
            pointCube();
            break;
        }
        case 'Coloured_Vertices' : {
            icosahedron();
            break;
        }
        case 'Many_Particles' : {
            particles3D();
            break;
        }
        case 'Simple_Particles' : {
            simpleParticles();
            break;
        }
        default : {
            fourOhfour();
        }
    }
}

// -------------------------------------------------------------------------------
function golTexture2d(_scale){
    const quadVert = __webpack_require__(/*! ./glsl/gameoflife/quadVert.glsl */ "./assets/js/glsl/gameoflife/quadVert.glsl");
    const updateFrag = __webpack_require__(/*! ./glsl/gameoflife/golFrag.glsl */ "./assets/js/glsl/gameoflife/golFrag.glsl");
    const renderFrag = __webpack_require__(/*! ./glsl/gameoflife/copyFrag.glsl */ "./assets/js/glsl/gameoflife/copyFrag.glsl");

    const GOL = {
        viewsize : [dim, dim],
        statesize: [dim/_scale, dim/_scale],
    };

    GL.initShaderProgram('update', quadVert, updateFrag, null, 'TRIANGLES');
    GL.initShaderProgram('render', quadVert, renderFrag, null, 'TRIANGLES');

    GL.setDrawParams('update', {
        viewport       : [0, 0, GOL.statesize[0], GOL.statesize[1]],
    });

    GL.setFramebufferRoutine('update', {
        bindFramebuffer : 'step',
        framebufferTexture2D : ['update', 'u_StateUpdate'],
        bindTexture : ['render', 'u_StateRender'],
    });

    GL.setFramebufferRoutine('render', {
        pre     : {
            func : 'swapTextures',
            args : [['update','u_StateUpdate'], ['render','u_StateRender']],
        },
        bindFramebuffer : null,
        bindTexture : ['render', 'u_StateRender'],
    });

    GL.framebuffer('step');

    let d = [];
    for(let i=0, size = GOL.statesize[0]*GOL.statesize[1]; i<size; i++){
        const state = Math.random() < 0.5 ? 255 : 0
        d.push(state, state, state, 0.0);
    }

    let d8 = new Uint8Array(d);

    GL.dataTexture('update', {
        name : 'u_StateUpdate',
        width : GOL.statesize[0],
        height : GOL.statesize[1],
        wrap : 'REPEAT',
        data           : d8
    });

    GL.dataTexture('render', {
        name : 'u_StateRender',
        width : GOL.statesize[0],
        height : GOL.statesize[1],
        wrap : 'REPEAT',
        data           : d8
    });


    GL.initProgramUniforms('render', [ 'u_Resolution' ]);

    GL.addProgramUniform('render', {
        name : 'u_Scale',
        type : 'uniform2fv',
        value : GOL.viewsize,
    });
    GL.addProgramUniform('update', {
        name : 'u_Scale',
        type : 'uniform2fv',
        value : GOL.statesize,
    });

    const GameOfLife = GL.Quad(['update', 'render']);

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
}
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function particles3D(){
    const updateVert = __webpack_require__(/*! ./glsl/particles3d/particle_update_vert.glsl */ "./assets/js/glsl/particles3d/particle_update_vert.glsl");
    const updateFrag = __webpack_require__(/*! ./glsl/particles3d/passthru_frag.glsl */ "./assets/js/glsl/particles3d/passthru_frag.glsl");
    const renderVert = __webpack_require__(/*! ./glsl/particles3d/particle_render_vert.glsl */ "./assets/js/glsl/particles3d/particle_render_vert.glsl");
    const renderFrag = __webpack_require__(/*! ./glsl/particles3d/particle_render_frag.glsl */ "./assets/js/glsl/particles3d/particle_render_frag.glsl");

    const transformFeedbackVaryings = [
        "v_Position",
        "v_Velocity",
        "v_Age",
        "v_Life",
    ];

    GL.initShaderProgram('update', updateVert, updateFrag, transformFeedbackVaryings, null);
    GL.initShaderProgram('render', renderVert, renderFrag, null, 'POINTS');

    let d = [];
    for(let i=0; i<512*512; ++i){
        d.push(Math.random()*255);
        d.push(Math.random()*255);
        d.push(Math.random()*255);
    }

    GL.dataTexture('update', {
        name           :'u_RgNoise',
        width          : 512,
        height         : 512,
        internalFormat : 'RGB8',
        format         : 'RGB',
        data           : new Uint8Array(d),
    });

    GL.initProgramUniforms('update', [ 'u_TimeDelta', 'u_TotalTime' ]);
    GL.initProgramUniforms('render', [ 'u_ProjectionMatrix', 'u_ViewMatrix' ]);

    GL.setDrawParams('render', {
        clearColor : [0.0, 0.0, 0.0, 1.0],
        enable     : ['BLEND', 'CULL_FACE', 'DEPTH_TEST'], // if enable is changed, it will override defaults
        blendFunc  : ['SRC_ALPHA', 'ONE_MINUS_SRC_ALPHA'],
        depthFunc  : ['LEQUAL']
    });

    GL.cameraPosition = [0, 2, 3.5];

    const opts = { 
        numParticles : 100000,
        lifeRange    : [1.01, 10.1],
        dimensions : 3, 
        birthRate : 0.99
    };
    const ParticleSystem = GL.ParticleSystem('update', 'render', opts);
    ParticleSystem.rotate = { s:0.0005, a:[0,1,0]};
    GL.initGeometryUniforms('render', [ 'u_ModelMatrix' ]);

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
}
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function simpleParticles() {
    const updateVert = __webpack_require__(/*! ./glsl/TFBparticles/particle_update_vert.glsl */ "./assets/js/glsl/TFBparticles/particle_update_vert.glsl");
    const updateFrag = __webpack_require__(/*! ./glsl/TFBparticles/passthru_frag.glsl */ "./assets/js/glsl/TFBparticles/passthru_frag.glsl");
    const renderVert = __webpack_require__(/*! ./glsl/TFBparticles/particle_render_vert.glsl */ "./assets/js/glsl/TFBparticles/particle_render_vert.glsl");
    const renderFrag = __webpack_require__(/*! ./glsl/TFBparticles/particle_render_frag.glsl */ "./assets/js/glsl/TFBparticles/particle_render_frag.glsl");

    const transformFeedbackVaryings = [
        "v_Position",
        "v_Velocity",
        "v_Age",
        "v_Life",
    ];


    GL.initShaderProgram('update', updateVert, updateFrag, transformFeedbackVaryings, null);
    GL.initShaderProgram('render', renderVert, renderFrag, null, 'POINTS');

    GL.initProgramUniforms('update', [ 'u_TimeDelta', 'u_Mouse' ]);
    GL.initProgramUniforms('render', [ 'u_ProjectionMatrix', 'u_ViewMatrix' ]);

    GL.setDrawParams('render', {
        clearColor : [0.1, 0.1, 0.3, 1.0],
        enable     : ['BLEND', 'CULL_FACE', 'DEPTH_TEST'], // if enable is changed, it will override defaults
        blendFunc  : ['SRC_ALPHA', 'ONE_MINUS_SRC_ALPHA'],
    });

    let d = [];
    for(let i=0; i<512*512; ++i){
        d.push(Math.random()*255);
        d.push(Math.random()*255);
    }

    GL.dataTexture('update', {
        name           :'u_RgNoise',
        width          : 512,
        height         : 512,
        internalFormat : 'RG8',
        format         : 'RG',
        data           : new Uint8Array(d),
    });

    const opts = { numParticles : 200, birthRate:0.1 };
    const ParticleSystem = GL.ParticleSystem('update', 'render', opts);
    GL.initGeometryUniforms('render', [ 'u_ModelMatrix' ]);

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
};
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function icosahedron() {
    const facesVert = __webpack_require__(/*! ./glsl/facesVert.glsl */ "./assets/js/glsl/facesVert.glsl");
    const facesFrag = __webpack_require__(/*! ./glsl/facesFrag.glsl */ "./assets/js/glsl/facesFrag.glsl");

    GL.initShaderProgram('faces', facesVert, facesFrag, null, 'TRIANGLES');

    const icos = GL.Icosahedron('faces');
    icos.rotate = {s:0.001, a:[1,1,0]};

    GL.initProgramUniforms('faces', [
        'u_ProjectionMatrix',
        'u_ViewMatrix',
    ]);
    GL.cameraPosition = [0, 1, 4];

    GL.initGeometryUniforms('faces', [ 'u_ModelMatrix' ]);

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
};
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function pointSphere() {
    const pointsVert = __webpack_require__(/*! ./glsl/pointsVert.glsl */ "./assets/js/glsl/pointsVert.glsl");
    const pointsFrag = __webpack_require__(/*! ./glsl/pointsFrag.glsl */ "./assets/js/glsl/pointsFrag.glsl");
    const basicFrag = __webpack_require__(/*! ./glsl/basicFrag.glsl */ "./assets/js/glsl/basicFrag.glsl");

    GL.initShaderProgram('points', pointsVert, pointsFrag, null, 'POINTS');
    GL.initShaderProgram('lines', pointsVert, basicFrag, null, 'LINES');

    GL.setDrawParams('lines', { clear : null });

    const points = GL.RandomPointSphere(['points'], 10000);
    points.rotate = {s:0.001, a:[1,1,0]};

    const cube = GL.Cube(['lines'], 'DEBUG');
    cube.rotate = {s:0.001, a:[1,1,0]};

    GL.initProgramUniforms('points', [
        'u_ProjectionMatrix',
        'u_ViewMatrix',
    ]);
    GL.initGeometryUniforms('points', [ 'u_ModelMatrix' ]);
    GL.initProgramUniforms('lines', [
        'u_ProjectionMatrix',
        'u_ViewMatrix',
    ]);
    GL.initGeometryUniforms('lines', [ 'u_ModelMatrix' ]);
    GL.cameraPosition = [0, 2, 4];

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
};
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function pointCube() {
    const pointsVert = __webpack_require__(/*! ./glsl/pointCube/pointsVert.glsl */ "./assets/js/glsl/pointCube/pointsVert.glsl");
    const pointsFrag = __webpack_require__(/*! ./glsl/pointCube/pointsFrag.glsl */ "./assets/js/glsl/pointCube/pointsFrag.glsl");

    GL.initShaderProgram('points', pointsVert, pointsFrag, null, 'POINTS');

    const points = GL.PointCloud(['points'], 1000);
    points.rotate = {s:-0.0005, a:[0.5,0.8,0.2]};

    GL.initProgramUniforms('points', [
        'u_ProjectionMatrix',
        'u_ViewMatrix',
    ]);
    GL.initGeometryUniforms('points', [ 'u_ModelMatrix' ]);

    let d = [];
    for(let i=0; i<8; i++){
        for(let j=0; j<8; j++){
            for(let k=0; k<8; k++){
                d.push(
                    Math.floor((i/8)* 255),
                    Math.floor((j/8)* 255),
                    Math.floor((k/8)* 255),
                    0);
            }
        }
    }

    GL.dataTexture('points', {
        name : 'u_Texture',
        width : 8*8*8,
        height : 1,
        data : new Uint8Array(d),
    });

    GL.cameraPosition = [0, 1.5, 1.5];

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
};
// -------------------------------------------------------------------------------

// -------------------------------------------------------------------------------
function fourOhfour(){
    /* 404 CUBE */
    const textureVert = __webpack_require__(/*! ./glsl/textureVert.glsl */ "./assets/js/glsl/textureVert.glsl");
    const textureFrag = __webpack_require__(/*! ./glsl/textureFrag.glsl */ "./assets/js/glsl/textureFrag.glsl");

    console.error("404: GL_BP Program Not Found");
    GL.initShaderProgram('texture', textureVert, textureFrag, null, 'TRIANGLES');


    GL.initProgramUniforms('texture', [
        'u_ProjectionMatrix',
        'u_ViewMatrix',
    ]);

    const cube = GL.Cube(['texture'], '404');
    cube.rotate = { s:-0.002, a:[0.2,0.8,0.5]};

    GL.initGeometryUniforms('texture', [ 'u_ModelMatrix' ]);

    const r = [255, 0, 0, 255];
    const w = [255, 255, 255, 255];

    GL.dataTexture('texture', {
        width : 10,
        height : 5,
        data : new Uint8Array([
            ...w, ...w, ...w, ...r, ...w,...w, ...w, ...r, ...w, ...w,
            ...r, ...r, ...r, ...r, ...r,...w, ...r, ...w, ...r, ...w,
            ...w, ...r, ...w, ...r, ...w,...w, ...r, ...w, ...r, ...w,
            ...w, ...w, ...r, ...r, ...w,...w, ...r, ...w, ...r, ...w,
            ...w, ...w, ...w, ...r, ...w,...w, ...w, ...r, ...w, ...w,
        ]),
    });

    GL.cameraPosition = [0, 0, 5];

    function draw(now) {
        GL.draw(now);
        window.requestAnimationFrame(draw);
    }
    window.requestAnimationFrame(draw);
}
// -------------------------------------------------------------------------------


/***/ }),

/***/ "./assets/js/glsl/TFBparticles/particle_render_frag.glsl":
/*!***************************************************************!*\
  !*** ./assets/js/glsl/TFBparticles/particle_render_frag.glsl ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin float v_Age;\nin float v_Life;\n\nout vec4 o_FragColor;\n\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d){\n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid main() {\n    float t = v_Age/v_Life;\n    float distance = length(2.0 * gl_PointCoord - 1.0);\n    if (distance > 1.0) {\n            discard;\n    }\n    float invT = 1.0 - t;\n    o_FragColor = vec4(invT, invT, invT, 1.0);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/TFBparticles/particle_render_vert.glsl":
/*!***************************************************************!*\
  !*** ./assets/js/glsl/TFBparticles/particle_render_vert.glsl ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nin vec2 i_Position;\nin float i_Age;\nin float i_Life;\nin vec2 i_Velocity;\n\nout float v_Age;\nout float v_Life;\n\nvoid main(){\n    v_Age = i_Age;\n    v_Life = i_Life;\n\n    float size = 1.0 + 10.0 * (1.0 - i_Age/i_Life);\n    gl_PointSize = size;\n\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position, 0.0, 1.0);\n    // gl_Position = vec4(i_Position, 0.0, 1.0);\n    // gl_PointSize = ((gl_Position.w * -1.0) + 1.0) * size;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/TFBparticles/particle_update_vert.glsl":
/*!***************************************************************!*\
  !*** ./assets/js/glsl/TFBparticles/particle_update_vert.glsl ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\n\n#define PI 3.142\n\nprecision mediump float;\n\nuniform float u_TimeDelta;\n// uniform vec2 u_Mouse;\nuniform sampler2D u_RgNoise;\n\nvec2 u_Gravity = vec2(0.0, -0.8);\nvec2 u_Origin = vec2(0.0, -0.3);\nfloat u_MinTheta = PI/2.0 - 0.5;\nfloat u_MaxTheta = PI/2.0 + 0.5;\nfloat u_MinSpeed = 0.5;\nfloat u_MaxSpeed = 1.3;\n\nin vec2 i_Position;\nin float i_Age;\nin float i_Life;\nin vec2 i_Velocity;\n\nout vec2 v_Position;\nout float v_Age;\nout float v_Life;\nout vec2 v_Velocity;\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\n\nvoid main(){\n    if(i_Age >= i_Life) {\n        ivec2 noise_coord = ivec2(gl_VertexID % 512, gl_VertexID / 512);\n        vec3 rand = texelFetch(u_RgNoise, noise_coord, 0).rgb;\n        float theta = u_MinTheta + rand.r*(u_MaxTheta - u_MinTheta);\n\n        float x = cos(theta);\n        float y = sin(theta);\n\n        v_Position = u_Origin;\n        // v_Position = u_Mouse;\n\n        v_Age = 0.0;\n        v_Life = i_Life;\n\n        v_Velocity = vec2(x, y) * (u_MinSpeed + rand.g * (u_MaxSpeed - u_MinSpeed));\n    } else {\n        v_Position = i_Position + i_Velocity * u_TimeDelta;\n        v_Age = i_Age + u_TimeDelta;\n        v_Life = i_Life;\n        v_Velocity = i_Velocity + u_Gravity * u_TimeDelta;\n    }\n}\n"

/***/ }),

/***/ "./assets/js/glsl/TFBparticles/passthru_frag.glsl":
/*!********************************************************!*\
  !*** ./assets/js/glsl/TFBparticles/passthru_frag.glsl ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nout vec4 o_FragColor;\n\nvoid main() {\n    o_FragColor = vec4(1.0);\n}\n\n"

/***/ }),

/***/ "./assets/js/glsl/basicFrag.glsl":
/*!***************************************!*\
  !*** ./assets/js/glsl/basicFrag.glsl ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nout vec4 OUTCOLOUR;\n\nvoid main(){\n    OUTCOLOUR = vec4(1.0, 0.0, 0.0, 1.0);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/facesFrag.glsl":
/*!***************************************!*\
  !*** ./assets/js/glsl/facesFrag.glsl ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 v_Color;\n\nout vec4 OUTCOLOUR;\n\nvoid main(){\n\n    OUTCOLOUR = vec4(v_Color, 1.0);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/facesVert.glsl":
/*!***************************************!*\
  !*** ./assets/js/glsl/facesVert.glsl ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 i_Position;\nin vec3 i_Normal;\nin vec3 i_Color;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nout vec3 v_Color;\nout vec3 v_Normal;\n\nvoid main(){\n    v_Color = i_Color;\n    v_Normal = i_Normal;\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position, 1.0);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/gameoflife/copyFrag.glsl":
/*!*************************************************!*\
  !*** ./assets/js/glsl/gameoflife/copyFrag.glsl ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nuniform sampler2D u_StateRender;\nuniform vec2 u_Scale;\n\nin vec2 v_TexCoord;\nout vec4 OUTCOLOR;\n\nvoid main(){\n    OUTCOLOR = texture(u_StateRender, gl_FragCoord.xy / u_Scale);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/gameoflife/golFrag.glsl":
/*!************************************************!*\
  !*** ./assets/js/glsl/gameoflife/golFrag.glsl ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nuniform sampler2D u_StateUpdate;\nuniform vec2 u_Scale;\n\nin vec2 v_TexCoord;\nout vec4 OUTCOLOR;\n\nint get(vec2 _offset){\n    return int(texture(u_StateUpdate, (gl_FragCoord.xy + _offset) / u_Scale).r);\n}\n\nvoid main(){\n    int sum =\n        get(vec2(-1.0, -1.0)) +\n        get(vec2(-1.0,  0.0)) +\n        get(vec2(-1.0,  1.0)) +\n        get(vec2( 0.0, -1.0)) +\n        get(vec2( 0.0,  1.0)) +\n        get(vec2( 1.0, -1.0)) +\n        get(vec2( 1.0,  0.0)) +\n        get(vec2( 1.0,  1.0));\n    if (sum == 3) {\n        OUTCOLOR = vec4(1.0, 1.0, 1.0, 1.0);\n    } else if (sum == 2) {\n        float current = float(get(vec2(0.0, 0.0)));\n        OUTCOLOR = vec4(current, current, current, 1.0);\n    } else {\n        OUTCOLOR = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}\n"

/***/ }),

/***/ "./assets/js/glsl/gameoflife/quadVert.glsl":
/*!*************************************************!*\
  !*** ./assets/js/glsl/gameoflife/quadVert.glsl ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 i_Position;\nin vec3 i_Normal;\nin vec2 i_TexCoord;\n\nout vec2 v_TexCoord;\nout vec3 v_Normal;\n\nvoid main(){\n    gl_Position = vec4(i_Position,  1.0);\n    v_TexCoord = i_TexCoord;\n    v_Normal = i_Normal;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/particles3d/particle_render_frag.glsl":
/*!**************************************************************!*\
  !*** ./assets/js/glsl/particles3d/particle_render_frag.glsl ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin float v_Age;\nin float v_Life;\n\nout vec4 o_FragColor;\n\nvec3 palette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d){\n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid main() {\n    float t = v_Age/v_Life;\n    float distance = length(2.0 * gl_PointCoord - 1.0);\n    if (distance > 1.0) {\n            discard;\n    }\n    // o_FragColor = vec4(0.1, 0.1, 0.1, 1.0);\n    o_FragColor = vec4(\n            palette(t,\n                vec3(0.9,0.7,0.8),\n                vec3(0.7,0.8,0.3),\n                vec3(0.75,0.6,0.6),\n                vec3(0.1,0.15,0.20)), 1.0-t\n            );\n    // o_FragColor = vec4(\n            // palette(t,\n                // vec3(0.8,0.3,0.2),\n                // vec3(0.7,0.3,0.3),\n                // vec3(0.9,0.4,0.2),\n                // vec3(0.2,0.15,0.20)), 1.0-t\n            // );\n}\n"

/***/ }),

/***/ "./assets/js/glsl/particles3d/particle_render_vert.glsl":
/*!**************************************************************!*\
  !*** ./assets/js/glsl/particles3d/particle_render_vert.glsl ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nin vec3 i_Position;\nin float i_Age;\nin float i_Life;\nin vec3 i_Velocity;\n\nout float v_Age;\nout float v_Life;\n\nvoid main(){\n    v_Age = i_Age;\n    v_Life = i_Life;\n\n    // float size = 1.0 + 5.0 * (1.0 - i_Age/i_Life);\n    float ageFactor = 1.0 - i_Age/i_Life;\n\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position, 1.0);\n    // gl_Position = vec4(i_Position, 0.0, 1.0);\n    gl_PointSize = ((gl_Position.z )*0.75 );// * ageFactor;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/particles3d/particle_update_vert.glsl":
/*!**************************************************************!*\
  !*** ./assets/js/glsl/particles3d/particle_update_vert.glsl ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\n\n#define PI 3.142\n\nprecision mediump float;\n\nuniform float u_TimeDelta;\nuniform float u_TotalTime;\nuniform sampler2D u_RgNoise;\nuniform sampler2D u_ForceField;\n// uniform vec2 u_Gravity;\n\n// PARTICLE SPECIFIC ----------\n// uniform vec2 u_Origin;\n// uniform float u_MinTheta;\n// uniform float u_MaxTheta;\n// uniform float u_MinSpeed;\n// uniform float u_MaxSpeed;\n// ----------------------------\n\nvec3 u_Gravity = vec3(0.0, 0.7, 0.0);\nvec3 u_Origin = vec3(0.0, 0.0, 0.0);\n// float u_MinTheta = PI/2.0 - 0.3;\n// float u_MaxTheta = PI/2.0 + 0.3;\nfloat u_MinTheta = -PI;\nfloat u_MaxTheta = PI;\nfloat u_MinSpeed = 0.01;\nfloat u_MaxSpeed = 0.02;\n\n// uniform sampler2D u_ForceField;\n\n// PARTICLE SPECIFIC ----------\nin vec3 i_Position;\nin float i_Age;\nin float i_Life;\nin vec3 i_Velocity;\n// ----------------------------\n\n\n// Transform Feedback Varyings\nout vec3 v_Position;\nout float v_Age;\nout float v_Life;\nout vec3 v_Velocity;\n\nvec3 mod289(vec3 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\n\nvec4 permute(vec4 x) {\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec3 v) {\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n    // First corner\n    vec3 i  = floor(v + dot(v, C.yyy) );\n    vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n    // Other corners\n    vec3 g = step(x0.yzx, x0.xyz);\n    vec3 l = 1.0 - g;\n    vec3 i1 = min( g.xyz, l.zxy );\n    vec3 i2 = max( g.xyz, l.zxy );\n\n    //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n    //   x1 = x0 - i1  + 1.0 * C.xxx;\n    //   x2 = x0 - i2  + 2.0 * C.xxx;\n    //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n    vec3 x1 = x0 - i1 + C.xxx;\n    vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n    vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n    // Permutations\n    i = mod289(i);\n    vec4 p = permute( permute( permute(\n                    i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n                + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n            + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n    // Gradients: 7x7 points over a square, mapped onto an octahedron.\n    // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n    float n_ = 0.142857142857; // 1.0/7.0\n    vec3  ns = n_ * D.wyz - D.xzx;\n\n    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n    vec4 x_ = floor(j * ns.z);\n    vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n    vec4 x = x_ *ns.x + ns.yyyy;\n    vec4 y = y_ *ns.x + ns.yyyy;\n    vec4 h = 1.0 - abs(x) - abs(y);\n\n    vec4 b0 = vec4( x.xy, y.xy );\n    vec4 b1 = vec4( x.zw, y.zw );\n\n    //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n    //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n    vec4 s0 = floor(b0)*2.0 + 1.0;\n    vec4 s1 = floor(b1)*2.0 + 1.0;\n    vec4 sh = -step(h, vec4(0.0));\n\n    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n    vec3 p0 = vec3(a0.xy,h.x);\n    vec3 p1 = vec3(a0.zw,h.y);\n    vec3 p2 = vec3(a1.xy,h.z);\n    vec3 p3 = vec3(a1.zw,h.w);\n\n    //Normalise gradients\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n\n    // Mix final noise value\n    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n    m = m * m;\n    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                dot(p2,x2), dot(p3,x3) ) );\n}\n\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\n\nvoid main(){\n    if(i_Age >= i_Life) {\n        ivec2 noise_coord = ivec2(gl_VertexID % 512, gl_VertexID / 512);\n        vec3 rand = texelFetch(u_RgNoise, noise_coord, 0).rgb;\n        // float theta = u_MinTheta + rand.r*(u_MaxTheta - u_MinTheta);\n        float theta = u_MinTheta + rand.r*(u_MaxTheta - u_MinTheta);\n        float phi   = u_MinTheta + rand.b*(u_MaxTheta - u_MinTheta);\n\n        float x = sin(theta)*cos(phi);\n        float y = sin(theta)*sin(phi);\n        float z = cos(theta);\n\n        // v_Position = u_Origin;\n        v_Position = vec3((rand.x-0.5)*0.1, -1.6, (rand.z-0.5)*0.8);\n        v_Age = 0.0;\n        v_Life = i_Life;\n\n        v_Velocity = vec3(x, y, z) * (u_MinSpeed + rand.g * (u_MaxSpeed - u_MinSpeed));\n    } else {\n        v_Position = i_Position + i_Velocity * u_TimeDelta;\n        v_Age = i_Age + u_TimeDelta;\n        v_Life = i_Life;\n        // vec3 force = 0.5 * (2.0 * texture(u_ForceField, i_Position.xy).rgb - vec3(1.0));\n        vec3 force = vec3(\n                snoise(i_Position.xyz),\n                snoise(i_Position.yzx),\n                snoise(i_Position.zxy)\n                );\n        v_Velocity = i_Velocity + u_Gravity * u_TimeDelta + force * u_TimeDelta;\n    }\n}\n"

/***/ }),

/***/ "./assets/js/glsl/particles3d/passthru_frag.glsl":
/*!*******************************************************!*\
  !*** ./assets/js/glsl/particles3d/passthru_frag.glsl ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nout vec4 o_FragColor;\n\nvoid main() {\n    o_FragColor = vec4(1.0);\n}\n\n"

/***/ }),

/***/ "./assets/js/glsl/pointCube/pointsFrag.glsl":
/*!**************************************************!*\
  !*** ./assets/js/glsl/pointCube/pointsFrag.glsl ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nout vec4 OUTCOLOUR;\n\nvoid main(){\n    float distance = length(2.0 * gl_PointCoord - 1.0);\n    if (distance > 1.0) {\n            discard;\n    }\n    OUTCOLOUR = vec4(0.0, 0.0, 0.0, 1.0);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/pointCube/pointsVert.glsl":
/*!**************************************************!*\
  !*** ./assets/js/glsl/pointCube/pointsVert.glsl ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 i_Position;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nuniform sampler2D u_Texture;\n\nfloat off = 0.5-(1.0/16.0);\n\nvoid main(){\n    // float vel = texelFetch(u_Texture, ivec2(gl_VertexID, 0), 0).r;\n    vec3 position = texelFetch(u_Texture, ivec2(gl_VertexID, 0), 0).rgb;\n    // position /= 255.0;\n    position -= off;\n    // position -= vec3(0.5);\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position*position, 1.0);\n    // gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position, 1.0);\n    gl_PointSize = (gl_Position.w * -1.0) + 6.0;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/pointsFrag.glsl":
/*!****************************************!*\
  !*** ./assets/js/glsl/pointsFrag.glsl ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nout vec4 OUTCOLOUR;\n\nvoid main(){\n    float distance = length(2.0 * gl_PointCoord - 1.0);\n    if (distance > 1.0) {\n            discard;\n    }\n    OUTCOLOUR = vec4(0.0, 0.0, 0.0, 1.0);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/pointsVert.glsl":
/*!****************************************!*\
  !*** ./assets/js/glsl/pointsVert.glsl ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 i_Position;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nvoid main(){\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position, 1.0);\n    gl_PointSize = (gl_Position.w * -1.0) + 6.0;\n}\n"

/***/ }),

/***/ "./assets/js/glsl/textureFrag.glsl":
/*!*****************************************!*\
  !*** ./assets/js/glsl/textureFrag.glsl ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec2 v_TexCoord;\n\nuniform sampler2D u_Texture;\n\nout vec4 OUTCOLOUR;\n\nvoid main(){\n    OUTCOLOUR = texture(u_Texture, v_TexCoord);\n}\n"

/***/ }),

/***/ "./assets/js/glsl/textureVert.glsl":
/*!*****************************************!*\
  !*** ./assets/js/glsl/textureVert.glsl ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#version 300 es\nprecision mediump float;\n\nin vec3 i_Position;\nin vec2 i_TexCoord;\n\nuniform mat4 u_ProjectionMatrix;\nuniform mat4 u_ViewMatrix;\nuniform mat4 u_ModelMatrix;\n\nout vec2 v_TexCoord;\n\nvoid main(){\n    gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(i_Position, 1.0);\n\n    v_TexCoord = i_TexCoord;\n}\n"

/***/ })

/******/ });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,